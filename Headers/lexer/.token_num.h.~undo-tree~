(undo-tree-save-format-version . 1)
"4bd9f9c7ccce8b4ad581ee79da0152968d0eb1bb"
[nil nil nil nil (26067 16717 725381 872000) 0 nil]
([nil nil ((39 . 44) (37 . 39) (#("B" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -37) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 38 (31 . 38) (#("1" 0 1 (fontified t c-in-sws t)) . -31) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 32 (31 . 32) (apply yas--snippet-revive 24 31 #s(yas--snippet nil nil #s(yas--exit 31 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 31 nil) 2 nil nil nil nil)) (24 . 31) (#("define $0" 0 9 (fontified nil)) . 24) (undo-tree-id11 . -9) (24 . 33) (#("d" 0 1 (c-in-sws t fontified nil)) . 24) (undo-tree-id12 . -1) (24 . 25) (#("define macro" 0 12 (c-in-sws t fontified nil)) . -24) (undo-tree-id13 . -12) (24 . 36) (#("de" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -24) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) 26 (24 . 26) (23 . 24) (23 . 23) (23 . 24) (47 . 49) (47 . 50) (#("    " 0 4 (fontified t)) . 46) (undo-tree-id17 . -4) (undo-tree-id18 . -4) 50 (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -50) (undo-tree-id19 . -1) 51 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -46) (undo-tree-id20 . -1) (undo-tree-id21 . 1) (undo-tree-id22 . -1) 47 (45 . 47) (45 . 49) (44 . 44) (44 . 45) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 44) (undo-tree-id23 . -5) (undo-tree-id24 . -5) 49 (52 . 58) (#("      " 0 6 (fontified nil)) . 52) (51 . 52) (45 . 49) (44 . 44) (44 . 45) (#("  " 0 2 (fontified t)) . 44) (undo-tree-id25 . -2) (undo-tree-id26 . -2) 46 (#("

  " 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t)) . 44) (undo-tree-id27 . -2) (undo-tree-id28 . -4) 48 (46 . 50) (45 . 45) (45 . 46) (#("    " 0 4 (fontified t)) . 45) (undo-tree-id29 . -4) (undo-tree-id30 . -4) 49 (45 . 49) (44 . 44) (44 . 45) (#("   " 0 3 (fontified t)) . 44) (undo-tree-id31 . -3) 47 (#("
 " 0 1 (fontified t) 1 2 (fontified t)) . 44) (undo-tree-id32 . -2) (undo-tree-id33 . -2) 46 (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -46) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 47 (46 . 47) (45 . 49) (44 . 44) (44 . 45) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 44) (undo-tree-id36 . -5) 49 (51 . 57) (50 . 52) (45 . 49) (44 . 44) (44 . 45) (43 . 44) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -43) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 44 (#("   " 0 3 (fontified t)) . 44) (undo-tree-id39 . -3) 47 (#("
 " 0 1 (fontified t) 1 2 (fontified t)) . 44) (undo-tree-id40 . -2) (undo-tree-id41 . -2) 46 (45 . 49) (44 . 44) (44 . 45) (#(" " 0 1 (fontified t)) . 44) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 45 (49 . 54) (#("e" 0 1 (fontified nil)) . 49) (undo-tree-id44 . -1) (49 . 50) (#("endif" 0 5 (fontified nil)) . -49) (undo-tree-id45 . -5) (49 . 54) (#("en" 0 1 (fontified t face font-lock-preprocessor-face) 1 2 (fontified t face font-lock-preprocessor-face)) . -49) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) 51 (49 . 51) (48 . 49) (#("
  
    " 0 1 (fontified t) 1 4 (fontified t) 4 8 (fontified t)) . -46) (55 . 55) (55 . 56) (13 . 22) (#("J" 0 1 (fontified t c-in-sws t)) . -13) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("K" 0 1 (fontified t c-in-sws t)) . -14) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 15 (11 . 15) (9 . 11) (apply yas--snippet-revive 2 9 #s(yas--snippet nil nil #s(yas--exit 9 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 9 nil) 1 nil nil nil nil)) (2 . 9) (#("ifndef $0" 0 9 (c-in-sws t fontified nil)) . 2) (undo-tree-id55 . -9) (2 . 11) (#("i" 0 1 (c-in-sws t fontified nil)) . 2) (undo-tree-id56 . -1) (2 . 3) (#("ifndef macro" 0 12 (c-in-sws t fontified nil)) . -2) (undo-tree-id57 . -12) (2 . 14) (#("if" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) 4 (3 . 4) (#("d" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -3) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("f" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -4) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 5 (2 . 5) (1 . 2) (1 . 1) (1 . 2) (1 . 1) (1 . 2) (1 . 1) (1 . 2) (apply yas--snippet-revive 1 31 #s(yas--snippet nil (#s(yas--field 1 11 20 nil nil nil t #s(yas--exit 25 nil))) #s(yas--exit 25 nil) 0 nil #s(yas--field 1 11 20 nil nil nil t #s(yas--exit 25 nil)) nil nil)) (12 . 20) (#("identifier" 0 10 (fontified nil face font-lock-variable-name-face)) . 12) (11 . 12) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11 20 nil nil nil t #s(yas--exit 25 nil))) #s(yas--exit 25 nil) 0 nil #s(yas--field 1 11 20 nil nil nil t #s(yas--exit 25 nil)) nil nil)) (1 . 32) (#("namespace ${1:identifier} {
  $0
    }" 0 38 (fontified nil)) . 1) (34 . 38) (29 . 31) (1 . 33) (#("n" 0 1 (fontified nil)) . 1) (1 . 2) (#("namespace identifier {declarations}" 0 35 (fontified nil)) . -1) (1 . 36) (#("nam" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1) (undo-tree-id67 . -3) (undo-tree-id68 . -3) 4 (1 . 4) (#("s" 0 1 (fontified t)) . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("t" 0 1 (fontified t)) . -2) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("d" 0 1 (fontified t)) . -3) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("f" 0 1 (fontified t)) . -4) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 5 (1 . 5) (t 26067 16569 516654 742000)) nil (26067 16717 725371 917000) 0 nil])
([nil nil ((70 . 73)) nil (26067 16717 725093 737000) 0 nil])
([nil nil ((70 . 75) (#("cl" 0 2 (fontified nil)) . 70) (70 . 72) (#("class" 0 5 (fontified nil)) . -70) (70 . 75) (#("cla" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -70) (undo-tree-id3 . -3) (undo-tree-id4 . -3) 73) nil (26067 16717 725092 514000) 0 nil])
([nil nil ((#("
 " 0 1 (fontified t) 1 2 (fontified t)) . 68) (undo-tree-id2 . -2) 70) nil (26067 16717 725089 95000) 0 nil])
([nil nil ((68 . 71)) nil (26067 16717 725087 88000) 0 nil])
([nil nil ((77 . 80)) nil (26067 16717 725086 610000) 0 nil])
([nil nil ((77 . 86) (#("to" 0 2 (fontified nil)) . 77) (77 . 79) (#("token_num" 0 9 (fontified nil)) . -77) (77 . 86) (#("tok" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face)) . -77) (undo-tree-id0 . -3) (undo-tree-id1 . -3) 80) nil (26067 16717 725085 42000) 0 nil])
([nil nil ((86 . 87)) nil (26067 16717 725057 750000) 0 nil])
([nil nil ((106 . 107) 87) nil (26067 16717 725053 172000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -86) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 87 (t 26067 16717 743318 391000)) nil (26067 17124 468434 787000) 0 nil])
([nil nil ((86 . 91)) nil (26067 17124 468433 93000) 0 nil])
([nil nil ((87 . 89) (#("    " 0 4 (fontified nil)) . 87) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (91 . 93)) nil (26067 17124 468432 413000) 0 nil])
([nil nil ((91 . 95) (90 . 92)) nil (26067 17124 468430 453000) 0 nil])
([nil nil ((96 . 98)) nil (26067 17124 468429 832000) 0 nil])
([nil nil ((90 . 95)) nil (26067 17124 468429 510000) 0 nil])
([nil nil ((90 . 95)) nil (26067 17124 468429 122000) 0 nil])
([nil nil ((109 . 110)) nil (26067 17124 468428 702000) 0 nil])
([nil nil ((95 . 97)) nil (26067 17124 468428 1000) 0 nil])
([nil nil ((95 . 104) (#("to" 0 2 (fontified nil)) . 95) (95 . 97) (#("token_num" 0 9 (fontified nil)) . -95) (95 . 104) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -95) (undo-tree-id82 . -2) (undo-tree-id83 . -2) 97) nil (26067 17124 468427 178000) 0 nil])
([nil nil ((104 . 106)) nil (26067 17124 468425 521000) 0 nil])
([nil nil ((106 . 107)) nil (26067 17124 468425 157000) 0 nil])
([nil nil ((90 . 95)) nil (26067 17124 468424 659000) 0 nil])
([nil nil ((#("
    " 0 5 (fontified t)) . 90) (undo-tree-id80 . -5) (undo-tree-id81 . -5) 95) nil (26067 17124 468423 843000) 0 nil])
([nil nil ((90 . 95)) nil (26067 17124 468421 785000) 0 nil])
([nil nil ((95 . 97)) nil (26067 17124 468421 115000) 0 nil])
([nil nil ((apply yas--snippet-revive 95 102 #s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 7 nil nil nil nil)) (95 . 102) (#("public:" 0 7 (fontified nil)) . 95) (95 . 102) (#("p" 0 1 (fontified nil)) . 95) (95 . 96) (#("public:" 0 7 (fontified nil)) . -95) (95 . 102) (#("pu" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -95) (undo-tree-id78 . -2) (undo-tree-id79 . -2) 97) nil (26067 17124 468419 605000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 90) (undo-tree-id77 . -5) 95) nil (26067 17124 468416 503000) 0 nil])
([nil nil ((90 . 93)) nil (26067 17124 468407 480000) 0 nil])
([nil nil ((118 . 122) (118 . 119) (t 26067 17124 486643 426000)) nil (26067 17712 535743 623000) 0 nil])
([nil nil ((122 . 125)) nil (26067 17712 535742 888000) 0 nil])
([nil nil ((123 . 132) (#("to" 0 2 (fontified nil)) . 123) (123 . 125) (#("token_num" 0 9 (fontified nil)) . -123) (123 . 132) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -123) (undo-tree-id88 . -2) (undo-tree-id89 . -2) 125) nil (26067 17712 535741 486000) 0 nil])
([nil nil ((132 . 134)) nil (26067 17712 535733 377000) 0 nil])
([nil nil ((134 . 135)) nil (26067 17712 535729 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1065 . 1066) (nil fontified nil 1060 . 1066) (nil fontified nil 1059 . 1060) (nil fontified nil 278 . 1059) (nil fontified nil 275 . 278) (nil fontified nil 258 . 275) (nil fontified nil 257 . 258) (nil fontified nil 239 . 257) (nil fontified nil 238 . 239) (nil fontified nil 213 . 238) (nil fontified nil 212 . 213) (nil fontified nil 187 . 212) (nil fontified nil 186 . 187) (nil fontified nil 171 . 186) (nil fontified nil 170 . 171) (170 . 1066) (t 26067 17712 546631 470000)) nil (26067 17862 724469 107000) 0 nil])
([nil nil ((#("
    token_class::token operator()(char c);

  private:
    lexer_node *first_node;
    lexer_node *this_node;
    lexer_node *last_node;
    token_class::token null_token;
    int ter_save;
" 0 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t face (rainbow-delimiters-depth-3-face)) 42 47 (fontified t) 47 54 (fontified t face font-lock-constant-face) 54 55 (fontified t c-type c-decl-end) 55 60 (fontified t) 60 69 (fontified t face font-lock-type-face) 69 70 (fontified t c-type c-decl-id-start face font-lock-type-face) 70 72 (fontified t) 72 82 (fontified t face font-lock-variable-name-face) 82 88 (fontified t) 88 97 (fontified t face font-lock-type-face) 97 98 (fontified t c-type c-decl-id-start face font-lock-type-face) 98 100 (fontified t) 100 109 (fontified t face font-lock-variable-name-face) 109 115 (fontified t) 115 124 (fontified t face font-lock-type-face) 124 125 (fontified t c-type c-decl-id-start face font-lock-type-face) 125 127 (fontified t) 127 136 (fontified t face font-lock-variable-name-face) 136 177 (fontified t) 177 179 (fontified t face font-lock-type-face) 179 180 (fontified t c-type c-decl-id-start face font-lock-type-face) 180 181 (fontified t) 181 189 (fontified t face font-lock-variable-name-face) 189 191 (fontified t)) . 854) (undo-tree-id1243 . -190) (undo-tree-id1244 . -190) (undo-tree-id1245 . -190) (undo-tree-id1246 . -173) (undo-tree-id1247 . -173) (undo-tree-id1248 . -191) (undo-tree-id1249 . -191) (undo-tree-id1250 . -44) (undo-tree-id1251 . -24) (undo-tree-id1252 . -72) (undo-tree-id1253 . -100) (undo-tree-id1254 . -127) (undo-tree-id1255 . -161) (undo-tree-id1256 . -181) (undo-tree-id1257 . -190) (undo-tree-id1258 . -24) (undo-tree-id1259 . -72) (undo-tree-id1260 . -100) (undo-tree-id1261 . -127) (undo-tree-id1262 . -161) (undo-tree-id1263 . -181) (t 26067 17862 729961 758000)) nil (26067 17895 253156 846000) 0 nil])
([nil nil ((#("
    class lexer_node
    {
      lexer_node *next_node[256];
      lexer_node *prev_node;
      int count;
      int terminal;
      token_class::token token;
      std::string str;

    public:
      lexer_node(lexer_node *ptr);
      ~lexer_node();
      lexer_node *add_node(char c);
      token_class::token set_node(int ter);
      lexer_node *get_next_node(char c);
      void set_terminal(int ter);
      int get_terminal();
      token_class::token get_token();

      
    };

" 0 5 (fontified t) 5 9 (fontified t face font-lock-type-face) 9 10 (fontified t c-type c-decl-id-start face font-lock-type-face) 10 11 (fontified t) 11 21 (fontified t face font-lock-variable-name-face) 21 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 34 (fontified t) 34 43 (fontified t face font-lock-type-face) 43 44 (fontified t c-type c-decl-id-start face font-lock-type-face) 44 46 (fontified t) 46 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t face (rainbow-delimiters-depth-4-face)) 56 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-4-face)) 60 68 (fontified t) 68 77 (fontified t face font-lock-type-face) 77 78 (fontified t c-type c-decl-id-start face font-lock-type-face) 78 80 (fontified t) 80 89 (fontified t face font-lock-variable-name-face) 89 97 (fontified t) 97 99 (fontified t face font-lock-type-face) 99 100 (fontified t c-type c-decl-id-start face font-lock-type-face) 100 101 (fontified t) 101 106 (fontified t face font-lock-variable-name-face) 106 114 (fontified t) 114 116 (fontified t face font-lock-type-face) 116 117 (fontified t c-type c-decl-id-start face font-lock-type-face) 117 118 (fontified t) 118 126 (fontified t face font-lock-variable-name-face) 126 188 (fontified t) 188 194 (fontified t face font-lock-constant-face) 194 195 (fontified t c-type c-decl-end) 195 212 (fontified t) 212 213 (fontified t face (rainbow-delimiters-depth-4-face)) 213 223 (fontified t face font-lock-type-face) 223 225 (fontified t) 225 228 (fontified t face font-lock-variable-name-face) 228 229 (fontified t face (rainbow-delimiters-depth-4-face)) 229 248 (fontified t) 248 249 (fontified t face (rainbow-delimiters-depth-4-face)) 249 250 (fontified t face (rainbow-delimiters-depth-4-face)) 250 258 (fontified t) 258 267 (fontified t face font-lock-type-face) 267 268 (fontified t c-type c-decl-id-start face font-lock-type-face) 268 270 (fontified t) 270 278 (fontified t face font-lock-function-name-face) 278 279 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 279 283 (fontified t face font-lock-type-face) 283 284 (fontified t) 284 285 (fontified t face font-lock-variable-name-face) 285 286 (fontified t face (rainbow-delimiters-depth-4-face)) 286 321 (fontified t) 321 322 (fontified t face (rainbow-delimiters-depth-4-face)) 322 325 (fontified t face font-lock-type-face) 325 326 (fontified t) 326 329 (fontified t face font-lock-variable-name-face) 329 330 (fontified t face (rainbow-delimiters-depth-4-face)) 330 338 (fontified t) 338 347 (fontified t face font-lock-type-face) 347 348 (fontified t c-type c-decl-id-start face font-lock-type-face) 348 350 (fontified t) 350 363 (fontified t face font-lock-function-name-face) 363 364 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 364 368 (fontified t face font-lock-type-face) 368 369 (fontified t) 369 370 (fontified t face font-lock-variable-name-face) 370 371 (fontified t face (rainbow-delimiters-depth-4-face)) 371 379 (fontified t) 379 382 (fontified t face font-lock-type-face) 382 383 (fontified t c-type c-decl-id-start face font-lock-type-face) 383 384 (fontified t) 384 396 (fontified t face font-lock-function-name-face) 396 397 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 397 400 (fontified t face font-lock-type-face) 400 401 (fontified t) 401 404 (fontified t face font-lock-variable-name-face) 404 405 (fontified t face (rainbow-delimiters-depth-4-face)) 405 413 (fontified t) 413 415 (fontified t face font-lock-type-face) 415 416 (fontified t c-type c-decl-id-start face font-lock-type-face) 416 417 (fontified t) 417 429 (fontified t face font-lock-function-name-face) 429 430 (fontified t face (rainbow-delimiters-depth-4-face)) 430 431 (fontified t face (rainbow-delimiters-depth-4-face)) 431 467 (fontified t) 467 468 (fontified t face (rainbow-delimiters-depth-4-face)) 468 469 (fontified t face (rainbow-delimiters-depth-4-face)) 469 483 (fontified t) 483 484 (fontified t face (rainbow-delimiters-depth-3-face)) 484 487 (fontified t)) . 321) (undo-tree-id90 . -486) (undo-tree-id91 . -486) (undo-tree-id92 . -486) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -183) (undo-tree-id96 . -183) (undo-tree-id97 . -108) (undo-tree-id98 . -108) (undo-tree-id99 . -22) (undo-tree-id100 . -22) (undo-tree-id101 . -160) (undo-tree-id102 . -160) (undo-tree-id103 . -128) (undo-tree-id104 . -128) (undo-tree-id105 . -91) (undo-tree-id106 . -91) (undo-tree-id107 . -62) (undo-tree-id108 . -62) (undo-tree-id109 . -28) (undo-tree-id110 . -28) (undo-tree-id111 . -184) (undo-tree-id112 . -184) (undo-tree-id113 . -196) (undo-tree-id114 . -196) (undo-tree-id115 . -231) (undo-tree-id116 . -231) (undo-tree-id117 . -252) (undo-tree-id118 . -252) (undo-tree-id119 . -288) (undo-tree-id120 . -288) (undo-tree-id121 . -332) (undo-tree-id122 . -332) (undo-tree-id123 . -373) (undo-tree-id124 . -373) (undo-tree-id125 . -407) (undo-tree-id126 . -407) (undo-tree-id127 . -433) (undo-tree-id128 . -433) (undo-tree-id129 . -471) (undo-tree-id130 . -471) (undo-tree-id131 . -472) (undo-tree-id132 . -472) (undo-tree-id133 . -479) (undo-tree-id134 . -479) (undo-tree-id135 . -486) (undo-tree-id136 . -486) (undo-tree-id137 . -487) (undo-tree-id138 . -487) (undo-tree-id139 . -46) (undo-tree-id140 . -80) (undo-tree-id141 . -101) (undo-tree-id142 . -118) (undo-tree-id143 . -153) (undo-tree-id144 . -178) (undo-tree-id145 . -202) (undo-tree-id146 . -237) (undo-tree-id147 . -270) (undo-tree-id148 . -313) (undo-tree-id149 . -350) (undo-tree-id150 . -384) (undo-tree-id151 . -417) (undo-tree-id152 . -458) (undo-tree-id153 . -46) (undo-tree-id154 . -80) (undo-tree-id155 . -101) (undo-tree-id156 . -118) (undo-tree-id157 . -153) (undo-tree-id158 . -178) (undo-tree-id159 . -202) (undo-tree-id160 . -237) (undo-tree-id161 . -270) (undo-tree-id162 . -313) (undo-tree-id163 . -350) (undo-tree-id164 . -384) (undo-tree-id165 . -417) (undo-tree-id166 . -458) (undo-tree-id167 . -486) (undo-tree-id168 . -487) (undo-tree-id169 . -123) (undo-tree-id170 . -123) (undo-tree-id171 . -123) (undo-tree-id172 . -123) (undo-tree-id173 . -123) (undo-tree-id174 . -123) (undo-tree-id175 . -123) (undo-tree-id176 . -123) (undo-tree-id177 . -123) (undo-tree-id178 . -123) (undo-tree-id179 . -123) (undo-tree-id180 . -123) (undo-tree-id181 . -76) (undo-tree-id182 . -76) (undo-tree-id183 . -76) (undo-tree-id184 . -76) (undo-tree-id185 . -76) (undo-tree-id186 . -76) (undo-tree-id187 . -76) (undo-tree-id188 . -76) (undo-tree-id189 . -76) (undo-tree-id190 . -76) (undo-tree-id191 . -76) (undo-tree-id192 . -76) (undo-tree-id193 . -76) (undo-tree-id194 . -76) (undo-tree-id195 . -76) (undo-tree-id196 . -76) (undo-tree-id197 . -76) (undo-tree-id198 . -76) (undo-tree-id199 . -76) (undo-tree-id200 . -76) (undo-tree-id201 . -76) (undo-tree-id202 . -76) (undo-tree-id203 . -76) (undo-tree-id204 . -76) (undo-tree-id205 . -76) (undo-tree-id206 . -76) (undo-tree-id207 . -76) (undo-tree-id208 . -76) (undo-tree-id209 . -76) (undo-tree-id210 . -76) (undo-tree-id211 . -76) (undo-tree-id212 . -76) (undo-tree-id213 . -76) (undo-tree-id214 . -76) (undo-tree-id215 . -76) (undo-tree-id216 . -76) (undo-tree-id217 . -76) (undo-tree-id218 . -76) (undo-tree-id219 . -76) (undo-tree-id220 . -76) (undo-tree-id221 . -76) (undo-tree-id222 . -76) (undo-tree-id223 . -76) (undo-tree-id224 . -76) (undo-tree-id225 . -76) (undo-tree-id226 . -76) (undo-tree-id227 . -76) (undo-tree-id228 . -42) (undo-tree-id229 . -42) (undo-tree-id230 . -42) (undo-tree-id231 . -42) (undo-tree-id232 . -42) (undo-tree-id233 . -42) (undo-tree-id234 . -42) (undo-tree-id235 . -42) (undo-tree-id236 . -42) (undo-tree-id237 . -42) (undo-tree-id238 . -42) (undo-tree-id239 . -42) (undo-tree-id240 . -42) (undo-tree-id241 . -42) (undo-tree-id242 . -42) (undo-tree-id243 . -42) (undo-tree-id244 . -42) (undo-tree-id245 . -42) (undo-tree-id246 . -42) (undo-tree-id247 . -42) (undo-tree-id248 . -42) (undo-tree-id249 . -42) (undo-tree-id250 . -42) (undo-tree-id251 . -42) (undo-tree-id252 . -42) (undo-tree-id253 . -42) (undo-tree-id254 . -42) (undo-tree-id255 . -42) (undo-tree-id256 . -42) (undo-tree-id257 . -42) (undo-tree-id258 . -42) (undo-tree-id259 . -42) (undo-tree-id260 . -42) (undo-tree-id261 . -42) (undo-tree-id262 . -42) (undo-tree-id263 . -42) (undo-tree-id264 . -42) (undo-tree-id265 . -42) (undo-tree-id266 . -42) (undo-tree-id267 . -42) (undo-tree-id268 . -42) (undo-tree-id269 . -42) (undo-tree-id270 . -42) (undo-tree-id271 . -42) (undo-tree-id272 . -42) (undo-tree-id273 . -42) (undo-tree-id274 . -42) (undo-tree-id275 . -42) (undo-tree-id276 . -42) (undo-tree-id277 . -42) (undo-tree-id278 . -42) (undo-tree-id279 . -42) (undo-tree-id280 . -42) (undo-tree-id281 . -42) (undo-tree-id282 . -42) (undo-tree-id283 . -42) (undo-tree-id284 . -42) (undo-tree-id285 . -42) (undo-tree-id286 . -42) (undo-tree-id287 . -42) (undo-tree-id288 . -42) (undo-tree-id289 . -42) (undo-tree-id290 . -42) (undo-tree-id291 . -42) (undo-tree-id292 . -42) (undo-tree-id293 . -42) (undo-tree-id294 . -42) (undo-tree-id295 . -42) (undo-tree-id296 . -42) (undo-tree-id297 . -42) (undo-tree-id298 . -42) (undo-tree-id299 . -42) (undo-tree-id300 . -42) (undo-tree-id301 . -42) (undo-tree-id302 . -42) (undo-tree-id303 . -42) (undo-tree-id304 . -42) (undo-tree-id305 . -42) (undo-tree-id306 . -42) (undo-tree-id307 . -42) (undo-tree-id308 . -42) (undo-tree-id309 . -42) (undo-tree-id310 . -42) (undo-tree-id311 . -42) (undo-tree-id312 . -42) (undo-tree-id313 . -42) (undo-tree-id314 . -42) (undo-tree-id315 . -42) (undo-tree-id316 . -42) (undo-tree-id317 . -42) (undo-tree-id318 . -42) (undo-tree-id319 . -42) (undo-tree-id320 . -42) (undo-tree-id321 . -42) (undo-tree-id322 . -42) (undo-tree-id323 . -42) (undo-tree-id324 . -42) (undo-tree-id325 . -42) (undo-tree-id326 . -42) (undo-tree-id327 . -42) (undo-tree-id328 . -42) (undo-tree-id329 . -42) (undo-tree-id330 . -42) (undo-tree-id331 . -42) (undo-tree-id332 . -42) (undo-tree-id333 . -42) (undo-tree-id334 . -42) (undo-tree-id335 . -42) (undo-tree-id336 . -42) (undo-tree-id337 . -42) (undo-tree-id338 . -42) (undo-tree-id339 . -42) (undo-tree-id340 . -42) (undo-tree-id341 . -42) (undo-tree-id342 . -42) (undo-tree-id343 . -42) (undo-tree-id344 . -42) (undo-tree-id345 . -42) (undo-tree-id346 . -42) (undo-tree-id347 . -42) (undo-tree-id348 . -42) (undo-tree-id349 . -42) (undo-tree-id350 . -42) (undo-tree-id351 . -42) (undo-tree-id352 . -42) (undo-tree-id353 . -42) (undo-tree-id354 . -42) (undo-tree-id355 . -42) (undo-tree-id356 . -42) (undo-tree-id357 . -42) (undo-tree-id358 . -42) (undo-tree-id359 . -42) (undo-tree-id360 . -42) (undo-tree-id361 . -42) (undo-tree-id362 . -42) (undo-tree-id363 . -42) (undo-tree-id364 . -42) (undo-tree-id365 . -42) (undo-tree-id366 . -42) (undo-tree-id367 . -42) (undo-tree-id368 . -42) (undo-tree-id369 . -42) (undo-tree-id370 . -42) (undo-tree-id371 . -42) (undo-tree-id372 . -42) (undo-tree-id373 . -42) (undo-tree-id374 . -42) (undo-tree-id375 . -42) (undo-tree-id376 . -42) (undo-tree-id377 . -42) (undo-tree-id378 . -42) (undo-tree-id379 . -42) (undo-tree-id380 . -42) (undo-tree-id381 . -42) (undo-tree-id382 . -42) (undo-tree-id383 . -42) (undo-tree-id384 . -42) (undo-tree-id385 . -42) (undo-tree-id386 . -42) (undo-tree-id387 . -42) (undo-tree-id388 . -42) (undo-tree-id389 . -42) (undo-tree-id390 . -42) (undo-tree-id391 . -42) (undo-tree-id392 . -42) (undo-tree-id393 . -42) (undo-tree-id394 . -42) (undo-tree-id395 . -42) (undo-tree-id396 . -42) (undo-tree-id397 . -42) (undo-tree-id398 . -42) (undo-tree-id399 . -42) (undo-tree-id400 . -42) (undo-tree-id401 . -42) (undo-tree-id402 . -42) (undo-tree-id403 . -42) (undo-tree-id404 . -42) (undo-tree-id405 . -42) (undo-tree-id406 . -42) (undo-tree-id407 . -42) (undo-tree-id408 . -42) (undo-tree-id409 . -42) (undo-tree-id410 . -42) (undo-tree-id411 . -42) (undo-tree-id412 . -42) (undo-tree-id413 . -42) (undo-tree-id414 . -42) (undo-tree-id415 . -42) (undo-tree-id416 . -42) (undo-tree-id417 . -42) (undo-tree-id418 . -42) (undo-tree-id419 . -42) (undo-tree-id420 . -42) (undo-tree-id421 . -42) (undo-tree-id422 . -42) (undo-tree-id423 . -42) (undo-tree-id424 . -42) (undo-tree-id425 . -42) (undo-tree-id426 . -42) (undo-tree-id427 . -42) (undo-tree-id428 . -42) (undo-tree-id429 . -42) (undo-tree-id430 . -42) (undo-tree-id431 . -42) (undo-tree-id432 . -42) (undo-tree-id433 . -42) (undo-tree-id434 . -42) (undo-tree-id435 . -42) (undo-tree-id436 . -42) (undo-tree-id437 . -42) (undo-tree-id438 . -42) (undo-tree-id439 . -42) (undo-tree-id440 . -42) (undo-tree-id441 . -42) (undo-tree-id442 . -42) (undo-tree-id443 . -42) (undo-tree-id444 . -42) (undo-tree-id445 . -42) (undo-tree-id446 . -42) (undo-tree-id447 . -42) (undo-tree-id448 . -42) (undo-tree-id449 . -42) (undo-tree-id450 . -42) (undo-tree-id451 . -42) (undo-tree-id452 . -42) (undo-tree-id453 . -42) (undo-tree-id454 . -42) (undo-tree-id455 . -42) (undo-tree-id456 . -42) (undo-tree-id457 . -42) (undo-tree-id458 . -27) (undo-tree-id459 . -27) (undo-tree-id460 . -27) (undo-tree-id461 . -27) (undo-tree-id462 . -27) (undo-tree-id463 . -27) (undo-tree-id464 . -27) (undo-tree-id465 . -27) (undo-tree-id466 . -27) (undo-tree-id467 . -27) (undo-tree-id468 . -27) (undo-tree-id469 . -27) (undo-tree-id470 . -27) (undo-tree-id471 . -27) (undo-tree-id472 . -27) (undo-tree-id473 . -27) (undo-tree-id474 . -27) (undo-tree-id475 . -27) (undo-tree-id476 . -27) (undo-tree-id477 . -27) (undo-tree-id478 . -27) (undo-tree-id479 . -27) (undo-tree-id480 . -27) (undo-tree-id481 . -27) (undo-tree-id482 . -27) (undo-tree-id483 . -27) (undo-tree-id484 . -27) (undo-tree-id485 . -27) (undo-tree-id486 . -27) (undo-tree-id487 . -27) (undo-tree-id488 . -27) (undo-tree-id489 . -27) (undo-tree-id490 . -27) (undo-tree-id491 . -27) (undo-tree-id492 . -27) (undo-tree-id493 . -27) (undo-tree-id494 . -27) (undo-tree-id495 . -27) (undo-tree-id496 . -27) (undo-tree-id497 . -27) (undo-tree-id498 . -27) (undo-tree-id499 . -27) (undo-tree-id500 . -27) (undo-tree-id501 . -27) (undo-tree-id502 . -27) (undo-tree-id503 . -27) (undo-tree-id504 . -27) (undo-tree-id505 . -27) (undo-tree-id506 . -27) (undo-tree-id507 . -27) (undo-tree-id508 . -27) (undo-tree-id509 . -27) (undo-tree-id510 . -27) (undo-tree-id511 . -27) (undo-tree-id512 . -27) (undo-tree-id513 . -27) (undo-tree-id514 . -27) (undo-tree-id515 . -27) (undo-tree-id516 . -27) (undo-tree-id517 . -27) (undo-tree-id518 . -27) (undo-tree-id519 . -27) (undo-tree-id520 . -27) (undo-tree-id521 . -27) (undo-tree-id522 . -27) (undo-tree-id523 . -27) (undo-tree-id524 . -27) (undo-tree-id525 . -27) (undo-tree-id526 . -27) (undo-tree-id527 . -27) (undo-tree-id528 . -27) (undo-tree-id529 . -27) (undo-tree-id530 . -27) (undo-tree-id531 . -27) (undo-tree-id532 . -27) (undo-tree-id533 . -27) (undo-tree-id534 . -27) (undo-tree-id535 . -27) (undo-tree-id536 . -27) (undo-tree-id537 . -27) (undo-tree-id538 . -27) (undo-tree-id539 . -27) (undo-tree-id540 . -27) (undo-tree-id541 . -27) (undo-tree-id542 . -27) (undo-tree-id543 . -27) (undo-tree-id544 . -27) (undo-tree-id545 . -27) (undo-tree-id546 . -27) (undo-tree-id547 . -27) (undo-tree-id548 . -27) (undo-tree-id549 . -27) (undo-tree-id550 . -27) (undo-tree-id551 . -27) (undo-tree-id552 . -27) (undo-tree-id553 . -27) (undo-tree-id554 . -27) (undo-tree-id555 . -27) (undo-tree-id556 . -27) (undo-tree-id557 . -27) (undo-tree-id558 . -27) (undo-tree-id559 . -27) (undo-tree-id560 . -27) (undo-tree-id561 . -27) (undo-tree-id562 . -27) (undo-tree-id563 . -27) (undo-tree-id564 . -27) (undo-tree-id565 . -27) (undo-tree-id566 . -27) (undo-tree-id567 . -27) (undo-tree-id568 . -27) (undo-tree-id569 . -27) (undo-tree-id570 . -27) (undo-tree-id571 . -27) (undo-tree-id572 . -27) (undo-tree-id573 . -27) (undo-tree-id574 . -27) (undo-tree-id575 . -27) (undo-tree-id576 . -27) (undo-tree-id577 . -27) (undo-tree-id578 . -27) (undo-tree-id579 . -27) (undo-tree-id580 . -27) (undo-tree-id581 . -27) (undo-tree-id582 . -27) (undo-tree-id583 . -27) (undo-tree-id584 . -27) (undo-tree-id585 . -27) (undo-tree-id586 . -27) (undo-tree-id587 . -27) (undo-tree-id588 . -27) (undo-tree-id589 . -27) (undo-tree-id590 . -27) (undo-tree-id591 . -27) (undo-tree-id592 . -27) (undo-tree-id593 . -27) (undo-tree-id594 . -27) (undo-tree-id595 . -27) (undo-tree-id596 . -27) (undo-tree-id597 . -27) (undo-tree-id598 . -27) (undo-tree-id599 . -27) (undo-tree-id600 . -27) (undo-tree-id601 . -27) (undo-tree-id602 . -27) (undo-tree-id603 . -27) (undo-tree-id604 . -27) (undo-tree-id605 . -27) (undo-tree-id606 . -27) (undo-tree-id607 . -27) (undo-tree-id608 . -27) (undo-tree-id609 . -27) (undo-tree-id610 . -27) (undo-tree-id611 . -27) (undo-tree-id612 . -27) (undo-tree-id613 . -27) (undo-tree-id614 . -27) (undo-tree-id615 . -27) (undo-tree-id616 . -27) (undo-tree-id617 . -27) (undo-tree-id618 . -27) (undo-tree-id619 . -27) (undo-tree-id620 . -27) (undo-tree-id621 . -27) (undo-tree-id622 . -27) (undo-tree-id623 . -27) (undo-tree-id624 . -27) (undo-tree-id625 . -27) (undo-tree-id626 . -27) (undo-tree-id627 . -27) (undo-tree-id628 . -27) (undo-tree-id629 . -27) (undo-tree-id630 . -27) (undo-tree-id631 . -27) (undo-tree-id632 . -27) (undo-tree-id633 . -27) (undo-tree-id634 . -27) (undo-tree-id635 . -27) (undo-tree-id636 . -27) (undo-tree-id637 . -27) (undo-tree-id638 . -27) (undo-tree-id639 . -27) (undo-tree-id640 . -27) (undo-tree-id641 . -27) (undo-tree-id642 . -27) (undo-tree-id643 . -27) (undo-tree-id644 . -27) (undo-tree-id645 . -27) (undo-tree-id646 . -27) (undo-tree-id647 . -27) (undo-tree-id648 . -27) (undo-tree-id649 . -27) (undo-tree-id650 . -27) (undo-tree-id651 . -27) (undo-tree-id652 . -27) (undo-tree-id653 . -27) (undo-tree-id654 . -27) (undo-tree-id655 . -27) (undo-tree-id656 . -27) (undo-tree-id657 . -27) (undo-tree-id658 . -27) (undo-tree-id659 . -27) (undo-tree-id660 . -27) (undo-tree-id661 . -27) (undo-tree-id662 . -27) (undo-tree-id663 . -27) (undo-tree-id664 . -27) (undo-tree-id665 . -27) (undo-tree-id666 . -27) (undo-tree-id667 . -27) (undo-tree-id668 . -27) (undo-tree-id669 . -27) (undo-tree-id670 . -27) (undo-tree-id671 . -27) (undo-tree-id672 . -27) (undo-tree-id673 . -27) (undo-tree-id674 . -27) (undo-tree-id675 . -27) (undo-tree-id676 . -27) (undo-tree-id677 . -27) (undo-tree-id678 . -27) (undo-tree-id679 . -27) (undo-tree-id680 . -27) (undo-tree-id681 . -27) (undo-tree-id682 . -27) (undo-tree-id683 . -27) (undo-tree-id684 . -27) (undo-tree-id685 . -27) (undo-tree-id686 . -27) (undo-tree-id687 . -27) (undo-tree-id688 . -27) (undo-tree-id689 . -27) (undo-tree-id690 . -27) (undo-tree-id691 . -27) (undo-tree-id692 . -27) (undo-tree-id693 . -27) (undo-tree-id694 . -27) (undo-tree-id695 . -27) (undo-tree-id696 . -27) (undo-tree-id697 . -27) (undo-tree-id698 . -27) (undo-tree-id699 . -27) (undo-tree-id700 . -27) (undo-tree-id701 . -27) (undo-tree-id702 . -27) (undo-tree-id703 . -27) (undo-tree-id704 . -27) (undo-tree-id705 . -27) (undo-tree-id706 . -27) (undo-tree-id707 . -27) (undo-tree-id708 . -27) (undo-tree-id709 . -27) (undo-tree-id710 . -27) (undo-tree-id711 . -27) (undo-tree-id712 . -27) (undo-tree-id713 . -27) (undo-tree-id714 . -27) (undo-tree-id715 . -27) (undo-tree-id716 . -27) (undo-tree-id717 . -27) (undo-tree-id718 . -27) (undo-tree-id719 . -27) (undo-tree-id720 . -27) (undo-tree-id721 . -27) (undo-tree-id722 . -27) (undo-tree-id723 . -27) (undo-tree-id724 . -27) (undo-tree-id725 . -27) (undo-tree-id726 . -27) (undo-tree-id727 . -27) (undo-tree-id728 . -27) (undo-tree-id729 . -27) (undo-tree-id730 . -27) (undo-tree-id731 . -27) (undo-tree-id732 . -27) (undo-tree-id733 . -27) (undo-tree-id734 . -27) (undo-tree-id735 . -27) (undo-tree-id736 . -27) (undo-tree-id737 . -27) (undo-tree-id738 . -27) (undo-tree-id739 . -27) (undo-tree-id740 . -27) (undo-tree-id741 . -27) (undo-tree-id742 . -27) (undo-tree-id743 . -27) (undo-tree-id744 . -27) (undo-tree-id745 . -27) (undo-tree-id746 . -27) (undo-tree-id747 . -27) (undo-tree-id748 . -27) (undo-tree-id749 . -27) (undo-tree-id750 . -27) (undo-tree-id751 . -27) (undo-tree-id752 . -27) (undo-tree-id753 . -27) (undo-tree-id754 . -27) (undo-tree-id755 . -27) (undo-tree-id756 . -27) (undo-tree-id757 . -27) (undo-tree-id758 . -27) (undo-tree-id759 . -27) (undo-tree-id760 . -27) (undo-tree-id761 . -27) (undo-tree-id762 . -27) (undo-tree-id763 . -27) (undo-tree-id764 . -27) (undo-tree-id765 . -27) (undo-tree-id766 . -27) (undo-tree-id767 . -27) (undo-tree-id768 . -27) (undo-tree-id769 . -27) (undo-tree-id770 . -27) (undo-tree-id771 . -27) (undo-tree-id772 . -27) (undo-tree-id773 . -27) (undo-tree-id774 . -27) (undo-tree-id775 . -27) (undo-tree-id776 . -27) (undo-tree-id777 . -27) (undo-tree-id778 . -27) (undo-tree-id779 . -27) (undo-tree-id780 . -27) (undo-tree-id781 . -27) (undo-tree-id782 . -27) (undo-tree-id783 . -27) (undo-tree-id784 . -27) (undo-tree-id785 . -27) (undo-tree-id786 . -27) (undo-tree-id787 . -27) (undo-tree-id788 . -27) (undo-tree-id789 . -27) (undo-tree-id790 . -27) (undo-tree-id791 . -27) (undo-tree-id792 . -27) (undo-tree-id793 . -27) (undo-tree-id794 . -27) (undo-tree-id795 . -27) (undo-tree-id796 . -27) (undo-tree-id797 . -27) (undo-tree-id798 . -27) (undo-tree-id799 . -27) (undo-tree-id800 . -27) (undo-tree-id801 . -27) (undo-tree-id802 . -27) (undo-tree-id803 . -27) (undo-tree-id804 . -27) (undo-tree-id805 . -27) (undo-tree-id806 . -27) (undo-tree-id807 . -27) (undo-tree-id808 . -27) (undo-tree-id809 . -27) (undo-tree-id810 . -27) (undo-tree-id811 . -27) (undo-tree-id812 . -27) (undo-tree-id813 . -27) (undo-tree-id814 . -27) (undo-tree-id815 . -27) (undo-tree-id816 . -27) (undo-tree-id817 . -27) (undo-tree-id818 . -27) (undo-tree-id819 . -27) (undo-tree-id820 . -27) (undo-tree-id821 . -27) (undo-tree-id822 . -27) (undo-tree-id823 . -27) (undo-tree-id824 . -27) (undo-tree-id825 . -27) (undo-tree-id826 . -27) (undo-tree-id827 . -15) (undo-tree-id828 . -15) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) (undo-tree-id832 . -15) (undo-tree-id833 . -15) (undo-tree-id834 . -15) (undo-tree-id835 . -15) (undo-tree-id836 . -15) (undo-tree-id837 . -15) (undo-tree-id838 . -15) (undo-tree-id839 . -15) (undo-tree-id840 . -15) (undo-tree-id841 . -15) (undo-tree-id842 . -15) (undo-tree-id843 . -15) (undo-tree-id844 . -15) (undo-tree-id845 . -15) (undo-tree-id846 . -15) (undo-tree-id847 . -15) (undo-tree-id848 . -15) (undo-tree-id849 . -15) (undo-tree-id850 . -15) (undo-tree-id851 . -15) (undo-tree-id852 . -15) (undo-tree-id853 . -15) (undo-tree-id854 . -15) (undo-tree-id855 . -15) (undo-tree-id856 . -15) (undo-tree-id857 . -15) (undo-tree-id858 . -15) (undo-tree-id859 . -15) (undo-tree-id860 . -15) (undo-tree-id861 . -15) (undo-tree-id862 . -15) (undo-tree-id863 . -15) (undo-tree-id864 . -15) (undo-tree-id865 . -15) (undo-tree-id866 . -15) (undo-tree-id867 . -15) (undo-tree-id868 . -15) (undo-tree-id869 . -15) (undo-tree-id870 . -15) (undo-tree-id871 . -15) (undo-tree-id872 . -15) (undo-tree-id873 . -15) (undo-tree-id874 . -15) (undo-tree-id875 . -15) (undo-tree-id876 . -15) (undo-tree-id877 . -15) (undo-tree-id878 . -15) (undo-tree-id879 . -15) (undo-tree-id880 . -15) (undo-tree-id881 . -15) (undo-tree-id882 . -15) (undo-tree-id883 . -15) (undo-tree-id884 . -15) (undo-tree-id885 . -15) (undo-tree-id886 . -15) (undo-tree-id887 . -15) (undo-tree-id888 . -15) (undo-tree-id889 . -15) (undo-tree-id890 . -15) (undo-tree-id891 . -15) (undo-tree-id892 . -15) (undo-tree-id893 . -15) (undo-tree-id894 . -15) (undo-tree-id895 . -15) (undo-tree-id896 . -15) (undo-tree-id897 . -15) (undo-tree-id898 . -15) (undo-tree-id899 . -15) (undo-tree-id900 . -15) (undo-tree-id901 . -15) (undo-tree-id902 . -15) (undo-tree-id903 . -15) (undo-tree-id904 . -15) (undo-tree-id905 . -15) (undo-tree-id906 . -15) (undo-tree-id907 . -15) (undo-tree-id908 . -15) (undo-tree-id909 . -15) (undo-tree-id910 . -15) (undo-tree-id911 . -15) (undo-tree-id912 . -15) (undo-tree-id913 . -15) (undo-tree-id914 . -15) (undo-tree-id915 . -15) (undo-tree-id916 . -15) (undo-tree-id917 . -15) (undo-tree-id918 . -15) (undo-tree-id919 . -15) (undo-tree-id920 . -15) (undo-tree-id921 . -15) (undo-tree-id922 . -15) (undo-tree-id923 . -15) (undo-tree-id924 . -15) (undo-tree-id925 . -15) (undo-tree-id926 . -15) (undo-tree-id927 . -15) (undo-tree-id928 . -15) (undo-tree-id929 . -15) (undo-tree-id930 . -15) (undo-tree-id931 . -15) (undo-tree-id932 . -15) (undo-tree-id933 . -15) (undo-tree-id934 . -15) (undo-tree-id935 . -15) (undo-tree-id936 . -15) (undo-tree-id937 . -15) (undo-tree-id938 . -15) (undo-tree-id939 . -15) (undo-tree-id940 . -15) (undo-tree-id941 . -15) (undo-tree-id942 . -15) (undo-tree-id943 . -15) (undo-tree-id944 . -15) (undo-tree-id945 . -15) (undo-tree-id946 . -15) (undo-tree-id947 . -15) (undo-tree-id948 . -15) (undo-tree-id949 . -15) (undo-tree-id950 . -15) (undo-tree-id951 . -15) (undo-tree-id952 . -15) (undo-tree-id953 . -15) (undo-tree-id954 . -15) (undo-tree-id955 . -15) (undo-tree-id956 . -15) (undo-tree-id957 . -15) (undo-tree-id958 . -15) (undo-tree-id959 . -15) (undo-tree-id960 . -15) (undo-tree-id961 . -15) (undo-tree-id962 . -15) (undo-tree-id963 . -15) (undo-tree-id964 . -15) (undo-tree-id965 . -15) (undo-tree-id966 . -15) (undo-tree-id967 . -15) (undo-tree-id968 . -15) (undo-tree-id969 . -15) (undo-tree-id970 . -15) (undo-tree-id971 . -15) (undo-tree-id972 . -15) (undo-tree-id973 . -15) (undo-tree-id974 . -15) (undo-tree-id975 . -15) (undo-tree-id976 . -15) (undo-tree-id977 . -15) (undo-tree-id978 . -15) (undo-tree-id979 . -15) (undo-tree-id980 . -15) (undo-tree-id981 . -15) (undo-tree-id982 . -15) (undo-tree-id983 . -15) (undo-tree-id984 . -15) (undo-tree-id985 . -15) (undo-tree-id986 . -15) (undo-tree-id987 . -15) (undo-tree-id988 . -15) (undo-tree-id989 . -15) (undo-tree-id990 . -15) (undo-tree-id991 . -15) (undo-tree-id992 . -15) (undo-tree-id993 . -15) (undo-tree-id994 . -15) (undo-tree-id995 . -15) (undo-tree-id996 . -15) (undo-tree-id997 . -15) (undo-tree-id998 . -15) (undo-tree-id999 . -15) (undo-tree-id1000 . -15) (undo-tree-id1001 . -15) (undo-tree-id1002 . -15) (undo-tree-id1003 . -15) (undo-tree-id1004 . -15) (undo-tree-id1005 . -15) (undo-tree-id1006 . -15) (undo-tree-id1007 . -15) (undo-tree-id1008 . -15) (undo-tree-id1009 . -15) (undo-tree-id1010 . -15) (undo-tree-id1011 . -15) (undo-tree-id1012 . -15) (undo-tree-id1013 . -15) (undo-tree-id1014 . -15) (undo-tree-id1015 . -15) (undo-tree-id1016 . -15) (undo-tree-id1017 . -15) (undo-tree-id1018 . -15) (undo-tree-id1019 . -15) (undo-tree-id1020 . -15) (undo-tree-id1021 . -15) (undo-tree-id1022 . -15) (undo-tree-id1023 . -15) (undo-tree-id1024 . -15) (undo-tree-id1025 . -15) (undo-tree-id1026 . -15) (undo-tree-id1027 . -15) (undo-tree-id1028 . -15) (undo-tree-id1029 . -15) (undo-tree-id1030 . -15) (undo-tree-id1031 . -15) (undo-tree-id1032 . -15) (undo-tree-id1033 . -15) (undo-tree-id1034 . -15) (undo-tree-id1035 . -15) (undo-tree-id1036 . -15) (undo-tree-id1037 . -15) (undo-tree-id1038 . -15) (undo-tree-id1039 . -15) (undo-tree-id1040 . -15) (undo-tree-id1041 . -15) (undo-tree-id1042 . -15) (undo-tree-id1043 . -15) (undo-tree-id1044 . -15) (undo-tree-id1045 . -15) (undo-tree-id1046 . -15) (undo-tree-id1047 . -15) (undo-tree-id1048 . -15) (undo-tree-id1049 . -15) (undo-tree-id1050 . -15) (undo-tree-id1051 . -15) (undo-tree-id1052 . -15) (undo-tree-id1053 . -15) (undo-tree-id1054 . -15) (undo-tree-id1055 . -15) (undo-tree-id1056 . -15) (undo-tree-id1057 . -15) (undo-tree-id1058 . -15) (undo-tree-id1059 . -15) (undo-tree-id1060 . -15) (undo-tree-id1061 . -15) (undo-tree-id1062 . -15) (undo-tree-id1063 . -15) (undo-tree-id1064 . -15) (undo-tree-id1065 . -15) (undo-tree-id1066 . -15) (undo-tree-id1067 . -15) (undo-tree-id1068 . -15) (undo-tree-id1069 . -15) (undo-tree-id1070 . -15) (undo-tree-id1071 . -15) (undo-tree-id1072 . -15) (undo-tree-id1073 . -15) (undo-tree-id1074 . -15) (undo-tree-id1075 . -15) (undo-tree-id1076 . -15) (undo-tree-id1077 . -15) (undo-tree-id1078 . -15) (undo-tree-id1079 . -15) (undo-tree-id1080 . -15) (undo-tree-id1081 . -15) (undo-tree-id1082 . -15) (undo-tree-id1083 . -15) (undo-tree-id1084 . -15) (undo-tree-id1085 . -15) (undo-tree-id1086 . -15) (undo-tree-id1087 . -15) (undo-tree-id1088 . -15) (undo-tree-id1089 . -15) (undo-tree-id1090 . -15) (undo-tree-id1091 . -15) (undo-tree-id1092 . -15) (undo-tree-id1093 . -15) (undo-tree-id1094 . -15) (undo-tree-id1095 . -15) (undo-tree-id1096 . -15) (undo-tree-id1097 . -15) (undo-tree-id1098 . -15) (undo-tree-id1099 . -15) (undo-tree-id1100 . -15) (undo-tree-id1101 . -15) (undo-tree-id1102 . -15) (undo-tree-id1103 . -15) (undo-tree-id1104 . -15) (undo-tree-id1105 . -15) (undo-tree-id1106 . -15) (undo-tree-id1107 . -15) (undo-tree-id1108 . -15) (undo-tree-id1109 . -15) (undo-tree-id1110 . -15) (undo-tree-id1111 . -15) (undo-tree-id1112 . -15) (undo-tree-id1113 . -15) (undo-tree-id1114 . -15) (undo-tree-id1115 . -15) (undo-tree-id1116 . -15) (undo-tree-id1117 . -15) (undo-tree-id1118 . -15) (undo-tree-id1119 . -15) (undo-tree-id1120 . -15) (undo-tree-id1121 . -15) (undo-tree-id1122 . -15) (undo-tree-id1123 . -15) (undo-tree-id1124 . -15) (undo-tree-id1125 . -15) (undo-tree-id1126 . -15) (undo-tree-id1127 . -15) (undo-tree-id1128 . -15) (undo-tree-id1129 . -15) (undo-tree-id1130 . -15) (undo-tree-id1131 . -15) (undo-tree-id1132 . -15) (undo-tree-id1133 . -15) (undo-tree-id1134 . -15) (undo-tree-id1135 . -15) (undo-tree-id1136 . -15) (undo-tree-id1137 . -15) (undo-tree-id1138 . -15) (undo-tree-id1139 . -15) (undo-tree-id1140 . -15) (undo-tree-id1141 . -15) (undo-tree-id1142 . -15) (undo-tree-id1143 . -15) (undo-tree-id1144 . -15) (undo-tree-id1145 . -15) (undo-tree-id1146 . -15) (undo-tree-id1147 . -15) (undo-tree-id1148 . -15) (undo-tree-id1149 . -15) (undo-tree-id1150 . -15) (undo-tree-id1151 . -15) (undo-tree-id1152 . -15) (undo-tree-id1153 . -15) (undo-tree-id1154 . -15) (undo-tree-id1155 . -15) (undo-tree-id1156 . -15) (undo-tree-id1157 . -15) (undo-tree-id1158 . -15) (undo-tree-id1159 . -15) (undo-tree-id1160 . -15) (undo-tree-id1161 . -15) (undo-tree-id1162 . -15) (undo-tree-id1163 . -15) (undo-tree-id1164 . -15) (undo-tree-id1165 . -15) (undo-tree-id1166 . -15) (undo-tree-id1167 . -15) (undo-tree-id1168 . -15) (undo-tree-id1169 . -15) (undo-tree-id1170 . -15) (undo-tree-id1171 . -15) (undo-tree-id1172 . -15) (undo-tree-id1173 . -15) (undo-tree-id1174 . -15) (undo-tree-id1175 . -15) (undo-tree-id1176 . -15) (undo-tree-id1177 . -15) (undo-tree-id1178 . -15) (undo-tree-id1179 . -15) (undo-tree-id1180 . -15) (undo-tree-id1181 . -15) (undo-tree-id1182 . -15) (undo-tree-id1183 . -15) (undo-tree-id1184 . -15) (undo-tree-id1185 . -15) (undo-tree-id1186 . -15) (undo-tree-id1187 . -15) (undo-tree-id1188 . -15) (undo-tree-id1189 . -15) (undo-tree-id1190 . -15) (undo-tree-id1191 . -15) (undo-tree-id1192 . -15) (undo-tree-id1193 . -15) (undo-tree-id1194 . -15) (undo-tree-id1195 . -15) (undo-tree-id1196 . -15) (undo-tree-id1197 . -15) (undo-tree-id1198 . -15) (undo-tree-id1199 . -15) (undo-tree-id1200 . -15) (undo-tree-id1201 . -15) (undo-tree-id1202 . -15) (undo-tree-id1203 . -15) (undo-tree-id1204 . -15) (undo-tree-id1205 . -15) (undo-tree-id1206 . -15) (undo-tree-id1207 . -15) (undo-tree-id1208 . -15) (undo-tree-id1209 . -15) (undo-tree-id1210 . -15) (undo-tree-id1211 . -15) (undo-tree-id1212 . -15) (undo-tree-id1213 . -15) (undo-tree-id1214 . -15) (undo-tree-id1215 . -15) (undo-tree-id1216 . -15) (undo-tree-id1217 . -15) (undo-tree-id1218 . -15) (undo-tree-id1219 . -15) (undo-tree-id1220 . -15) (undo-tree-id1221 . -15) (undo-tree-id1222 . -15) (undo-tree-id1223 . -15) (undo-tree-id1224 . -15) (undo-tree-id1225 . -15) (undo-tree-id1226 . -15) (undo-tree-id1227 . -15) (undo-tree-id1228 . -15) (undo-tree-id1229 . -15) (undo-tree-id1230 . -15) (undo-tree-id1231 . -15) (undo-tree-id1232 . -15) (undo-tree-id1233 . -15) (undo-tree-id1234 . -15) (undo-tree-id1235 . -15) (undo-tree-id1236 . -15) (undo-tree-id1237 . -15) (undo-tree-id1238 . -15) (undo-tree-id1239 . -15) (undo-tree-id1240 . -15) (undo-tree-id1241 . -15) (undo-tree-id1242 . -487)) nil (26067 17897 964798 828000) 0 nil])
([nil nil ((321 . 324) (#("  " 0 2 (fontified t)) . 321) (undo-tree-id1307 . 2) (undo-tree-id1308 . -2) (undo-tree-id1309 . -2) (undo-tree-id1310 . -2) (undo-tree-id1311 . -2) (undo-tree-id1312 . -2) (undo-tree-id1313 . -2) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (undo-tree-id1316 . -2) (undo-tree-id1317 . -2) (undo-tree-id1318 . -2) (undo-tree-id1319 . -2) (undo-tree-id1320 . -2) (undo-tree-id1321 . -2) (undo-tree-id1322 . -2) (undo-tree-id1323 . -2) (undo-tree-id1324 . -2) (undo-tree-id1325 . -2) (undo-tree-id1326 . -2) (undo-tree-id1327 . -2) (undo-tree-id1328 . -2) (undo-tree-id1329 . -2) (undo-tree-id1330 . -2) (undo-tree-id1331 . -2) (undo-tree-id1332 . -2) (undo-tree-id1333 . -2) (undo-tree-id1334 . -2) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -2) (undo-tree-id1362 . -2) (undo-tree-id1363 . -2) (undo-tree-id1364 . -2) (undo-tree-id1365 . -2) (undo-tree-id1366 . -2) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) (undo-tree-id1369 . -2) (undo-tree-id1370 . -2) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) (undo-tree-id1373 . -2) (undo-tree-id1374 . -2) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -2) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) (undo-tree-id1384 . -2) (undo-tree-id1385 . -2) (undo-tree-id1386 . -2) (undo-tree-id1387 . -2) (undo-tree-id1388 . -2) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -2) (undo-tree-id1392 . -2) (undo-tree-id1393 . -2) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -2) (undo-tree-id1398 . -2) (undo-tree-id1399 . -2) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -2) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (undo-tree-id1421 . -2) (undo-tree-id1422 . -2) (undo-tree-id1423 . -2) (undo-tree-id1424 . -2) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (undo-tree-id1440 . -2) (undo-tree-id1441 . -2) (undo-tree-id1442 . -2) (undo-tree-id1443 . -2) (undo-tree-id1444 . -2) (undo-tree-id1445 . -2) (undo-tree-id1446 . -2) (undo-tree-id1447 . -2) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) (undo-tree-id1450 . -2) (undo-tree-id1451 . -2) (undo-tree-id1452 . -2) (undo-tree-id1453 . -2) (undo-tree-id1454 . -2) (undo-tree-id1455 . -2) (undo-tree-id1456 . -2) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) 323) nil (26067 17901 912362 520000) 0 nil] [nil nil ((#("  " 0 2 (fontified nil)) . -299) (undo-tree-id1270 . -2) 301 (#("
 " 0 2 (fontified nil)) . 317) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 320 (322 . 326) (#("  " 0 2 (fontified t)) . -322) (undo-tree-id1273 . 2) (undo-tree-id1274 . -2) (undo-tree-id1275 . -2) (undo-tree-id1276 . -2) (undo-tree-id1277 . -2) (undo-tree-id1278 . -2) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -2) (undo-tree-id1286 . -2) (undo-tree-id1287 . -2) (undo-tree-id1288 . -2) (undo-tree-id1289 . -2) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (undo-tree-id1292 . -2) (undo-tree-id1293 . -2) (undo-tree-id1294 . -2) (undo-tree-id1295 . -2) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (321 . 321) (321 . 322)) ((#("
" 0 1 (fontified nil)) . 321) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (322 . 324) (#("    " 0 4 (fontified t)) . 322) (317 . 319) (299 . 301)) (26067 17897 960284 959000) 0 nil] [nil nil ((330 . 335) 321) ((#("
    " 0 5 (fontified t)) . 330) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -5)) (26067 17895 252025 346000) 0 nil])
([nil nil ((#("
#endif
// void test();
#ifndef __LEXER_INCLUDE__
#define __LEXER_INCLUDE__
#include \"token.h\"
#include <string>" 0 1 (fontified t) 1 2 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 2 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 9 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 9 11 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 11 23 (fontified t face font-lock-comment-face c-in-sws t) 23 24 (fontified t face font-lock-comment-face c-in-sws t) 24 25 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 25 27 (fontified t face font-lock-preprocessor-face c-in-sws t) 27 28 (fontified t face (font-lock-preprocessor-face font-lock-negation-char-face) c-in-sws t) 28 31 (fontified t face font-lock-preprocessor-face c-in-sws t) 31 50 (fontified t c-in-sws t) 50 51 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 51 57 (fontified t face font-lock-preprocessor-face c-in-sws t) 57 58 (fontified t c-in-sws t) 58 75 (fontified t face font-lock-variable-name-face c-in-sws t) 75 76 (fontified t c-in-sws t) 76 77 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 77 84 (fontified t face font-lock-preprocessor-face c-in-sws t) 84 85 (fontified t c-in-sws t) 85 94 (fontified t face font-lock-string-face c-in-sws t) 94 95 (fontified t c-in-sws t) 95 96 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 96 103 (fontified t face font-lock-preprocessor-face c-in-sws t) 103 104 (fontified t c-in-sws t) 104 105 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 105 111 (fontified t face font-lock-string-face c-in-sws t) 111 112 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t)) . 162) (undo-tree-id1461 . -24) (undo-tree-id1462 . -49) (undo-tree-id1463 . -112) (undo-tree-id1464 . -7) (undo-tree-id1465 . -8) (undo-tree-id1466 . -8) (undo-tree-id1467 . -23) (undo-tree-id1468 . -112) (undo-tree-id1469 . -112) (t 26067 17901 923294 292000)) nil (26067 17977 508544 340000) 0 nil])
nil
nil
([nil nil ((#("
}


namespace lexer_mod
{" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 3 (fontified t) 3 4 (c-is-sws t fontified t) 4 5 (c-is-sws t fontified t) 5 6 (c-is-sws t fontified t face font-lock-type-face) 6 13 (fontified t face font-lock-type-face) 13 14 (fontified t c-type c-decl-id-start face font-lock-type-face) 14 15 (fontified t) 15 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-1-face))) . 160) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -26) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -25) (undo-tree-id1476 . -25) (undo-tree-id1477 . -2) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -3) (undo-tree-id1485 . -3) (undo-tree-id1486 . -2) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -26) (undo-tree-id1514 . -26) (undo-tree-id1515 . -26) (undo-tree-id1516 . -26) (undo-tree-id1517 . -26) (undo-tree-id1518 . -26) (undo-tree-id1519 . -26) (undo-tree-id1520 . -26) (undo-tree-id1521 . -26) (undo-tree-id1522 . -26) (undo-tree-id1523 . -26) (undo-tree-id1524 . -26) (undo-tree-id1525 . -26) (undo-tree-id1526 . -26) (undo-tree-id1527 . -26) (undo-tree-id1528 . -26) (undo-tree-id1529 . -26) (undo-tree-id1530 . -26) (undo-tree-id1531 . -26) (undo-tree-id1532 . -26) (undo-tree-id1533 . -26) (undo-tree-id1534 . -26) (undo-tree-id1535 . -26) (undo-tree-id1536 . -26) (undo-tree-id1537 . -26) (undo-tree-id1538 . -24) (undo-tree-id1539 . -24) (undo-tree-id1540 . -24) (undo-tree-id1541 . -24) (undo-tree-id1542 . -24) (undo-tree-id1543 . -24) (undo-tree-id1544 . -24) (undo-tree-id1545 . -24) (undo-tree-id1546 . -24) (undo-tree-id1547 . -24) (undo-tree-id1548 . -24) (undo-tree-id1549 . -24) (undo-tree-id1550 . -24) (undo-tree-id1551 . -24) (undo-tree-id1552 . -24) (undo-tree-id1553 . -24) (undo-tree-id1554 . -24) (undo-tree-id1555 . -24) (undo-tree-id1556 . -24) (undo-tree-id1557 . -24) (undo-tree-id1558 . -24) (undo-tree-id1559 . -24) (undo-tree-id1560 . -24) (undo-tree-id1561 . -24) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -4) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -3) (undo-tree-id1587 . -3) (undo-tree-id1588 . -3) (undo-tree-id1589 . -3) (undo-tree-id1590 . -3) (undo-tree-id1591 . -3) (undo-tree-id1592 . -3) (undo-tree-id1593 . -3) (undo-tree-id1594 . -3) (undo-tree-id1595 . -3) (undo-tree-id1596 . -3) (undo-tree-id1597 . -3) (undo-tree-id1598 . -3) (undo-tree-id1599 . -3) (undo-tree-id1600 . -3) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1603 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1606 . -3) (undo-tree-id1607 . -3) (undo-tree-id1608 . -3) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . -2) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) (undo-tree-id1622 . -2) (undo-tree-id1623 . -2) (undo-tree-id1624 . -2) (undo-tree-id1625 . -2) (undo-tree-id1626 . -2) (undo-tree-id1627 . -2) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (undo-tree-id1631 . -2) (undo-tree-id1632 . -2) (undo-tree-id1633 . -2) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) (undo-tree-id1667 . -2) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2) (undo-tree-id1673 . -2) (undo-tree-id1674 . -2) (undo-tree-id1675 . -2) (undo-tree-id1676 . -2) (undo-tree-id1677 . -2) (undo-tree-id1678 . -2) (undo-tree-id1679 . -2) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -26) (undo-tree-id1703 . -2) (undo-tree-id1704 . -26) (t 26067 17977 519959 429000)) nil (26067 18001 660490 401000) 0 nil])
([nil nil ((86 . 89) (t 26067 18001 676625 609000)) nil (26067 18083 292209 636000) 0 nil])
([nil nil ((135 . 138)) nil (26067 18083 292205 575000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -135) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (#("l" 0 1 (fontified t)) . -136) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (#("l" 0 1 (fontified t)) . -137) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) 138 (t 26067 18083 299957 282000)) nil (26067 18148 747299 552000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -86) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#("l" 0 1 (fontified t)) . -87) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -88) (undo-tree-id1709 . -1) 89) nil (26067 18148 747292 183000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -175) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (#("e" 0 1 (fontified t)) . -176) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (#("a" 0 1 (fontified t)) . -177) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -178) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) 179 (t 26067 18148 756622 619000)) nil (26067 18186 833521 530000) 0 nil])
([nil nil ((175 . 178)) nil (26067 18186 833515 942000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -203) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("e" 0 1 (fontified t)) . -204) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (#("a" 0 1 (fontified t)) . -205) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("d" 0 1 (fontified t)) . -206) (undo-tree-id1733 . -1) 207) nil (26067 18186 833514 382000) 0 nil])
([nil nil ((203 . 206)) nil (26067 18186 833508 549000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -223) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (#("d" 0 1 (fontified t)) . -224) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) 225) nil (26067 18186 833507 187000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -221) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#("e" 0 1 (fontified t)) . -222) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) 223) nil (26067 18186 833501 919000) 0 nil])
([nil nil ((221 . 224)) nil (26067 18186 833487 931000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -224) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (#("k" 0 1 (fontified t)) . -225) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) 226 (224 . 226) (t 26067 18186 843288 508000)) nil (26067 18225 578921 24000) 0 nil])
([nil nil ((apply -36 69 190 undo--wrap-and-run-primitive-undo 69 190 ((183 . 186) (178 . 181) (162 . 165) (144 . 147) (138 . 141) (121 . 124) (115 . 118) (105 . 108) (99 . 102) (95 . 98) (89 . 92) (71 . 74) 69))) nil (26067 18225 578907 451000) 0 nil])
([nil nil ((232 . 234) (#("e" 0 1 (fontified t)) . -232) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (#("x" 0 1 (fontified t)) . -233) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (#("e" 0 1 (fontified t)) . -234) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (#("r" 0 1 (fontified t)) . -235) (undo-tree-id1759 . -1) 236 (206 . 208) (#("e" 0 1 (fontified t)) . -206) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (#("x" 0 1 (fontified t)) . -207) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (#("e" 0 1 (fontified t)) . -208) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -209) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) 210 (t 26067 18225 593287 720000)) nil (26067 18262 103153 211000) 0 nil])
([nil nil ((248 . 250) (#("e" 0 1 (fontified t)) . -248) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (#("x" 0 1 (fontified t)) . -249) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("e" 0 1 (fontified t)) . -250) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#("r" 0 1 (fontified t)) . -251) (undo-tree-id1752 . -1) 252) nil (26067 18262 103140 284000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -247) (undo-tree-id1770 . -1) 248 (t 26067 18262 109953 636000)) nil (26067 18312 866330 276000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -231) (undo-tree-id1769 . -1) 232) nil (26067 18312 866328 45000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -205) (undo-tree-id1768 . -1) 206) nil (26067 18312 866323 637000) 0 nil])
([nil nil ((234 . 236) (207 . 209) (t 26067 18312 876619 270000)) nil (26067 18338 780160 293000) 0 nil])
([nil nil ((251 . 253)) nil (26067 18338 780156 390000) 0 nil])
([nil nil ((253 . 254) (#("n" 0 1 (fontified t)) . -252) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 253 (252 . 253) (t 26067 18338 796618 741000)) nil (26067 18385 469794 270000) 0 nil])
([nil nil ((236 . 237)) nil (26067 18385 469785 239000) 0 nil])
([nil nil ((66 . 69) (t 26067 18385 479951 124000)) nil (26067 18436 144704 427000) 0 nil])
([nil nil ((212 . 213) (t 26067 18436 166616 762000)) nil (26067 18496 800202 291000) 0 nil])
([nil nil ((#("  /* class token_num */
  /* { */
  /* public: */
  /*   token_num(); */
  /*   ~token_num(); */
    
    
  /* }; */
  
      
" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (c-in-sws t c-is-sws t fontified t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 20 (c-in-sws t fontified t face font-lock-comment-face) 20 23 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 23 24 (c-in-sws t fontified t) 24 26 (c-in-sws t fontified t) 26 29 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 33 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 33 36 (c-in-sws t fontified t) 36 39 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 39 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 49 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 49 50 (c-in-sws t fontified t) 50 52 (c-in-sws t fontified t) 52 55 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 55 57 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 57 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 72 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 72 73 (c-in-sws t fontified t) 73 75 (c-in-sws t fontified t) 75 78 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 78 80 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 80 81 (c-in-sws t fontified t face font-lock-comment-face) 81 90 (c-in-sws t fontified t face font-lock-comment-face) 90 91 (c-in-sws t fontified t face font-lock-comment-face) 91 92 (c-in-sws t fontified t face font-lock-comment-face) 92 93 (c-in-sws t fontified t face font-lock-comment-face) 93 96 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 96 97 (c-in-sws t fontified t) 97 101 (c-in-sws t fontified t) 101 102 (c-in-sws t fontified t) 102 106 (c-in-sws t fontified t) 106 107 (c-in-sws t fontified t) 107 108 (c-in-sws t fontified t) 108 109 (c-in-sws t fontified t) 109 110 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 110 112 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 112 113 (c-in-sws t fontified t face font-lock-comment-face) 113 114 (c-in-sws t fontified t face font-lock-comment-face) 114 117 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 117 118 (c-in-sws t fontified t) 118 120 (c-in-sws t fontified t) 120 121 (c-in-sws t fontified t) 121 122 (c-in-sws t fontified t) 122 127 (c-in-sws t fontified t) 127 128 (c-in-sws t fontified t)) . 72) (undo-tree-id1803 . -127) (undo-tree-id1804 . -127) (undo-tree-id1805 . 1) (undo-tree-id1806 . -57) (undo-tree-id1807 . -57) (undo-tree-id1808 . -126) (undo-tree-id1809 . -36) (undo-tree-id1810 . -36) (undo-tree-id1811 . -36) (undo-tree-id1812 . -36) (undo-tree-id1813 . -35) (undo-tree-id1814 . -35) (undo-tree-id1815 . -126) (undo-tree-id1816 . -5) (undo-tree-id1817 . -127) (undo-tree-id1818 . -127) (undo-tree-id1819 . -127) (undo-tree-id1820 . -127) (undo-tree-id1821 . -127) (undo-tree-id1822 . -127) (undo-tree-id1823 . -127) (undo-tree-id1824 . -127) (undo-tree-id1825 . -127) (undo-tree-id1826 . -127) (undo-tree-id1827 . -5) (undo-tree-id1828 . -5) (undo-tree-id1829 . -126) 77 (t 26067 18497 933282 172000)) nil (26067 18533 968869 113000) 0 nil] [nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -66) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1776 . -1) (undo-tree-id1778 . -1) (undo-tree-id1780 . -1) (undo-tree-id1782 . -1) (undo-tree-id1784 . -1) (undo-tree-id1786 . -1) (undo-tree-id1788 . -1) (undo-tree-id1790 . -1) (undo-tree-id1792 . -1) (undo-tree-id1794 . -1) (undo-tree-id1796 . -1) (undo-tree-id1798 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -67) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -68) (undo-tree-id1802 . -1) 69 (t 26067 18469 326616 82000)) ((66 . 69) (t 26067 18486 359949 73000)) (26067 18486 338158 572000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -118) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) 119 (118 . 119) (55 . 59) (#("se>" 0 2 (c-in-sws t fontified nil) 2 3 (fontified nil syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) c-in-sws t)) . 55) (undo-tree-id2043 . -3) (undo-tree-id2044 . 1) (nil fontified nil 55 . 57) (nil face (rainbow-delimiters-depth-1-face font-lock-string-face) 55 . 57) (nil c-in-sws t 55 . 57) (55 . 57) (#("set>" 0 4 (c-in-sws t fontified nil)) . -55) (nil fontified nil 55 . 59) (nil face (rainbow-delimiters-depth-1-face font-lock-string-face) 55 . 59) (nil c-in-sws t 55 . 59) (55 . 59) (#("set" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face)) . -55) (undo-tree-id2045 . -3) (undo-tree-id2046 . -3) 58 (55 . 58) (apply yas--snippet-revive 46 56 #s(yas--snippet nil nil #s(yas--exit 55 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 55 nil) 8 nil nil nil nil)) (46 . 56) (#("include <$0>" 0 12 (fontified nil)) . 46) (undo-tree-id2047 . -12) (46 . 58) (#("i" 0 1 (c-in-sws t fontified nil)) . 46) (undo-tree-id2048 . -1) (46 . 47) (#("include <header>" 0 16 (fontified nil)) . -46) (undo-tree-id2049 . -16) (46 . 62) (#("in" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -46) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) 48 (46 . 48) (#("o" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -46) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) 47 (46 . 47) (45 . 46) (45 . 46) (t 26067 18533 976614 771000)) nil (26067 19260 654099 915000) 0 nil])
nil
([nil nil ((109 . 113) (109 . 110) 117) nil (26067 19260 652888 149000) 0 nil])
([nil nil ((108 . 113)) nil (26067 19260 652887 655000) 0 nil])
([nil nil ((113 . 116)) nil (26067 19260 652887 241000) 0 nil])
([nil nil ((apply yas--snippet-revive 113 121 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (113 . 121) (#("private:" 0 8 (fontified nil)) . 113) (113 . 121) (#("p" 0 1 (fontified nil)) . 113) (113 . 114) (#("private:" 0 8 (fontified nil)) . -113) (113 . 121) (#("pra" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -113) (undo-tree-id1841 . -3) 116) nil (26067 19260 652886 152000) 0 nil])
([nil nil ((121 . 126)) nil (26067 19260 652884 454000) 0 nil])
([nil nil ((#("
    " 0 5 (fontified t)) . 121) (undo-tree-id1839 . -5) (undo-tree-id1840 . -5) 126) nil (26067 19260 652883 811000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 108) (undo-tree-id1838 . -5) 113) nil (26067 19260 652881 998000) 0 nil])
([nil nil ((108 . 111)) nil (26067 19260 652880 963000) 0 nil])
([nil nil ((124 . 125)) nil (26067 19260 652880 597000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -124) (undo-tree-id1837 . -1) 125) nil (26067 19260 652880 27000) 0 nil])
([nil nil ((124 . 125)) nil (26067 19260 652878 897000) 0 nil])
([nil nil ((125 . 129)) nil (26067 19260 652878 607000) 0 nil])
([nil nil ((128 . 131)) nil (26067 19260 652878 319000) 0 nil])
([nil nil ((132 . 133)) nil (26067 19260 652877 968000) 0 nil])
([nil nil ((133 . 134)) nil (26067 19260 652877 619000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 132) (undo-tree-id1835 . -2) (undo-tree-id1836 . -2) 134) nil (26067 19260 652877 25000) 0 nil])
([nil nil ((132 . 133)) nil (26067 19260 652875 252000) 0 nil])
([nil nil ((133 . 140)) nil (26067 19260 652874 919000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -133) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (#("n" 0 1 (fontified t)) . -134) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("t" 0 1 (fontified t)) . -135) (undo-tree-id1834 . -1) 136) nil (26067 19260 652873 382000) 0 nil])
([nil nil ((133 . 136)) nil (26067 19260 652862 906000) 0 nil])
([nil nil ((140 . 141)) nil (26067 19260 652859 66000) 0 nil])
([nil nil ((186 . 191) (t 26067 19260 663266 586000)) nil (26067 19294 910830 515000) 0 nil])
([nil nil ((191 . 193)) nil (26067 19294 910830 145000) 0 nil])
([nil nil ((191 . 199) (#("o" 0 1 (fontified nil)) . 191) (191 . 192) (#("operator" 0 8 (fontified nil)) . -191) (191 . 199) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -191) (undo-tree-id2413 . -2) 193) nil (26067 19294 910829 272000) 0 nil])
([nil nil ((199 . 200)) nil (26067 19294 910827 894000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -199) (undo-tree-id2412 . -1) 200) nil (26067 19294 910827 337000) 0 nil])
([nil nil ((199 . 201)) nil (26067 19294 910825 757000) 0 nil])
([nil nil ((201 . 203)) nil (26067 19294 910825 466000) 0 nil])
([nil nil ((203 . 204)) nil (26067 19294 910825 124000) 0 nil])
([nil nil ((191 . 192)) nil (26067 19294 910824 704000) 0 nil])
([nil nil ((191 . 194)) nil (26067 19294 910824 68000) 0 nil])
([nil nil ((191 . 194) (#("i" 0 1 (fontified nil)) . 191) (191 . 192) (#("int" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -191) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -2) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -2) (undo-tree-id2150 . -2) (undo-tree-id2151 . -2) (undo-tree-id2152 . -2) (undo-tree-id2153 . -2) (undo-tree-id2154 . -2) (undo-tree-id2155 . -2) (undo-tree-id2156 . -2) (undo-tree-id2157 . -2) (undo-tree-id2158 . -2) (undo-tree-id2159 . -2) (undo-tree-id2160 . -2) (undo-tree-id2161 . -2) (undo-tree-id2162 . -2) (undo-tree-id2163 . -2) (undo-tree-id2164 . -2) (undo-tree-id2165 . -2) (undo-tree-id2166 . -2) (undo-tree-id2167 . -2) (undo-tree-id2168 . -2) (undo-tree-id2169 . -2) (undo-tree-id2170 . -2) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -2) (undo-tree-id2175 . -2) (undo-tree-id2176 . -2) (undo-tree-id2177 . -2) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) (undo-tree-id2182 . -2) (undo-tree-id2183 . -2) (undo-tree-id2184 . -2) (undo-tree-id2185 . -2) (undo-tree-id2186 . -2) (undo-tree-id2187 . -2) (undo-tree-id2188 . -2) (undo-tree-id2189 . -2) (undo-tree-id2190 . -2) (undo-tree-id2191 . -2) (undo-tree-id2192 . -2) (undo-tree-id2193 . -2) (undo-tree-id2194 . -2) (undo-tree-id2195 . -2) (undo-tree-id2196 . -2) (undo-tree-id2197 . -2) (undo-tree-id2198 . -2) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -3) (undo-tree-id2207 . -3) (undo-tree-id2208 . -3) (undo-tree-id2209 . -3) (undo-tree-id2210 . -3) (undo-tree-id2211 . -3) (undo-tree-id2212 . -3) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -3) (undo-tree-id2216 . -3) (undo-tree-id2217 . -3) (undo-tree-id2218 . -3) (undo-tree-id2219 . -3) (undo-tree-id2220 . -3) (undo-tree-id2221 . -3) (undo-tree-id2222 . -3) (undo-tree-id2223 . -3) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -3) (undo-tree-id2230 . -3) (undo-tree-id2231 . -3) (undo-tree-id2232 . -3) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) (undo-tree-id2238 . -3) (undo-tree-id2239 . -3) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . -3) (undo-tree-id2278 . -3) (undo-tree-id2279 . -3) (undo-tree-id2280 . -3) (undo-tree-id2281 . -3) (undo-tree-id2282 . -3) (undo-tree-id2283 . -3) (undo-tree-id2284 . -3) (undo-tree-id2285 . -3) (undo-tree-id2286 . -3) (undo-tree-id2287 . -3) (undo-tree-id2288 . -3) (undo-tree-id2289 . -3) (undo-tree-id2290 . -3) (undo-tree-id2291 . -3) (undo-tree-id2292 . -3) (undo-tree-id2293 . -3) (undo-tree-id2294 . -3) (undo-tree-id2295 . -3) (undo-tree-id2296 . -3) (undo-tree-id2297 . -3) (undo-tree-id2298 . -3) (undo-tree-id2299 . -3) (undo-tree-id2300 . -3) (undo-tree-id2301 . -3) (undo-tree-id2302 . -3) (undo-tree-id2303 . -3) (undo-tree-id2304 . -3) (undo-tree-id2305 . -3) (undo-tree-id2306 . -3) (undo-tree-id2307 . -3) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -3) (undo-tree-id2329 . -3) (undo-tree-id2330 . -3) (undo-tree-id2331 . -3) (undo-tree-id2332 . -3) (undo-tree-id2333 . -3) (undo-tree-id2334 . -3) (undo-tree-id2335 . -3) (undo-tree-id2336 . -3) (undo-tree-id2337 . -3) (undo-tree-id2338 . -3) (undo-tree-id2339 . -3) (undo-tree-id2340 . -3) (undo-tree-id2341 . -3) (undo-tree-id2342 . -3) (undo-tree-id2343 . -3) (undo-tree-id2344 . -3) (undo-tree-id2345 . -3) (undo-tree-id2346 . -3) (undo-tree-id2347 . -3) (undo-tree-id2348 . -3) (undo-tree-id2349 . -3) (undo-tree-id2350 . -3) (undo-tree-id2351 . -3) (undo-tree-id2352 . -3) (undo-tree-id2353 . -3) (undo-tree-id2354 . -3) (undo-tree-id2355 . -3) (undo-tree-id2356 . -3) (undo-tree-id2357 . -3) (undo-tree-id2358 . -3) (undo-tree-id2359 . -3) (undo-tree-id2360 . -3) (undo-tree-id2361 . -3) (undo-tree-id2362 . -3) (undo-tree-id2363 . -3) (undo-tree-id2364 . -3) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) (undo-tree-id2369 . -3) (undo-tree-id2370 . -3) (undo-tree-id2371 . -3) (undo-tree-id2372 . -3) (undo-tree-id2373 . -3) (undo-tree-id2374 . -3) (undo-tree-id2375 . -3) (undo-tree-id2376 . -3) (undo-tree-id2377 . -3) (undo-tree-id2378 . -3) (undo-tree-id2379 . -3) (undo-tree-id2380 . -3) (undo-tree-id2381 . -3) (undo-tree-id2382 . -3) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) (undo-tree-id2388 . -3) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) 194) nil (26067 19294 910813 720000) 0 nil])
([nil nil ((141 . 146) (t 26067 19294 919932 555000)) nil (26067 19302 444046 352000) 0 nil])
([nil nil ((146 . 153)) nil (26067 19302 444045 434000) 0 nil])
([nil nil ((153 . 154)) nil (26067 19302 444041 474000) 0 nil])
([nil nil ((124 . 127) (t 26067 19302 466599 68000)) nil (26067 19495 949753 596000) 0 nil])
([nil nil ((120 . 124) (#("  " 0 2 (fontified nil)) . 120) (126 . 127) (120 . 122) (#("    " 0 4 (fontified nil)) . 120) (undo-tree-id2414 . -4) (127 . 128)) nil (26067 19495 949750 640000) 0 nil])
([nil nil ((nil rear-nonsticky nil 230 . 231) (#("
" 0 1 (fontified nil)) . -248) (226 . 249) 213 (t 26067 19495 959928 471000)) nil (26067 20141 564740 579000) 0 nil])
([nil nil ((231 . 232)) nil (26067 20141 564739 676000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-type-face)) . -231) (undo-tree-id2426 . -1) 232) nil (26067 20141 564739 77000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -231) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (#("n" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -232) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (#("t" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -233) (undo-tree-id2425 . -1) 234) nil (26067 20141 564737 62000) 0 nil])
([nil nil ((231 . 235)) nil (26067 20141 564731 441000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -234) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) 235) nil (26067 20141 564730 689000) 0 nil])
([nil nil ((234 . 235)) nil (26067 20141 564728 814000) 0 nil])
([nil nil ((231 . 235) (#("v" 0 1 (fontified nil)) . 231) (231 . 232) (#("void" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -231) (undo-tree-id2418 . -4) 235) nil (26067 20141 564727 679000) 0 nil])
([nil nil ((247 . 248)) nil (26067 20141 564726 287000) 0 nil])
([nil nil ((248 . 251)) nil (26067 20141 564725 957000) 0 nil])
([nil nil ((251 . 253)) nil (26067 20141 564725 269000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -251) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (#("z" 0 1 (fontified t face font-lock-variable-name-face)) . -252) (undo-tree-id2417 . -1) 253) nil (26067 20141 564724 142000) 0 nil])
([nil nil ((251 . 253)) nil (26067 20141 564711 496000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -251) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -252) (undo-tree-id2429 . -1) 253 (t 26067 20141 609915 323000)) nil (26067 20159 848628 712000) 0 nil])
([nil current ((251 . 254)) nil (26067 20159 848618 812000) 0 nil])
nil

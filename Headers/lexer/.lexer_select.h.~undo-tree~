(undo-tree-save-format-version . 1)
"37b0dcb32b7f2303d9dc32f1054d76332e076cee"
[nil nil nil nil (26078 56063 814840 284000) 0 nil]
([nil nil ((nil rear-nonsticky nil 694 . 695) (#("
" 0 1 (fontified nil)) . -728) (692 . 729) 671 (t 26078 7380 925742 280000)) nil (26078 56063 814838 998000) 0 nil])
([nil nil ((738 . 741) (737 . 738) (731 . 737) (#("s" 0 1 (fontified nil)) . 731) (731 . 732) (#("string" 0 6 (fontified nil)) . -731) (731 . 737) (#("s" 0 1 (fontified t)) . -731) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 732 (731 . 732) (729 . 731) (726 . 729)) nil (26078 56063 814835 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 658 . 659) (#("
" 0 1 (fontified nil)) . -691) (656 . 692) 655 (t 26078 56063 823309 343000)) nil (26079 25922 100171 702000) 0 nil])
([nil nil ((#("std::string" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t) 5 11 (fontified t face font-lock-type-face)) . 674) (undo-tree-id150 . -10)) nil (26079 25922 100170 834000) 0 nil])
([nil nil ((674 . 685)) nil (26079 25922 100169 432000) 0 nil])
([nil nil ((679 . 680) (#("G" 0 1 (fontified t face font-lock-variable-name-face)) . -679) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 680 (679 . 680) (nil face (rainbow-delimiters-depth-2-face) 674 . 678) (nil fontified nil 674 . 678) (674 . 678) (#("F" 0 1 (fontified nil)) . 674) (nil face (rainbow-delimiters-depth-2-face) 674 . 675) (nil fontified nil 674 . 675) (674 . 675) (#("FILE" 0 4 (fontified nil)) . -674) (nil face (rainbow-delimiters-depth-2-face) 674 . 678) (nil fontified nil 674 . 678) (674 . 678) (#("F" 0 1 (fontified t face font-lock-type-face)) . -674) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 675 (674 . 675) (675 . 677) (#("s" 0 1 (fontified t)) . -675) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("t" 0 1 (fontified t)) . -676) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("r" 0 1 (fontified t)) . -677) (undo-tree-id145 . -1) 678 (#("std::string" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t) 5 11 (fontified t face font-lock-type-face)) . 674) (undo-tree-id146 . -10) (undo-tree-id147 . -3) (undo-tree-id148 . -11) (undo-tree-id149 . -11)) nil (26079 25922 100159 738000) 0 nil])
([nil nil ((133 . 139) (apply yas--snippet-revive 124 134 #s(yas--snippet nil nil #s(yas--exit 133 nil) 15 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 133 nil) 15 nil nil nil nil)) (124 . 134) (#("include <$0>" 0 8 (fontified nil) 8 9 (syntax-table (4 . 62) fontified nil) 9 11 (fontified nil) 11 12 (syntax-table (5 . 60) fontified nil)) . 124) (undo-tree-id151 . -12) (124 . 136) (#("i" 0 1 (c-in-sws t fontified nil)) . 124) (undo-tree-id152 . -1) (124 . 125) (#("include <header>" 0 8 (fontified nil) 8 9 (syntax-table (4 . 62) fontified nil) 9 15 (fontified nil) 15 16 (syntax-table (5 . 60) fontified nil)) . -124) (undo-tree-id153 . -16) (124 . 140) (#("in" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -124) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) 126 (124 . 126) (123 . 124) (nil face (rainbow-delimiters-depth-1-face font-lock-string-face) 122 . 123) (nil fontified t 122 . 123) (nil c-in-sws t 122 . 123) (122 . 123) (t 26079 25922 109110 899000) 121) nil (26079 25939 83330 63000) 0 nil])
([nil nil ((888 . 889) (886 . 888) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -886) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 887 (886 . 887) (885 . 886) (880 . 885) (877 . 880) (t 26079 25939 95777 152000) 876) nil (26079 26067 27960 247000) 0 nil])
([nil nil ((895 . 896) (893 . 895) (892 . 893) (889 . 891) (888 . 889) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -888) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("," 0 1 (fontified t c-type c-decl-id-start)) . -889) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 890 (889 . 890) (885 . 889) (884 . 886) (#(" " 0 1 (fontified t)) . 884) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 885 (880 . 885) (#("e" 0 1 (fontified t)) . -880) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("n" 0 1 (fontified t)) . -881) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("u" 0 1 (fontified t)) . -882) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("m" 0 1 (fontified t face font-lock-keyword-face)) . -883) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 884 (880 . 884) (877 . 880) (t 26079 26067 49107 337000) 876) nil (26079 26116 778201 750000) 0 nil])
([nil current ((891 . 895) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -891) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -892) (undo-tree-id175 . -1) 893 (885 . 890) (#("str" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face)) . 885) (undo-tree-id176 . -2) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (t 26079 26116 792439 441000)) nil (26079 27093 63696 766000) 0 nil])
([nil nil ((apply -3 878 916 undo--wrap-and-run-primitive-undo 878 916 ((880 . 883) 901)) (t 26079 26166 329104 882000)) ((apply 3 878 913 undo--wrap-and-run-primitive-undo 878 913 ((#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 880) 897)) (t 26079 27042 649083 309000)) (26079 27042 632122 574000) 0 nil])
nil

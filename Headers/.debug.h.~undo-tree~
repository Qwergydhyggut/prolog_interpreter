(undo-tree-save-format-version . 1)
"810a6e36d7bbfb24130a4f46b1b28aa9fd69f709"
[nil nil nil nil (26064 62330 639887 173000) 0 nil]
([nil nil ((1 . 2) (t 26064 62267 463559 490000)) nil (26064 62330 639886 247000) 0 nil])
([nil nil ((2 . 5)) nil (26064 62330 639885 684000) 0 nil])
([nil nil ((apply yas--snippet-revive 2 9 #s(yas--snippet nil nil #s(yas--exit 9 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 9 nil) 1 nil nil nil nil)) (2 . 9) (#("define $0" 0 9 (fontified nil)) . 2) (undo-tree-id19 . -9) (2 . 11) (#("d" 0 1 (fontified nil)) . 2) (undo-tree-id20 . -1) (2 . 3) (#("define macro" 0 12 (fontified nil)) . -2) (undo-tree-id21 . -12) (2 . 14) (#("def" 0 1 (face font-lock-preprocessor-face fontified t) 1 2 (face font-lock-preprocessor-face fontified t) 2 3 (face font-lock-preprocessor-face fontified t)) . -2) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) 5) nil (26064 62330 639884 145000) 0 nil])
([nil nil ((9 . 13)) nil (26064 62330 639879 512000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -12) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 13) nil (26064 62330 639878 760000) 0 nil])
([nil nil ((12 . 15)) nil (26064 62330 639876 478000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -14) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 15) nil (26064 62330 639875 498000) 0 nil])
([nil nil ((14 . 20)) nil (26064 62330 639873 67000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -19) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 20) nil (26064 62330 639872 78000) 0 nil])
([nil nil ((19 . 21)) nil (26064 62330 639869 202000) 0 nil])
([nil nil ((21 . 23)) nil (26064 62330 639868 614000) 0 nil])
([nil nil ((22 . 24)) nil (26064 62330 639868 42000) 0 nil])
([nil nil ((24 . 25) (nil syntax-table (1) 22 . 23) (23 . 24)) nil (26064 62330 639867 503000) 0 nil])
([nil nil ((27 . 28)) nil (26064 62330 639866 658000) 0 nil])
([nil nil ((23 . 24)) nil (26064 62330 639865 935000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-string-face fontified t)) . -23) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 24) nil (26064 62330 639865 66000) 0 nil])
([nil nil ((23 . 24)) nil (26064 62330 639862 883000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-string-face fontified t)) . -23) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 24) nil (26064 62330 639861 926000) 0 nil])
([nil nil ((23 . 24)) nil (26064 62330 639860 516000) 0 nil])
([nil nil ((24 . 28)) nil (26064 62330 639859 859000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 28) nil (26064 62330 639859 203000) 0 nil])
([nil nil ((27 . 29)) nil (26064 62330 639857 197000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -28) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 29) nil (26064 62330 639856 483000) 0 nil])
([nil nil ((28 . 29)) nil (26064 62330 639854 850000) 0 nil])
([nil nil ((32 . 33)) nil (26064 62330 639854 390000) 0 nil])
([nil nil ((33 . 34)) nil (26064 62330 639853 886000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -33) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 34) nil (26064 62330 639852 876000) 0 nil])
([nil nil ((33 . 37)) nil (26064 62330 641273 783000) 0 nil])
([nil nil ((37 . 41)) nil (26064 62354 637427 614000) 0 nil] [nil nil ((37 . 45)) ((#("
		     " 0 1 (c-in-sws t fontified t) 1 2 (c-is-sws t fontified t) 2 8 (c-is-sws t fontified t)) . 37) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -8) (undo-tree-id31 . -8)) (26064 62330 639816 607000) 0 nil])
([nil nil ((41 . 42)) nil (26064 62354 637426 966000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t)) . -41) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 42) nil (26064 62354 637426 136000) 0 nil])
([nil nil ((41 . 42)) nil (26064 62354 637424 289000) 0 nil])
([nil nil ((42 . 44)) nil (26064 62354 637423 418000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -42) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("_" 0 1 (fontified t)) . -43) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 44) nil (26064 62354 637421 923000) 0 nil])
([nil nil ((42 . 44)) nil (26064 62354 637412 956000) 0 nil])
([nil nil ((44 . 50)) nil (26064 62354 637412 64000) 0 nil])
([nil nil ((52 . 53) 50) nil (26064 62354 637408 27000) 0 nil])
([nil current ((78 . 79) (73 . 76) (72 . 74) (71 . 73) (70 . 71) (#("d" 0 1 (fontified t c-in-sws t)) . -70) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 71 (61 . 71) (apply yas--snippet-revive 54 61 #s(yas--snippet nil nil #s(yas--exit 61 nil) 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 61 nil) 13 nil nil nil nil)) (54 . 61) (#("define $0" 0 9 (fontified nil)) . 54) (undo-tree-id3 . -9) (54 . 63) (#("d" 0 1 (c-in-sws t fontified nil)) . 54) (undo-tree-id4 . -1) (54 . 55) (#("define macro" 0 12 (c-in-sws t fontified nil)) . -54) (undo-tree-id5 . -12) (54 . 66) (#("de" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -54) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) 56 (55 . 56) (#("d" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -55) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("d" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -56) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("d" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -57) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -58) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 59 (54 . 59) (53 . 54) (#("@" 0 1 (fontified t c-is-sws t)) . -53) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 54 (53 . 54) (52 . 53) (t 26064 62354 653560 454000) 1) nil (26077 62873 468567 593000) 0 nil])
nil

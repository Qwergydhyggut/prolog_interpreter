(undo-tree-save-format-version . 1)
"21659e7c7e34c1b84b24a51314f73a4081f71d48"
[nil nil nil nil (26076 17169 96653 138000) 0 nil]
([nil nil ((74 . 92) (nil syntax-table nil 74 . 75) (nil syntax-table (1) 64 . 65) (#("t" 0 1 (fontified nil)) . 74) (nil syntax-table nil 75 . 76) (nil syntax-table (1) 64 . 65) (74 . 75) (nil syntax-table nil 74 . 75) (nil syntax-table (1) 64 . 65) (#("analysis_test.hpp\"" 0 18 (fontified nil c-in-sws t)) . -74) (undo-tree-id0 . -18) (74 . 92) (nil syntax-table nil 74 . 75) (nil syntax-table (1) 64 . 65) (#("t" 0 1 (face font-lock-string-face fontified t)) . -74) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (nil syntax-table nil 75 . 76) (nil syntax-table (1) 64 . 65) (74 . 75) (nil syntax-table nil 74 . 75) (nil syntax-table (1) 64 . 65) (65 . 74) (nil syntax-table nil 65 . 66) (nil syntax-table (1) 64 . 65) (#("an\"" 0 2 (fontified nil c-in-sws t) 2 3 (c-in-sws t face font-lock-string-face fontified nil)) . 65) (undo-tree-id100 . -3) (65 . 67) (#("analysis/" 0 9 (fontified nil c-in-sws t)) . -65) (65 . 74) (#("an" 0 1 (face font-lock-string-face c-in-sws t fontified t) 1 2 (face font-lock-string-face c-in-sws t fontified t)) . -65) (undo-tree-id101 . -2) (undo-tree-id102 . -2) 67 (65 . 67) (apply yas--snippet-revive 56 66 #s(yas--snippet nil nil #s(yas--exit 65 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 65 nil) 1 nil nil nil nil)) (56 . 66) (#("include \"$0\"" 0 12 (fontified nil)) . 56) (undo-tree-id103 . -12) (56 . 68) (#("i" 0 1 (fontified nil c-in-sws t)) . 56) (undo-tree-id104 . -1) (56 . 57) (#("include \"header\"" 0 16 (fontified nil)) . -56) (undo-tree-id105 . -16) (56 . 72) (#("in" 0 1 (face font-lock-preprocessor-face c-in-sws t fontified t) 1 2 (face font-lock-preprocessor-face c-in-sws t fontified t)) . -56) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) 58 (56 . 58) (55 . 56) (54 . 55) (t 26070 18110 966077 227000) 27) nil (26076 17169 96643 723000) 0 nil])
([nil current ((109 . 124) (nil syntax-table nil 109 . 110) (nil syntax-table (1) 102 . 103) (#("\"" 0 1 (fontified nil face font-lock-string-face c-in-sws t)) . 109) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (#("mysql_test.hpp\"" 0 15 (fontified nil)) . -109) (nil syntax-table nil 125 . 126) (nil syntax-table (1) 124 . 125) (109 . 124) (#("my" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face)) . -109) (undo-tree-id2 . -2) (undo-tree-id3 . -2) 111 (109 . 111) (108 . 109) (#("_" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -108) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 109 (103 . 109) (apply yas--snippet-revive 94 104 #s(yas--snippet nil nil #s(yas--exit 103 nil) 33 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 103 nil) 33 nil nil nil nil)) (94 . 104) (#("include \"$0\"" 0 12 (fontified nil)) . 94) (undo-tree-id6 . -12) (94 . 106) (#("i" 0 1 (c-in-sws t fontified nil)) . 94) (undo-tree-id7 . -1) (94 . 95) (#("include \"header\"" 0 16 (fontified nil)) . -94) (undo-tree-id8 . -16) (94 . 110) (#("in" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -94) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) 96 (94 . 96) (93 . 94) (92 . 93) (t 26076 17169 109971 130000) 55) nil (26078 12043 623556 898000) 0 nil])
nil

(undo-tree-save-format-version . 1)
"10f57d0a7822d51632468cbce34f4372ce0fbc4c"
[nil nil nil nil (26073 39481 941180 297000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]
([nil nil ((apply -21 1572 2257 undo--wrap-and-run-primitive-undo 1572 2257 ((2110 . 2113) (2037 . 2040) (1889 . 1892) (1816 . 1819) (1710 . 1713) (1640 . 1643) (1574 . 1577) 2235)) (t 26072 62395 765952 695000)) nil (26073 39481 941176 485000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 1572 1635 undo--wrap-and-run-primitive-undo 1572 1635 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1574) 1638)) (t 26073 39481 963401 14000)) nil (26073 39811 57638 911000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((1630 . 1631) (#("r" 0 1 (fontified t)) . 1630) (1630 . 1631) (#("R" 0 1 (fontified t)) . 1630)) nil (26073 39811 57637 762000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply 18 1635 2235 undo--wrap-and-run-primitive-undo 1635 2235 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2092) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2022) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1877) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1807) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1704) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1637) 2253))) nil (26073 39811 57633 996000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply -12 1805 2251 undo--wrap-and-run-primitive-undo 1805 2251 ((2101 . 2104) (2028 . 2031) (1880 . 1883) (1807 . 1810) 1805)) (t 26073 39811 63414 359000)) nil (26073 39852 769703 12000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 1805 1875 undo--wrap-and-run-primitive-undo 1805 1875 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1807) 1878)) (t 26073 39852 780082 713000)) nil (26073 39864 845688 565000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 1875 2020 undo--wrap-and-run-primitive-undo 1875 2020 ((#("// " 0 1 (face font-lock-comment-delimiter-face c-is-sws t fontified t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1877) 2023)) (t 26073 39864 856749 863000)) nil (26073 39877 846213 130000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((apply 6 2020 2235 undo--wrap-and-run-primitive-undo 2020 2235 ((#("// " 0 1 (face font-lock-comment-delimiter-face c-is-sws t fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2092) (#("// " 0 1 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2022) 2241)) (t 26073 39877 856750 390000)) nil (26073 42856 606898 577000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . 1779) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (t 26073 42859 36870 245000)) nil (26073 45800 290099 793000) 0 (:visualizer [4 0 1 #<marker in no buffer>])] [nil nil ((1544 . 1545) (1540 . 1544) (apply yas--snippet-revive 1513 1540 #s(yas--snippet nil (#s(yas--field 1 1520 1520 nil nil nil t nil)) nil 4 nil #s(yas--field 1 1520 1520 nil nil nil t nil) nil nil)) (1538 . 1539) (1533 . 1538) (#("token" 0 5 (fontified nil)) . -1533) (1533 . 1538) (1531 . 1533) (nil fontified nil 1520 . 1531) (nil face (rainbow-delimiters-depth-2-face) 1520 . 1531) (1520 . 1531) (#("to" 0 2 (fontified nil)) . 1520) (nil fontified nil 1520 . 1522) (nil face (rainbow-delimiters-depth-2-face) 1520 . 1522) (1520 . 1522) (#("token_class" 0 11 (fontified nil)) . -1520) (nil fontified nil 1520 . 1531) (nil face (rainbow-delimiters-depth-2-face) 1520 . 1531) (1520 . 1531) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1520) (undo-tree-id0 . -2) (undo-tree-id1 . -2) 1522 (1521 . 1522) (#("typename Tp" 0 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil) 9 11 (fontified nil face font-lock-type-face)) . 1521) (1520 . 1521) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1520 1520 nil nil nil t nil)) nil 4 nil #s(yas--field 1 1520 1520 nil nil nil t nil) nil nil)) (1513 . 1532) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 1513) (1513 . 1537) (#("v" 0 1 (fontified nil)) . 1513) (1513 . 1514) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (syntax-table (4 . 62) fontified nil) 7 18 (fontified nil) 18 19 (c-type c-<>-arg-sep fontified nil) 19 34 (fontified nil) 34 35 (syntax-table (5 . 60) fontified nil)) . -1513) (1513 . 1548) (#("ve" 0 1 (fontified t) 1 2 (fontified t)) . -1513) (undo-tree-id2 . -2) (undo-tree-id3 . -2) 1515 (1513 . 1515) (1506 . 1508) (#(" " 0 1 (fontified nil)) . 1506) (1511 . 1512) (1506 . 1507) (#("  " 0 2 (fontified nil)) . 1506) (1511 . 1512) (1508 . 1511) (#("st" 0 2 (fontified nil)) . 1508) (1508 . 1510) (#("std" 0 3 (fontified nil)) . -1508) (1508 . 1511) (#("st" 0 1 (fontified t) 1 2 (fontified t)) . -1508) (undo-tree-id4 . -2) (undo-tree-id5 . -2) 1510 (1508 . 1510) (1505 . 1508) (t 26073 39915 690085 253000) 1472) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 1505) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -1) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (#("st" 0 1 (fontified nil) 1 2 (fontified nil)) . 1508) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (1508 . 1510) (#("std" 0 3 (fontified nil)) . 1508) (1508 . 1511) (#("st" 0 2 (fontified nil)) . 1508) (1508 . 1510) (#("std" 0 3 (fontified nil face font-lock-constant-face)) . 1508) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (#(":" 0 1 (fontified nil)) . 1511) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (1506 . 1508) (#(" " 0 1 (fontified nil)) . 1506) (#(":" 0 1 (fontified nil)) . 1511) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (1506 . 1507) (#("  " 0 2 (fontified nil)) . 1506) (#("ve" 0 1 (fontified nil) 1 2 (fontified nil)) . 1513) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (1513 . 1515) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (fontified nil syntax-table (4 . 62)) 7 18 (fontified nil) 18 19 (fontified nil c-type c-<>-arg-sep) 19 34 (fontified nil) 34 35 (fontified nil syntax-table (5 . 60))) . 1513) (1513 . 1548) (#("v" 0 1 (fontified nil)) . 1513) (1513 . 1514) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 1513) (1513 . 1537) (#("vector<typename Tp>" 0 6 (fontified nil face font-lock-type-face) 6 7 (fontified nil face (rainbow-delimiters-depth-2-face) syntax-table (4 . 62)) 7 15 (fontified nil face font-lock-keyword-face) 15 16 (fontified nil) 16 18 (fontified nil face font-lock-type-face) 18 19 (fontified nil c-type c-decl-id-start face (rainbow-delimiters-depth-2-face) syntax-table (5 . 60))) . 1513) (undo-tree-id473 . -19) (undo-tree-id474 . -19) (undo-tree-id475 . -7) (undo-tree-id476 . -7) (undo-tree-id477 . -7) (undo-tree-id478 . -7) (undo-tree-id479 . -19) (undo-tree-id480 . -19) (undo-tree-id481 . -19) (undo-tree-id482 . -19) (undo-tree-id483 . -19) (undo-tree-id484 . -19) (undo-tree-id485 . -19) (undo-tree-id486 . -19) (undo-tree-id487 . -19) (undo-tree-id488 . -19) (undo-tree-id489 . -19) (undo-tree-id490 . -19) (undo-tree-id491 . -19) (undo-tree-id492 . -19) (undo-tree-id493 . -19) (undo-tree-id494 . -19) (undo-tree-id495 . -19) (undo-tree-id496 . -19) (undo-tree-id497 . -19) (undo-tree-id498 . -19) (undo-tree-id499 . -19) (undo-tree-id500 . -19) (undo-tree-id501 . -19) (undo-tree-id502 . -19) (undo-tree-id503 . -19) (undo-tree-id504 . -19) (undo-tree-id505 . -19) (undo-tree-id506 . -19) (undo-tree-id507 . -19) (undo-tree-id508 . -19) (undo-tree-id509 . -19) (undo-tree-id510 . -19) (undo-tree-id511 . -19) (undo-tree-id512 . -19) (undo-tree-id513 . -19) (undo-tree-id514 . -19) (undo-tree-id515 . -19) (undo-tree-id516 . -19) (undo-tree-id517 . -19) (undo-tree-id518 . -19) (undo-tree-id519 . -19) (undo-tree-id520 . -19) (undo-tree-id521 . -19) (undo-tree-id522 . -19) (undo-tree-id523 . -19) (undo-tree-id524 . -19) (undo-tree-id525 . -19) (undo-tree-id526 . -19) (undo-tree-id527 . -19) (undo-tree-id528 . -19) (undo-tree-id529 . -19) (undo-tree-id530 . -19) (undo-tree-id531 . -19) (undo-tree-id532 . -19) (undo-tree-id533 . -19) (undo-tree-id534 . -19) (undo-tree-id535 . -19) (undo-tree-id536 . -19) (undo-tree-id537 . -19) (undo-tree-id538 . -19) (undo-tree-id539 . -19) (undo-tree-id540 . -19) (undo-tree-id541 . -19) (undo-tree-id542 . -19) (undo-tree-id543 . -19) (undo-tree-id544 . -19) (undo-tree-id545 . -19) (undo-tree-id546 . -19) (undo-tree-id547 . -19) (undo-tree-id548 . -19) (undo-tree-id549 . -19) (undo-tree-id550 . -19) (undo-tree-id551 . -19) (undo-tree-id552 . -19) (undo-tree-id553 . -19) (undo-tree-id554 . -19) (undo-tree-id555 . -19) (undo-tree-id556 . -19) (undo-tree-id557 . -19) (undo-tree-id558 . -19) (undo-tree-id559 . -19) (undo-tree-id560 . -19) (undo-tree-id561 . -19) (undo-tree-id562 . -19) (undo-tree-id563 . -19) (undo-tree-id564 . -19) (undo-tree-id565 . -19) (undo-tree-id566 . -19) (undo-tree-id567 . -19) (undo-tree-id568 . -19) (undo-tree-id569 . -19) (undo-tree-id570 . -19) (undo-tree-id571 . -19) (undo-tree-id572 . -19) (undo-tree-id573 . -19) (undo-tree-id574 . -19) (undo-tree-id575 . -19) (undo-tree-id576 . -19) (undo-tree-id577 . -19) (undo-tree-id578 . -19) (undo-tree-id579 . -19) (undo-tree-id580 . -19) (undo-tree-id581 . -19) (undo-tree-id582 . -19) (undo-tree-id583 . -19) (undo-tree-id584 . -19) (undo-tree-id585 . -19) (undo-tree-id586 . -19) (undo-tree-id587 . -19) (apply yas--snippet-revive 1513 1532 #s(yas--snippet nil (#s(yas--field 1 1520 1520 nil nil nil t nil)) nil 4 nil #s(yas--field 1 1520 1520 nil nil nil t nil) nil nil)) (#("t" 0 1 (fontified nil)) . 1520) (1521 . 1532) (#("o" 0 1 (fontified nil)) . 1521) (1520 . 1522) (#("token_class" 0 11 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1520) (nil face nil 1520 . 1531) (1520 . 1531) (#("to" 0 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1520) (nil face nil 1520 . 1522) (1520 . 1522) (#("token_class" 0 11 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1520) (undo-tree-id588 . -11) (undo-tree-id589 . -11) (undo-tree-id590 . -11) (nil face font-lock-constant-face 1520 . 1531) (#("::" 0 1 (fontified nil) 1 2 (fontified nil)) . 1531) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (#("token" 0 5 (fontified nil)) . 1533) (1533 . 1538) (#("token" 0 5 (fontified nil face font-lock-type-face)) . 1533) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (#("&" 0 1 (fontified nil)) . 1538) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1520 1520 nil nil nil t nil)) nil 4 nil #s(yas--field 1 1520 1520 nil nil nil t nil) nil nil)) (#(" lll" 0 1 (fontified nil) 1 2 (fontified nil face font-lock-variable-name-face) 2 3 (fontified nil face font-lock-variable-name-face) 3 4 (fontified nil face font-lock-variable-name-face)) . 1540) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (#(";" 0 1 (fontified t)) . 1544) (t 26073 42838 76869 404000)) (26073 42838 56597 88000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((1779 . 1780)) nil (26073 45800 290097 469000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
nil
([nil nil ((1780 . 1781)) nil (26073 45800 290096 927000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("-" 0 1 (fontified t)) . -1779) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#(">" 0 1 (fontified t)) . -1780) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 1781) nil (26073 45800 290095 753000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1779 . 1780)) nil (26073 45800 290092 954000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -1792) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 1793) nil (26073 45800 290092 326000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1792 . 1793)) nil (26073 45800 290090 809000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1793 . 1794)) nil (26073 45800 290090 329000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -1863) (undo-tree-id713 . -1) 1864) nil (26073 45800 290089 769000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1863 . 1864)) nil (26073 45800 290088 756000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1864 . 1865)) nil (26073 45800 290088 129000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -1948) (undo-tree-id711 . -1) (undo-tree-id712 . -1) 1949) nil (26073 45800 290087 513000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1948 . 1949)) nil (26073 45800 290085 792000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1949 . 1950)) nil (26073 45800 290085 499000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -1971) (undo-tree-id709 . -1) (undo-tree-id710 . -1) 1972) nil (26073 45800 290084 771000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1971 . 1972)) nil (26073 45800 290083 16000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((1972 . 1973)) nil (26073 45800 291698 16000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -1994) (undo-tree-id735 . -1) (undo-tree-id736 . -1) 1995) nil (26073 45835 803934 41000) 0 (:visualizer [3 0 1 #<marker in no buffer>])] [nil nil ((#("t" 0 1 (fontified t)) . -1995) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 1996) ((1995 . 1996)) (26073 45800 290079 994000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((1994 . 1995)) nil (26073 45835 803932 557000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
nil
([nil nil ((1995 . 1996)) nil (26073 45835 803932 109000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -2017) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 2018) nil (26073 45835 803931 399000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2017 . 2018)) nil (26073 45835 803929 816000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2018 . 2019)) nil (26073 45835 803928 903000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -2083) (undo-tree-id731 . -1) (undo-tree-id732 . -1) 2084) nil (26073 45835 803928 143000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2083 . 2084)) nil (26073 45835 803926 4000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2084 . 2085)) nil (26073 45835 803925 335000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -2168) (undo-tree-id729 . -1) (undo-tree-id730 . -1) 2169) nil (26073 45835 803924 844000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2168 . 2169)) nil (26073 45835 803923 199000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2169 . 2170)) nil (26073 45835 803922 691000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -2191) (undo-tree-id727 . -1) (undo-tree-id728 . -1) 2192) nil (26073 45835 803921 856000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2191 . 2192)) nil (26073 45835 803920 386000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2192 . 2193)) nil (26073 45835 803919 830000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((#("." 0 1 (fontified t)) . -2214) (undo-tree-id725 . -1) (undo-tree-id726 . -1) 2215) nil (26073 45835 803919 269000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2214 . 2215)) nil (26073 45835 803917 427000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2215 . 2216)) nil (26073 45836 712436 331000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((2017 . 2018) (#("-" 0 1 (fontified t)) . -2017) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) 2018 (#(">" 0 1 (fontified t)) . 2018)) nil (26073 45849 404275 272000) 0 (:visualizer [2 0 1 #<marker in no buffer>])] [nil nil ((#("." 0 1 (fontified t)) . -2237) (undo-tree-id723 . -1) (undo-tree-id724 . -1) 2238) ((2237 . 2238)) (26073 45836 280408 680000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((2238 . 2239) (2237 . 2238) (#("." 0 1 (fontified t)) . -2237) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) 2238 (2018 . 2019) (2017 . 2018) (#("." 0 1 (fontified t)) . 2017) (t 26073 45850 136989 827000)) nil (26073 45897 956331 661000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((2237 . 2238)) ((#("-" 0 1 (fontified t)) . 2237) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1)) (26073 45835 806142 60000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((apply -12 1806 2259 undo--wrap-and-run-primitive-undo 1806 2259 ((2108 . 2111) (2034 . 2037) (1882 . 1885) (1808 . 1811) 1806)) (t 26073 45901 513658 551000)) nil (26073 45960 393405 739000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((2238 . 2239)) ((#(">" 0 1 (fontified t)) . 2238) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1)) (26073 45835 803902 353000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((apply 3 1806 1877 undo--wrap-and-run-primitive-undo 1806 1877 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1808) 1880)) (t 26073 45962 536994 316000)) nil (26073 45998 466651 517000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
nil
([nil nil ((apply 9 1877 2246 undo--wrap-and-run-primitive-undo 1877 2246 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2099) (#("// " 0 1 (fontified t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2028) (#("// " 0 1 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1879) 2255)) (t 26073 45998 676995 763000)) nil (26073 46641 135374 182000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 2252 . 2253) (#("
" 0 1 (fontified nil)) . -3062) (2252 . 3063) (t 26073 46641 143688 145000)) nil (26073 47545 823585 391000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((2270 . 2272) (#("y" 0 1 (fontified t)) . -2270) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 2271 (2270 . 2271) (#("r" 0 1 (fontified t)) . -2270) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) 2271 (2266 . 2271) (#(" default_syna" 0 13 (fontified t)) . 2266) (undo-tree-id1035 . -12) (undo-tree-id1036 . -13) (undo-tree-id1037 . -13)) nil (26073 47545 823583 122000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((3055 . 3056) 2294) nil (26073 47560 983727 854000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
([nil nil ((196 . 200) (#("y" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -196) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#("t" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -197) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) 198 (196 . 198) (#("y" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -196) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("t" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -197) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) 198 (196 . 198) (187 . 196) (186 . 187) (185 . 186) (183 . 185) (#("y" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -183) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 184 (179 . 184) (apply yas--snippet-revive 170 180 #s(yas--snippet nil nil #s(yas--exit 179 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 179 nil) 8 nil nil nil nil)) (170 . 180) (#("include \"$0\"" 0 12 (fontified nil)) . 170) (undo-tree-id1051 . -12) (170 . 182) (#("i" 0 1 (c-in-sws t fontified nil)) . 170) (undo-tree-id1052 . -1) (170 . 171) (#("include \"header\"" 0 16 (fontified nil)) . -170) (undo-tree-id1053 . -16) (170 . 186) (#("in" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -170) (undo-tree-id1054 . -2) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) 172 (171 . 172) (#("m" 0 1 (fontified t c-in-sws t face font-lock-preprocessor-face)) . -171) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) 172 (170 . 172) (169 . 170) (168 . 169) (t 26073 47545 837057 669000) 167) nil (26073 47592 815214 641000) 0 (:visualizer [1 0 1 #<marker in no buffer>])] [nil nil ((2308 . 2310) (t 26073 47545 837057 669000)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face))) . 2308) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1)) (26073 47560 980766 178000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((2341 . 2343) (t 26073 47593 270392 909000)) nil (26073 47646 677738 667000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
nil
([nil nil ((2342 . 2344)) nil (26073 47646 677738 136000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2344 . 2347)) nil (26073 47646 677737 112000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("y" 0 1 (fontified t)) . -2346) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) 2347) nil (26073 47646 677736 243000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2346 . 2349)) nil (26073 47646 677728 800000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2349 . 2354)) nil (26073 47646 677728 340000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2354 . 2355)) nil (26073 47646 677727 972000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2355 . 2359)) nil (26073 47646 677727 622000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2359 . 2361)) nil (26073 47646 677727 241000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2361 . 2364)) nil (26073 47646 677726 381000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2364 . 2368)) nil (26073 47646 677723 138000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2398 . 2400) (#("y" 0 1 (fontified t)) . -2398) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) 2399 (2397 . 2399) (2390 . 2397) (#("J" 0 1 (fontified t)) . -2390) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) 2391 (2390 . 2391) (#("_" 0 1 (fontified t)) . -2390) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) 2391 (2390 . 2391) (#("J" 0 1 (fontified t)) . -2390) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) 2391 (2388 . 2391) (2386 . 2388) (2376 . 2386) (2371 . 2376) (#("s" 0 1 (fontified t)) . -2371) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) 2372 (2369 . 2372) (2368 . 2369) (t 26073 47646 707061 716000)) nil (26073 47689 13514 366000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply -36 2286 3185 undo--wrap-and-run-primitive-undo 2286 3185 ((3180 . 3183) (3024 . 3027) (2950 . 2953) (2798 . 2801) (2724 . 2727) (2617 . 2620) (2547 . 2550) (2481 . 2484) (2412 . 2415) (2315 . 2318) (2310 . 2313) (2286 . 2289) 3149)) (t 26073 47689 20396 747000)) nil (26073 47986 522787 773000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1796 . 1797) (1795 . 1796) (1794 . 1795) (#("." 0 1 (fontified t)) . -1794) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) 1795 (1791 . 1795) (1789 . 1791) (1784 . 1789) (#("token" 0 5 (fontified nil)) . -1784) (1784 . 1789) (1782 . 1784) (1771 . 1782) (#("tok" 0 3 (fontified nil)) . 1771) (1771 . 1774) (#("token_class" 0 11 (fontified nil)) . -1771) (1771 . 1782) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1771) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) 1774 (1772 . 1774) (#("i" 0 1 (fontified t)) . -1772) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("j" 0 1 (fontified t)) . -1773) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) 1774 (1772 . 1774) (#("i" 0 1 (fontified t)) . -1772) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (#("o" 0 1 (fontified t)) . -1773) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) 1774 (1764 . 1774) (#("w" 0 1 (fontified t)) . -1764) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) 1765 (1764 . 1765) (#("w" 0 1 (fontified t)) . -1764) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (#("e" 0 1 (fontified t)) . -1765) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) 1766 (1762 . 1766) (#("e" 0 1 (fontified t)) . -1762) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("e" 0 1 (fontified t)) . -1763) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) 1764 (1761 . 1764) (1758 . 1761) (1757 . 1758) (#(":" 0 1 (fontified t)) . -1757) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) 1758 (1757 . 1758) (1754 . 1757) (1749 . 1754) (#("token" 0 5 (fontified nil)) . -1749) (1749 . 1754) (1734 . 1736) (#(" " 0 1 (fontified nil)) . 1734) (1747 . 1748) (1734 . 1735) (#("  " 0 2 (fontified nil)) . 1734) (1747 . 1748) (1736 . 1747) (#("to" 0 2 (fontified nil)) . 1736) (1736 . 1738) (#("token_class" 0 11 (fontified nil)) . -1736) (1736 . 1747) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1736) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) 1738 (1736 . 1738) (1733 . 1736) (t 26073 47986 570408 634000) 1671) nil (26073 48049 785979 782000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 1799 . 1800) (#("
" 0 1 (fontified nil)) . -1861) (1797 . 1862) 1796) nil (26073 48049 785957 639000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1855 . 1856) (#("L" 0 1 (fontified t)) . 1855) (undo-tree-id1072 . -1)) nil (26073 48049 785954 278000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1823 . 1824) (#("4" 0 1 (fontified t)) . 1823) (t 26073 48049 830411 154000)) nil (26073 48078 854393 469000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1820 . 1821) (#("4" 0 1 (fontified t face font-lock-variable-name-face)) . 1820) (undo-tree-id1099 . -1)) nil (26073 48078 854390 8000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 2259 . 2260) (#("
" 0 1 (fontified nil)) . -2328) (2257 . 2329) 2209 (t 26073 48078 863745 647000)) nil (26073 48143 688502 921000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2270 . 2271) (#("2" 0 1 (fontified t)) . 2270)) nil (26073 48143 688501 294000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 2479 . 2480) (#("
" 0 1 (fontified nil)) . -2548) (2477 . 2549) 2341) nil (26073 48143 688499 608000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((2490 . 2491) (#("2" 0 1 (fontified t)) . 2490)) nil (26073 48143 688494 41000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply -12 1863 2341 undo--wrap-and-run-primitive-undo 1863 2341 ((2198 . 2201) (2046 . 2049) (1972 . 1975) (1865 . 1868) 1863)) (t 26073 48143 697081 579000)) nil (26073 48566 459002 588000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1908 . 1911) (1905 . 1908) (1904 . 1905)) nil (26073 48566 459001 938000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply -3 1906 2054 undo--wrap-and-run-primitive-undo 1906 2054 ((1908 . 1911) 1977))) nil (26073 48566 459001 131000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 1863 1903 undo--wrap-and-run-primitive-undo 1863 1903 ((#("// " 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1865) 1906))) nil (26073 48566 458997 882000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply -6 2348 2575 undo--wrap-and-run-primitive-undo 2348 2575 ((2502 . 2505) (2350 . 2353) 2568)) (t 26073 48566 480431 835000)) nil (26073 48806 11126 836000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 2348 2497 undo--wrap-and-run-primitive-undo 2348 2497 ((#("// " 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . 2350)))) ((apply -3 2348 2500 undo--wrap-and-run-primitive-undo 2348 2500 ((2350 . 2353) 2363))) (26073 48964 134297 705000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply -3 2348 2574 undo--wrap-and-run-primitive-undo 2348 2574 ((2350 . 2353) 2497))) nil (26073 48980 811056 790000) 0 nil] [nil nil ((2371 . 2372) (2366 . 2371) (2364 . 2366) (2364 . 2367) (#("  " 0 2 (fontified t)) . 2364) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2) 2366 (2363 . 2366) (t 26073 48813 223775 41000)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 2363) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (2364 . 2366) (#("
  " 0 1 (fontified nil) 1 3 (fontified nil)) . 2364) (undo-tree-id2576 . 3) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (#("  " 0 2 (fontified nil)) . 2364) (undo-tree-id2580 . -2) (undo-tree-id2581 . -2) (#("debug" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 2366) (undo-tree-id2582 . -5) (#(";" 0 1 (fontified t)) . 2371) (t 26073 48918 417112 582000)) (26073 48918 404264 261000) 0 nil] [nil nil ((2371 . 2372) (2368 . 2371) (2366 . 2368) (2364 . 2366) (2364 . 2367) (#("  " 0 2 (fontified t)) . 2364) (undo-tree-id1891 . -2) (undo-tree-id1892 . -2) 2366 (2363 . 2366)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 2363) (undo-tree-id1893 . -3) (undo-tree-id1894 . -3) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (2364 . 2366) (#("
  " 0 1 (fontified nil) 1 3 (fontified nil)) . 2364) (undo-tree-id2065 . 3) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (#("  " 0 2 (fontified nil)) . 2364) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (undo-tree-id2070 . -2) (undo-tree-id2071 . -2) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -2) (undo-tree-id2077 . -2) (undo-tree-id2078 . -2) (undo-tree-id2079 . -2) (undo-tree-id2080 . -2) (undo-tree-id2081 . -2) (undo-tree-id2082 . -2) (undo-tree-id2083 . -2) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2) (undo-tree-id2092 . -2) (undo-tree-id2093 . -2) (undo-tree-id2094 . -2) (undo-tree-id2095 . -2) (undo-tree-id2096 . -2) (undo-tree-id2097 . -2) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (undo-tree-id2100 . -2) (undo-tree-id2101 . -2) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -2) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -2) (undo-tree-id2150 . -2) (undo-tree-id2151 . -2) (undo-tree-id2152 . -2) (undo-tree-id2153 . -2) (undo-tree-id2154 . -2) (undo-tree-id2155 . -2) (undo-tree-id2156 . -2) (undo-tree-id2157 . -2) (undo-tree-id2158 . -2) (undo-tree-id2159 . -2) (undo-tree-id2160 . -2) (undo-tree-id2161 . -2) (undo-tree-id2162 . -2) (undo-tree-id2163 . -2) (undo-tree-id2164 . -2) (undo-tree-id2165 . -2) (undo-tree-id2166 . -2) (undo-tree-id2167 . -2) (undo-tree-id2168 . -2) (undo-tree-id2169 . -2) (undo-tree-id2170 . -2) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -2) (undo-tree-id2175 . -2) (undo-tree-id2176 . -2) (undo-tree-id2177 . -2) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) (undo-tree-id2182 . -2) (undo-tree-id2183 . -2) (undo-tree-id2184 . -2) (undo-tree-id2185 . -2) (undo-tree-id2186 . -2) (undo-tree-id2187 . -2) (undo-tree-id2188 . -2) (undo-tree-id2189 . -2) (undo-tree-id2190 . -2) (undo-tree-id2191 . -2) (undo-tree-id2192 . -2) (undo-tree-id2193 . -2) (undo-tree-id2194 . -2) (undo-tree-id2195 . -2) (undo-tree-id2196 . -2) (undo-tree-id2197 . -2) (undo-tree-id2198 . -2) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (undo-tree-id2209 . -2) (undo-tree-id2210 . -2) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -2) (undo-tree-id2214 . -2) (undo-tree-id2215 . -2) (undo-tree-id2216 . -2) (undo-tree-id2217 . -2) (undo-tree-id2218 . -2) (undo-tree-id2219 . -2) (undo-tree-id2220 . -2) (undo-tree-id2221 . -2) (undo-tree-id2222 . -2) (undo-tree-id2223 . -2) (undo-tree-id2224 . -2) (undo-tree-id2225 . -2) (undo-tree-id2226 . -2) (undo-tree-id2227 . -2) (undo-tree-id2228 . -2) (undo-tree-id2229 . -2) (undo-tree-id2230 . -2) (undo-tree-id2231 . -2) (undo-tree-id2232 . -2) (undo-tree-id2233 . -2) (undo-tree-id2234 . -2) (#("de" 0 1 (fontified nil) 1 2 (fontified nil)) . 2366) (undo-tree-id2235 . -2) (undo-tree-id2236 . -2) (undo-tree-id2237 . -2) (undo-tree-id2238 . -2) (undo-tree-id2239 . -2) (undo-tree-id2240 . -2) (undo-tree-id2241 . -2) (undo-tree-id2242 . -2) (undo-tree-id2243 . -2) (undo-tree-id2244 . -2) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (undo-tree-id2247 . -2) (undo-tree-id2248 . -2) (undo-tree-id2249 . -2) (undo-tree-id2250 . -2) (undo-tree-id2251 . -2) (undo-tree-id2252 . -2) (undo-tree-id2253 . -2) (undo-tree-id2254 . -2) (undo-tree-id2255 . -2) (undo-tree-id2256 . -2) (undo-tree-id2257 . -2) (undo-tree-id2258 . -2) (undo-tree-id2259 . -2) (undo-tree-id2260 . -2) (undo-tree-id2261 . -2) (undo-tree-id2262 . -2) (undo-tree-id2263 . -2) (undo-tree-id2264 . -2) (undo-tree-id2265 . -2) (undo-tree-id2266 . -2) (undo-tree-id2267 . -2) (undo-tree-id2268 . -2) (undo-tree-id2269 . -2) (undo-tree-id2270 . -2) (undo-tree-id2271 . -2) (undo-tree-id2272 . -2) (undo-tree-id2273 . -2) (undo-tree-id2274 . -2) (undo-tree-id2275 . -2) (undo-tree-id2276 . -2) (undo-tree-id2277 . -2) (undo-tree-id2278 . -2) (undo-tree-id2279 . -2) (undo-tree-id2280 . -2) (undo-tree-id2281 . -2) (undo-tree-id2282 . -2) (undo-tree-id2283 . -2) (undo-tree-id2284 . -2) (undo-tree-id2285 . -2) (undo-tree-id2286 . -2) (undo-tree-id2287 . -2) (undo-tree-id2288 . -2) (undo-tree-id2289 . -2) (undo-tree-id2290 . -2) (undo-tree-id2291 . -2) (undo-tree-id2292 . -2) (undo-tree-id2293 . -2) (undo-tree-id2294 . -2) (undo-tree-id2295 . -2) (undo-tree-id2296 . -2) (undo-tree-id2297 . -2) (undo-tree-id2298 . -2) (undo-tree-id2299 . -2) (undo-tree-id2300 . -2) (undo-tree-id2301 . -2) (undo-tree-id2302 . -2) (undo-tree-id2303 . -2) (undo-tree-id2304 . -2) (undo-tree-id2305 . -2) (undo-tree-id2306 . -2) (undo-tree-id2307 . -2) (undo-tree-id2308 . -2) (undo-tree-id2309 . -2) (undo-tree-id2310 . -2) (undo-tree-id2311 . -2) (undo-tree-id2312 . -2) (undo-tree-id2313 . -2) (undo-tree-id2314 . -2) (undo-tree-id2315 . -2) (undo-tree-id2316 . -2) (undo-tree-id2317 . -2) (undo-tree-id2318 . -2) (undo-tree-id2319 . -2) (undo-tree-id2320 . -2) (undo-tree-id2321 . -2) (undo-tree-id2322 . -2) (undo-tree-id2323 . -2) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) (undo-tree-id2326 . -2) (undo-tree-id2327 . -2) (undo-tree-id2328 . -2) (undo-tree-id2329 . -2) (undo-tree-id2330 . -2) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) (undo-tree-id2336 . -2) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -2) (undo-tree-id2343 . -2) (undo-tree-id2344 . -2) (undo-tree-id2345 . -2) (undo-tree-id2346 . -2) (undo-tree-id2347 . -2) (undo-tree-id2348 . -2) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2) (undo-tree-id2351 . -2) (undo-tree-id2352 . -2) (undo-tree-id2353 . -2) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) (undo-tree-id2357 . -2) (undo-tree-id2358 . -2) (undo-tree-id2359 . -2) (undo-tree-id2360 . -2) (undo-tree-id2361 . -2) (undo-tree-id2362 . -2) (undo-tree-id2363 . -2) (undo-tree-id2364 . -2) (undo-tree-id2365 . -2) (undo-tree-id2366 . -2) (undo-tree-id2367 . -2) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) (undo-tree-id2375 . -2) (undo-tree-id2376 . -2) (undo-tree-id2377 . -2) (undo-tree-id2378 . -2) (undo-tree-id2379 . -2) (undo-tree-id2380 . -2) (undo-tree-id2381 . -2) (undo-tree-id2382 . -2) (undo-tree-id2383 . -2) (undo-tree-id2384 . -2) (undo-tree-id2385 . -2) (undo-tree-id2386 . -2) (undo-tree-id2387 . -2) (undo-tree-id2388 . -2) (undo-tree-id2389 . -2) (undo-tree-id2390 . -2) (undo-tree-id2391 . -2) (undo-tree-id2392 . -2) (undo-tree-id2393 . -2) (undo-tree-id2394 . -2) (undo-tree-id2395 . -2) (undo-tree-id2396 . -2) (undo-tree-id2397 . -2) (undo-tree-id2398 . -2) (undo-tree-id2399 . -2) (undo-tree-id2400 . -2) (#("bug" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 2368) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) (undo-tree-id2412 . -3) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) (undo-tree-id2427 . -3) (undo-tree-id2428 . -3) (undo-tree-id2429 . -3) (undo-tree-id2430 . -3) (undo-tree-id2431 . -3) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (undo-tree-id2434 . -3) (undo-tree-id2435 . -3) (undo-tree-id2436 . -3) (undo-tree-id2437 . -3) (undo-tree-id2438 . -3) (undo-tree-id2439 . -3) (undo-tree-id2440 . -3) (undo-tree-id2441 . -3) (undo-tree-id2442 . -3) (undo-tree-id2443 . -3) (undo-tree-id2444 . -3) (undo-tree-id2445 . -3) (undo-tree-id2446 . -3) (undo-tree-id2447 . -3) (undo-tree-id2448 . -3) (undo-tree-id2449 . -3) (undo-tree-id2450 . -3) (undo-tree-id2451 . -3) (undo-tree-id2452 . -3) (undo-tree-id2453 . -3) (undo-tree-id2454 . -3) (undo-tree-id2455 . -3) (undo-tree-id2456 . -3) (undo-tree-id2457 . -3) (undo-tree-id2458 . -3) (undo-tree-id2459 . -3) (undo-tree-id2460 . -3) (undo-tree-id2461 . -3) (undo-tree-id2462 . -3) (undo-tree-id2463 . -3) (undo-tree-id2464 . -3) (undo-tree-id2465 . -3) (undo-tree-id2466 . -3) (undo-tree-id2467 . -3) (undo-tree-id2468 . -3) (undo-tree-id2469 . -3) (undo-tree-id2470 . -3) (undo-tree-id2471 . -3) (undo-tree-id2472 . -3) (undo-tree-id2473 . -3) (undo-tree-id2474 . -3) (undo-tree-id2475 . -3) (undo-tree-id2476 . -3) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -3) (undo-tree-id2480 . -3) (undo-tree-id2481 . -3) (undo-tree-id2482 . -3) (undo-tree-id2483 . -3) (undo-tree-id2484 . -3) (undo-tree-id2485 . -3) (undo-tree-id2486 . -3) (undo-tree-id2487 . -3) (undo-tree-id2488 . -3) (undo-tree-id2489 . -3) (undo-tree-id2490 . -3) (undo-tree-id2491 . -3) (undo-tree-id2492 . -3) (undo-tree-id2493 . -3) (undo-tree-id2494 . -3) (undo-tree-id2495 . -3) (undo-tree-id2496 . -3) (undo-tree-id2497 . -3) (undo-tree-id2498 . -3) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -3) (undo-tree-id2502 . -3) (undo-tree-id2503 . -3) (undo-tree-id2504 . -3) (undo-tree-id2505 . -3) (undo-tree-id2506 . -3) (undo-tree-id2507 . -3) (undo-tree-id2508 . -3) (undo-tree-id2509 . -3) (undo-tree-id2510 . -3) (undo-tree-id2511 . -3) (undo-tree-id2512 . -3) (undo-tree-id2513 . -3) (undo-tree-id2514 . -3) (undo-tree-id2515 . -3) (undo-tree-id2516 . -3) (undo-tree-id2517 . -3) (undo-tree-id2518 . -3) (undo-tree-id2519 . -3) (undo-tree-id2520 . -3) (undo-tree-id2521 . -3) (undo-tree-id2522 . -3) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (undo-tree-id2525 . -3) (undo-tree-id2526 . -3) (undo-tree-id2527 . -3) (undo-tree-id2528 . -3) (undo-tree-id2529 . -3) (undo-tree-id2530 . -3) (undo-tree-id2531 . -3) (undo-tree-id2532 . -3) (undo-tree-id2533 . -3) (undo-tree-id2534 . -3) (undo-tree-id2535 . -3) (undo-tree-id2536 . -3) (undo-tree-id2537 . -3) (undo-tree-id2538 . -3) (undo-tree-id2539 . -3) (undo-tree-id2540 . -3) (undo-tree-id2541 . -3) (undo-tree-id2542 . -3) (undo-tree-id2543 . -3) (undo-tree-id2544 . -3) (undo-tree-id2545 . -3) (undo-tree-id2546 . -3) (undo-tree-id2547 . -3) (undo-tree-id2548 . -3) (undo-tree-id2549 . -3) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) (undo-tree-id2552 . -3) (undo-tree-id2553 . -3) (undo-tree-id2554 . -3) (undo-tree-id2555 . -3) (undo-tree-id2556 . -3) (undo-tree-id2557 . -3) (undo-tree-id2558 . -3) (undo-tree-id2559 . -3) (undo-tree-id2560 . -3) (undo-tree-id2561 . -3) (undo-tree-id2562 . -3) (undo-tree-id2563 . -3) (undo-tree-id2564 . -3) (undo-tree-id2565 . -3) (undo-tree-id2566 . -3) (#(";" 0 1 (fontified t)) . 2371) (t 26073 48804 110441 342000)) (26073 48804 99429 34000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil nil ((2363 . 2366) (t 26073 48614 377100 423000)) ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 2363) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -3) (undo-tree-id1517 . -3) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -3) (undo-tree-id1630 . -3) (undo-tree-id1631 . -3) (undo-tree-id1632 . -3) (undo-tree-id1633 . -3) (undo-tree-id1634 . -3) (undo-tree-id1635 . -3) (undo-tree-id1636 . -3) (undo-tree-id1637 . -3) (undo-tree-id1638 . -3) (undo-tree-id1639 . -3) (undo-tree-id1640 . -3) (undo-tree-id1641 . -3) (undo-tree-id1642 . -3) (undo-tree-id1643 . -3) (undo-tree-id1644 . -3) (undo-tree-id1645 . -3) (undo-tree-id1646 . -3) (undo-tree-id1647 . -3) (undo-tree-id1648 . -3) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (undo-tree-id1655 . -3) (undo-tree-id1656 . -3) (undo-tree-id1657 . -3) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (undo-tree-id1667 . -3) (undo-tree-id1668 . -3) (undo-tree-id1669 . -3) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -3) (undo-tree-id1675 . -3) (undo-tree-id1676 . -3) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (undo-tree-id1679 . -3) (undo-tree-id1680 . -3) (undo-tree-id1681 . -3) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -3) (undo-tree-id1685 . -3) (undo-tree-id1686 . -3) (undo-tree-id1687 . -3) (undo-tree-id1688 . -3) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -3) (undo-tree-id1700 . -3) (undo-tree-id1701 . -3) (undo-tree-id1702 . -3) (undo-tree-id1703 . -3) (undo-tree-id1704 . -3) (undo-tree-id1705 . -3) (undo-tree-id1706 . -3) (undo-tree-id1707 . -3) (undo-tree-id1708 . -3) (undo-tree-id1709 . -3) (undo-tree-id1710 . -3) (undo-tree-id1711 . -3) (undo-tree-id1712 . -3) (undo-tree-id1713 . -3) (undo-tree-id1714 . -3) (undo-tree-id1715 . -3) (undo-tree-id1716 . -3) (undo-tree-id1717 . -3) (undo-tree-id1718 . -3) (undo-tree-id1719 . -3) (undo-tree-id1720 . -3) (undo-tree-id1721 . -3) (undo-tree-id1722 . -3) (undo-tree-id1723 . -3) (undo-tree-id1724 . -3) (undo-tree-id1725 . -3) (undo-tree-id1726 . -3) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (undo-tree-id1729 . -3) (undo-tree-id1730 . -3) (undo-tree-id1731 . -3) (undo-tree-id1732 . -3) (undo-tree-id1733 . -3) (undo-tree-id1734 . -3) (undo-tree-id1735 . -3) (undo-tree-id1736 . -3) (undo-tree-id1737 . -3) (undo-tree-id1738 . -3) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) (undo-tree-id1743 . -3) (undo-tree-id1744 . -3) (undo-tree-id1745 . -3) (undo-tree-id1746 . -3) (undo-tree-id1747 . -3) (undo-tree-id1748 . -3) (undo-tree-id1749 . -3) (undo-tree-id1750 . -3) (undo-tree-id1751 . -3) (undo-tree-id1752 . -3) (undo-tree-id1753 . -3) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) (undo-tree-id1762 . -3) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3) (undo-tree-id1795 . -3) (undo-tree-id1796 . -3) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) (undo-tree-id1799 . -3) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (undo-tree-id1811 . -3) (undo-tree-id1812 . -3) (undo-tree-id1813 . -3) (undo-tree-id1814 . -3) (undo-tree-id1815 . -3) (undo-tree-id1816 . -3) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) (undo-tree-id1821 . -3) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) (undo-tree-id1890 . -3)) (26073 48794 383827 722000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 2349 . 2350) (#("
" 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . -2421) (2347 . 2422) 2295) nil (26073 48980 811055 360000) 0 nil])
nil
nil
([nil nil ((2364 . 2367) (#("  " 0 2 (fontified t)) . 2364) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) 2366) ((2364 . 2366) (#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 2364) (undo-tree-id1509 . 3) (undo-tree-id1510 . 3) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1)) (26073 48793 941096 246000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((apply 3 2348 2419 undo--wrap-and-run-primitive-undo 2348 2419 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2350) 2422))) nil (26073 48980 811051 285000) 0 nil])
([nil nil ((2364 . 2366)) ((#("  " 0 2 (fontified t)) . 2364) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1)) (26073 48793 539257 603000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("  // res=test(a3);printf(\"addr %d,car %d,args %d %d %d\\n\",res.addr,res.car->true_type,res.args[0]->true_type,res.args[1]->true_type,res.args[1]->addr);
" 0 1 (c-is-sws t fontified t c-in-sws t) 1 2 (c-in-sws t fontified t c-is-sws t) 2 3 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 85 (c-in-sws t fontified t face font-lock-comment-face) 85 86 (c-in-sws t fontified t face font-lock-comment-face) 86 94 (c-in-sws t fontified t face font-lock-comment-face) 94 95 (c-in-sws t fontified t face font-lock-comment-face) 95 96 (c-in-sws t fontified t face font-lock-comment-face) 96 97 (c-in-sws t fontified t face font-lock-comment-face) 97 98 (c-in-sws t fontified t face font-lock-comment-face) 98 99 (c-in-sws t fontified t face font-lock-comment-face) 99 108 (c-in-sws t fontified t face font-lock-comment-face) 108 109 (c-in-sws t fontified t face font-lock-comment-face) 109 117 (c-in-sws t fontified t face font-lock-comment-face) 117 118 (c-in-sws t fontified t face font-lock-comment-face) 118 119 (c-in-sws t fontified t face font-lock-comment-face) 119 120 (c-in-sws t fontified t face font-lock-comment-face) 120 121 (c-in-sws t fontified t face font-lock-comment-face) 121 122 (c-in-sws t fontified t face font-lock-comment-face) 122 131 (c-in-sws t fontified t face font-lock-comment-face) 131 132 (c-in-sws t fontified t face font-lock-comment-face) 132 140 (c-in-sws t fontified t face font-lock-comment-face) 140 141 (c-in-sws t fontified t face font-lock-comment-face) 141 142 (c-in-sws t fontified t face font-lock-comment-face) 142 143 (c-in-sws t fontified t face font-lock-comment-face) 143 144 (c-in-sws t fontified t face font-lock-comment-face) 144 145 (c-in-sws t fontified t face font-lock-comment-face) 145 149 (c-in-sws t fontified t face font-lock-comment-face) 149 150 (c-in-sws t fontified t face font-lock-comment-face) 150 151 (c-in-sws t fontified t face font-lock-comment-face) 151 152 (fontified t face font-lock-comment-face c-in-sws t)) . 2419) (undo-tree-id2583 . 134) (undo-tree-id2584 . -151) (undo-tree-id2585 . 152) (undo-tree-id2586 . -152) (undo-tree-id2587 . -152) (undo-tree-id2588 . 134) (undo-tree-id2589 . -7) (undo-tree-id2590 . -18) (undo-tree-id2591 . -2) (undo-tree-id2592 . -2) 2421 (t 26073 48980 833781 752000)) nil (26073 49007 360393 274000) 0 nil])
([nil nil ((2366 . 2371)) ((#("debug" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 2366) (undo-tree-id1114 . -5) (undo-tree-id1115 . -5) (undo-tree-id1116 . -5) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -5) (undo-tree-id1120 . -5) (undo-tree-id1121 . -5) (undo-tree-id1122 . -5) (undo-tree-id1123 . -5) (undo-tree-id1124 . -5) (undo-tree-id1125 . -5) (undo-tree-id1126 . -5) (undo-tree-id1127 . -5) (undo-tree-id1128 . -5) (undo-tree-id1129 . -5) (undo-tree-id1130 . -5) (undo-tree-id1131 . -5) (undo-tree-id1132 . -5) (undo-tree-id1133 . -5) (undo-tree-id1134 . -5) (undo-tree-id1135 . -5) (undo-tree-id1136 . -5) (undo-tree-id1137 . -5) (undo-tree-id1138 . -5) (undo-tree-id1139 . -5) (undo-tree-id1140 . -5) (undo-tree-id1141 . -5) (undo-tree-id1142 . -5) (undo-tree-id1143 . -5) (undo-tree-id1144 . -5) (undo-tree-id1145 . -5) (undo-tree-id1146 . -5) (undo-tree-id1147 . -5) (undo-tree-id1148 . -5) (undo-tree-id1149 . -5) (undo-tree-id1150 . -5) (undo-tree-id1151 . -5) (undo-tree-id1152 . -5) (undo-tree-id1153 . -5) (undo-tree-id1154 . -5) (undo-tree-id1155 . -5) (undo-tree-id1156 . -5) (undo-tree-id1157 . -5) (undo-tree-id1158 . -5) (undo-tree-id1159 . -5) (undo-tree-id1160 . -5) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -5) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5) (undo-tree-id1169 . -5) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -5) (undo-tree-id1173 . -5) (undo-tree-id1174 . -5) (undo-tree-id1175 . -5) (undo-tree-id1176 . -5) (undo-tree-id1177 . -5) (undo-tree-id1178 . -5) (undo-tree-id1179 . -5) (undo-tree-id1180 . -5) (undo-tree-id1181 . -5) (undo-tree-id1182 . -5) (undo-tree-id1183 . -5) (undo-tree-id1184 . -5) (undo-tree-id1185 . -5) (undo-tree-id1186 . -5) (undo-tree-id1187 . -5) (undo-tree-id1188 . -5) (undo-tree-id1189 . -5) (undo-tree-id1190 . -5) (undo-tree-id1191 . -5) (undo-tree-id1192 . -5) (undo-tree-id1193 . -5) (undo-tree-id1194 . -5) (undo-tree-id1195 . -5) (undo-tree-id1196 . -5) (undo-tree-id1197 . -5) (undo-tree-id1198 . -5) (undo-tree-id1199 . -5) (undo-tree-id1200 . -5) (undo-tree-id1201 . -5) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) (undo-tree-id1204 . -5) (undo-tree-id1205 . -5) (undo-tree-id1206 . -5) (undo-tree-id1207 . -5) (undo-tree-id1208 . -5) (undo-tree-id1209 . -5) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) (undo-tree-id1226 . -5) (undo-tree-id1227 . -5) (undo-tree-id1228 . -5) (undo-tree-id1229 . -5) (undo-tree-id1230 . -5) (undo-tree-id1231 . -5) (undo-tree-id1232 . -5) (undo-tree-id1233 . -5) (undo-tree-id1234 . -5) (undo-tree-id1235 . -5) (undo-tree-id1236 . -5) (undo-tree-id1237 . -5) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) (undo-tree-id1247 . -5) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -5) (undo-tree-id1254 . -5) (undo-tree-id1255 . -5) (undo-tree-id1256 . -5) (undo-tree-id1257 . -5) (undo-tree-id1258 . -5) (undo-tree-id1259 . -5) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5) (undo-tree-id1272 . -5) (undo-tree-id1273 . -5) (undo-tree-id1274 . -5) (undo-tree-id1275 . -5) (undo-tree-id1276 . -5) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (undo-tree-id1292 . -5) (undo-tree-id1293 . -5) (undo-tree-id1294 . -5) (undo-tree-id1295 . -5) (undo-tree-id1296 . -5) (undo-tree-id1297 . -5) (undo-tree-id1298 . -5) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -5) (undo-tree-id1305 . -5) (undo-tree-id1306 . -5) (undo-tree-id1307 . -5) (undo-tree-id1308 . -5) (undo-tree-id1309 . -5) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) (undo-tree-id1328 . -4) (undo-tree-id1329 . -4) (undo-tree-id1330 . -4) (undo-tree-id1331 . -4) (undo-tree-id1332 . -4) (undo-tree-id1333 . -4) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -4) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) (undo-tree-id1345 . -4) (undo-tree-id1346 . -4) (undo-tree-id1347 . -4) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) (undo-tree-id1359 . -4) (undo-tree-id1360 . -4) (undo-tree-id1361 . -4) (undo-tree-id1362 . -4) (undo-tree-id1363 . -4) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) (undo-tree-id1384 . -4) (undo-tree-id1385 . -4) (undo-tree-id1386 . -4) (undo-tree-id1387 . -4) (undo-tree-id1388 . -4) (undo-tree-id1389 . -4) (undo-tree-id1390 . -5) (undo-tree-id1391 . -4) (undo-tree-id1392 . -4) (undo-tree-id1393 . -4) (undo-tree-id1394 . -4) (undo-tree-id1395 . -4) (undo-tree-id1396 . -4) (undo-tree-id1397 . -4) (undo-tree-id1398 . -4) (undo-tree-id1399 . -4) (undo-tree-id1400 . -4) (undo-tree-id1401 . -4) (undo-tree-id1402 . -4) (undo-tree-id1403 . -4) (undo-tree-id1404 . -4) (undo-tree-id1405 . -4) (undo-tree-id1406 . -4) (undo-tree-id1407 . -4) (undo-tree-id1408 . -4) (undo-tree-id1409 . -4) (undo-tree-id1410 . -4) (undo-tree-id1411 . -4) (undo-tree-id1412 . -4) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4)) (26073 48792 897021 972000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil current ((apply 3 2419 2490 undo--wrap-and-run-primitive-undo 2419 2490 ((#("// " 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2421) 2493))) nil (26073 49007 360377 819000) 0 nil])
([nil nil ((2371 . 2372)) ((#(";" 0 1 (fontified t)) . 2371) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (t 26073 48770 963773 348000)) (26073 48791 475511 265000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil
([nil nil ((nil rear-nonsticky nil 2378 . 2379) (nil fontified nil 2372 . 2379) (2372 . 2379) (t 26073 48770 963773 348000)) ((#(";
  res" 0 2 (fontified nil) 2 4 (fontified nil) 4 6 (fontified nil face font-lock-type-face) 6 7 (fontified nil rear-nonsticky nil face font-lock-type-face)) . 2372) (undo-tree-id1102 . -6) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -6) (undo-tree-id1106 . -6) (undo-tree-id1107 . -2) (undo-tree-id1108 . -6) (nil fontified t 2372 . 2374) (nil rear-nonsticky t 2378 . 2379)) (26073 48791 467013 392000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil

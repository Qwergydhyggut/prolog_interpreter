(undo-tree-save-format-version . 1)
"0bcc3e6c8717985554143729465479177785c8d8"
[nil nil nil nil (26073 45036 388157 97000) 0 (:visualizer [6 0 1 #<marker in no buffer>])]
([nil nil ((6383 . 6384) (t 26073 39901 590084 686000)) nil (26073 45036 388153 88000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((6467 . 6468) (t 26073 45036 406957 228000)) nil (26073 45284 722065 972000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((4676 . 4677) (4632 . 4633) (t 26073 45284 733633 857000)) nil (26073 45436 722735 971000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5255 . 5256) (5254 . 5255) (#("." 0 1 (fontified t)) . 5254) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (t 26073 45436 730306 605000)) nil (26073 45467 975508 876000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5337 . 5338) (#("&" 0 1 (fontified t)) . -5337) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 5338 (5337 . 5338) (t 26073 45467 983641 190000)) nil (26073 45519 84025 613000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((#("*" 0 1 (fontified t)) . 5337) (t 26073 45519 86976 561000)) nil (26073 45525 769021 281000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5556 . 5557) (#(" " 0 1 (fontified t)) . 5556) (undo-tree-id5 . -1) 5557 (5556 . 5557) (t 26073 45525 770310 164000)) nil (26073 45614 106489 588000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((#("&" 0 1 (fontified t)) . 5556) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (t 26073 45614 123647 36000)) nil (26073 45678 250315 269000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5556 . 5557)) nil (26073 45678 250305 371000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5556 . 5559)) nil (26073 45678 250301 959000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5723 . 5726) (#("b" 0 1 (fontified t face font-lock-type-face)) . -5723) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 5724 (5723 . 5724) (5723 . 5724) (t 26073 45678 256982 946000)) nil (26073 45698 120995 310000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5856 . 5857) (5855 . 5856) (#("." 0 1 (fontified t)) . -5855) (undo-tree-id11 . -1) 5856 (5815 . 5816) (5814 . 5815) (#("." 0 1 (fontified t)) . 5814) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (t 26073 45698 126983 741000)) nil (26073 45718 425412 397000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5914 . 5919) (5909 . 5914) (t 26073 45718 430317 883000) 5908) nil (26073 46050 543921 883000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((5919 . 5920)) nil (26073 46050 543918 221000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((6309 . 6310) (#("f" 0 1 (fontified t)) . -6309) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 6310 (6304 . 6310) (6301 . 6304) (t 26073 46050 550331 170000) 6301) nil (26073 46410 76685 78000) 0 (:visualizer [6 0 1 #<marker in no buffer>])])
([nil nil ((6098 . 6099) (6096 . 6098) (6094 . 6096) (#("v" 0 1 (fontified t)) . -6094) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 6095 (6093 . 6095) (6085 . 6093) (#("v" 0 1 (fontified t)) . -6085) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 6086 (6078 . 6086) (6073 . 6078) (t 26073 46058 673664 825000) 6049) nil (26073 48388 410705 414000) 0 (:visualizer [5 0 1 #<marker in no buffer>])] [nil nil ((apply 3 1597 1626 undo--wrap-and-run-primitive-undo 1597 1626 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face)) . -1599) 1629)) (t 26073 46058 673664 825000)) ((apply -3 1597 1629 undo--wrap-and-run-primitive-undo 1597 1629 ((1599 . 1602) 1550))) (26073 46410 74496 411000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((3315 . 3323) (t 26073 48388 427091 369000)) nil (26073 49439 512804 164000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
nil
([nil nil ((3323 . 3325)) nil (26073 49439 512803 536000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3325 . 3334)) nil (26073 49439 512802 839000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3334 . 3335)) nil (26073 49439 512802 138000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("2" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3333) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3334) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 3335) nil (26073 49439 512801 409000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3333 . 3337)) nil (26073 49439 512798 808000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3333) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("O" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3334) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("P" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3335) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3336) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 3337) nil (26073 49439 512797 802000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3333 . 3336)) nil (26073 49439 512792 782000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("F" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3335) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 3336) nil (26073 49439 512792 257000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3335 . 3342)) nil (26073 49439 512790 588000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("K" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3341) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 3342) nil (26073 49439 512789 742000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3341 . 3344)) nil (26073 49439 512788 260000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3339) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3340) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("L" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3341) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("k" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3342) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("h" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3343) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 3344) nil (26073 49439 512786 896000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3339 . 3343)) nil (26073 49439 512780 614000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("F" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3342) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 3343) nil (26073 49439 512779 616000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3342 . 3345)) nil (26073 49439 512771 423000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((6300 . 6301)) nil (26073 49439 512770 760000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((6300 . 6305)) nil (26073 49439 512767 566000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((6087 . 6088) (6083 . 6087) (6078 . 6083) (t 26073 49439 520466 759000) 6077) nil (26073 49520 203841 847000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((6085 . 6086) (#("v" 0 1 (fontified t)) . -6085) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 6086 (6085 . 6086)) nil (26073 49520 203838 67000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3386 . 3394) (t 26073 49520 210469 995000)) nil (26073 50353 404648 887000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3393) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 3394) nil (26073 50353 404648 308000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3393 . 3398)) nil (26073 50353 404646 859000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3397) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 3398) nil (26073 50353 404645 970000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3397 . 3400)) nil (26073 50353 404644 471000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("2" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3398) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3399) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 3400) nil (26073 50353 404643 724000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3397) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 3398) nil (26073 50353 404641 317000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3397 . 3406)) nil (26073 50353 404639 948000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3401) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3402) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("L" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3403) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("k" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3404) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("h" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3405) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 3406) nil (26073 50353 404638 655000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3401 . 3405)) nil (26073 50353 404632 56000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("F" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3404) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 3405) nil (26073 50353 404631 517000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3404 . 3410)) nil (26073 50353 404630 1000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("I" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3407) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("D" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3408) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3409) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 3410) nil (26073 50353 404629 84000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3396 . 3399)) nil (26073 50353 404623 609000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3404) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("2" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3405) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3406) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("E" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3407) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("2" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3408) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3409) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 3410) nil (26073 50353 404622 320000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3404 . 3409)) nil (26073 50353 404615 270000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3405) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("L" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3406) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("k" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3407) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("h" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3408) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 3409) nil (26073 50353 404614 79000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3405 . 3408)) nil (26073 50353 404608 879000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("F" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3407) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 3408) nil (26073 50353 404607 690000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((3407 . 3410)) nil (26073 50353 404598 487000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("," 0 1 (c-type c-not-decl fontified t)) . -3204) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("E" 0 1 (fontified t)) . -3205) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("2" 0 1 (fontified t)) . -3206) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 3207 (t 26073 50353 443836 680000)) nil (26073 59019 778649 194000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((5155 . 5157) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . 5155) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 5156 (5154 . 5156) (#("

 " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-is-sws t fontified t) 2 3 (c-is-sws t fontified t)) . 5154) (undo-tree-id181 . -3) (undo-tree-id182 . -3) 5157 (5156 . 5157) (5160 . 5161) (5156 . 5160) (5156 . 5158) (#("  " 0 1 (c-is-sws t fontified nil) 1 2 (c-is-sws t fontified nil)) . 5156) (undo-tree-id183 . -2) (5155 . 5156) (5154 . 5157) (6175 . 6176) (6166 . 6175) (6162 . 6166) (6162 . 6163) (t 26073 59019 783273 681000)) nil (26073 59476 947571 874000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . 5156)) nil (26073 59476 947564 32000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("b" 0 1 (fontified t)) . -6221) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("n" 0 1 (fontified t)) . -6222) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("f" 0 1 (fontified t)) . -6223) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 6224 (6221 . 6224) (6222 . 6223) (6220 . 6222) (6213 . 6220) (#("c" 0 1 (fontified t)) . -6213) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("k" 0 1 (fontified t)) . -6214) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("_" 0 1 (fontified t)) . -6215) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 6216 (6211 . 6216) (6209 . 6211) (#("l" 0 1 (fontified t)) . -6209) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 6210 (6204 . 6210) (#("J" 0 1 (fontified t)) . -6204) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("s" 0 1 (fontified t)) . -6205) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 6206 (6201 . 6206) (6196 . 6201) (6195 . 6196) (6193 . 6195) (6190 . 6193) (6176 . 6190) (#("f" 0 1 (fontified t)) . -6176) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 6177 (6175 . 6177) (6170 . 6175)) nil (26073 59476 947557 519000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((4766 . 4770) (4763 . 4766) (4760 . 4763) 4759) nil (26073 59476 947541 888000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 4762 . 4763) (#("
" 0 1 (fontified nil)) . -4824) (4760 . 4825) 4759) nil (26073 59476 947540 698000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((#("  static 
" 0 2 (fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 4825) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -10) (undo-tree-id156 . -10) (undo-tree-id157 . -9) (undo-tree-id158 . 1) 4827) nil (26073 59476 947539 191000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((6285 . 6287)) nil (26074 9456 929201 33000) 0 (:visualizer [5 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7024 . 7025) (#("
" 0 1 (fontified nil)) . -7114) (7020 . 7115) 7018 (t 26073 59479 796595 640000)) nil (26074 9458 953116 718000) 0 (:visualizer [4 0 1 #<marker in no buffer>])] [nil nil ((7020 . 7025) (t 26073 59479 796595 640000) 7019) ((#("
    " 0 5 (fontified t)) . 7020) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -5)) (26074 9456 925983 655000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((7236 . 7237) (#("f" 0 1 (fontified t)) . -7236) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 7237 (7231 . 7237) (7226 . 7231) (t 26074 9458 972879 308000) 7209) nil (26074 10373 19626 224000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
nil
([nil nil ((nil rear-nonsticky nil 7524 . 7525) (#("
" 0 1 (fontified nil)) . -7607) (7524 . 7608) (t 26074 10373 29523 450000)) nil (26075 9144 798549 166000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("(token_class::token &tok" 0 1 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-constant-face) 12 14 (fontified t) 14 19 (fontified t face font-lock-type-face) 19 21 (fontified t) 21 24 (fontified t face font-lock-variable-name-face)) . 7582) (undo-tree-id4 . -24) (undo-tree-id5 . -23) (undo-tree-id6 . 24) (undo-tree-id7 . -1) (undo-tree-id8 . -24) (undo-tree-id9 . -24)) nil (26075 9144 798548 176000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7582 . 7583)) nil (26075 9144 798543 882000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7586 . 7589) (7587 . 7590) (#("  " 0 2 (fontified t)) . 7587) (undo-tree-id0 . -2) (undo-tree-id1 . -2) 7589 (7587 . 7589) (7586 . 7588) (#("  " 0 2 (fontified nil)) . 7585) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (7587 . 7589) (7584 . 7587) 7582) nil (26075 9144 798542 93000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7595 . 7596) 7588) nil (26075 9144 798508 908000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("synatax_tree_class::synatax_tree " 0 18 (fontified t face font-lock-constant-face) 18 20 (fontified t) 20 31 (fontified t face font-lock-type-face) 31 32 (fontified t c-type c-decl-id-start face font-lock-type-face) 32 33 (fontified t)) . 7525) (undo-tree-id14 . -32) (undo-tree-id15 . -33) (t 26075 9144 807317 246000)) nil (26075 9198 982118 708000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7525 . 7529) (#("v" 0 1 (fontified nil)) . 7525) (7525 . 7526) (#("void" 0 4 (fontified nil)) . -7525) (7525 . 7529) (#("voi" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -7525) (undo-tree-id10 . -3) (undo-tree-id11 . -3) 7528 (7525 . 7528) (#("f" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -7525) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 7526 (7525 . 7526) (7525 . 7526)) nil (26075 9328 604464 130000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7560 . 7561) (#("
" 0 1 (fontified nil)) . 8394) (7558 . 8395)) ((#("
  static std::map<token_class::bnf_token,std::map<token_class::token::Stat,std::vector<token_class::bnf_token>>> synatax_bnf=
    {{S,{{token_class::token::Inter_t,{E,Ter}},
	 {token_class::token::Lkh_t,{E,Ter}}}},
     {E,{{token_class::token::Inter_t,{F,E2}},
	 {token_class::token::Lkh_t,{F,E2}}}},
     {F,{{token_class::token::Inter_t,{ID}},
	 {token_class::token::Lkh_t,{Lkh,E,Rkh}}}}, //Ter E2 E2 ID
     {E2,{{token_class::token::Ter_t,{Ter}},        //Ter E2 E2 Rkh E2 E2 
	  // {token_class::token::OR_t,{OP,E}},       Ter E2 Rkh E2 E2 
	  {token_class::token::OP_t,{OP,E}}}},
     {ID,{{token_class::token::Inter_t,{Ter,ID}}}},
     {Lkh,{{token_class::token::Lkh_t,{Ter,Lkh}}}},
     {Rkh,{{token_class::token::Rkh_t,{Ter,Rkh}}}},
     {OP,{//{token_class::token::AND_t,{Ter,OP}},
	  {token_class::token::OP_t,{Ter,OP}}}}};
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky nil) 3 4 (fontified nil face font-lock-keyword-face) 4 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil) 10 13 (fontified nil face font-lock-constant-face) 13 15 (fontified nil) 15 18 (fontified nil face font-lock-type-face) 18 19 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-2-face)) 19 30 (fontified nil face font-lock-constant-face) 30 32 (fontified nil) 32 41 (fontified nil face font-lock-type-face) 41 42 (fontified nil c-type c-<>-arg-sep) 42 45 (fontified nil face font-lock-constant-face) 45 47 (fontified nil) 47 50 (fontified nil face font-lock-type-face) 50 51 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-3-face)) 51 62 (fontified nil face font-lock-constant-face) 62 64 (fontified nil) 64 69 (fontified nil face font-lock-constant-face) 69 75 (fontified nil) 75 76 (fontified nil c-type c-<>-arg-sep) 76 79 (fontified nil face font-lock-constant-face) 79 81 (fontified nil) 81 87 (fontified nil face font-lock-type-face) 87 88 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-4-face)) 88 99 (fontified nil face font-lock-constant-face) 99 101 (fontified nil) 101 110 (fontified nil face font-lock-type-face) 110 111 (syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-4-face)) 111 112 (syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-3-face)) 112 113 (syntax-table (5 . 60) fontified nil c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 113 114 (fontified nil) 114 125 (fontified nil face font-lock-variable-name-face) 125 127 (fontified nil) 127 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-2-face)) 132 133 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 133 134 (fontified t) 134 135 (fontified t c-type c-not-decl) 135 136 (fontified t face (rainbow-delimiters-depth-4-face)) 136 137 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 137 148 (fontified t face font-lock-constant-face) 148 150 (fontified t) 150 155 (fontified t face font-lock-constant-face) 155 164 (fontified t) 164 165 (fontified t c-type c-not-decl) 165 166 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 166 167 (fontified t) 167 168 (fontified t c-type c-not-decl) 168 171 (fontified t) 171 172 (fontified t face (rainbow-delimiters-depth-6-face)) 172 173 (fontified t face (rainbow-delimiters-depth-5-face)) 173 177 (fontified t) 177 178 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 178 189 (fontified t face font-lock-constant-face) 189 191 (fontified t) 191 196 (fontified t face font-lock-constant-face) 196 203 (fontified t) 203 204 (fontified t c-type c-not-decl) 204 205 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 205 206 (fontified t) 206 207 (fontified t c-type c-not-decl) 207 210 (fontified t) 210 211 (fontified t face (rainbow-delimiters-depth-6-face)) 211 212 (fontified t face (rainbow-delimiters-depth-5-face)) 212 213 (fontified t face (rainbow-delimiters-depth-4-face)) 213 214 (fontified t face (rainbow-delimiters-depth-3-face)) 214 221 (fontified t) 221 222 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 222 223 (fontified t) 223 224 (fontified t c-type c-not-decl) 224 225 (fontified t face (rainbow-delimiters-depth-4-face)) 225 226 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 226 237 (fontified t face font-lock-constant-face) 237 239 (fontified t) 239 244 (fontified t face font-lock-constant-face) 244 253 (fontified t) 253 254 (fontified t c-type c-not-decl) 254 255 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 255 256 (fontified t) 256 257 (fontified t c-type c-not-decl) 257 259 (fontified t) 259 260 (fontified t face (rainbow-delimiters-depth-6-face)) 260 261 (fontified t face (rainbow-delimiters-depth-5-face)) 261 265 (fontified t) 265 266 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 266 277 (fontified t face font-lock-constant-face) 277 279 (fontified t) 279 284 (fontified t face font-lock-constant-face) 284 291 (fontified t) 291 292 (fontified t c-type c-not-decl) 292 293 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 293 294 (fontified t) 294 295 (fontified t c-type c-not-decl) 295 297 (fontified t) 297 298 (fontified t face (rainbow-delimiters-depth-6-face)) 298 299 (fontified t face (rainbow-delimiters-depth-5-face)) 299 300 (fontified t face (rainbow-delimiters-depth-4-face)) 300 301 (fontified t face (rainbow-delimiters-depth-3-face)) 301 308 (fontified t) 308 309 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 309 310 (fontified t) 310 311 (fontified t c-type c-not-decl) 311 312 (fontified t face (rainbow-delimiters-depth-4-face)) 312 313 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 313 324 (fontified t face font-lock-constant-face) 324 326 (fontified t) 326 331 (fontified t face font-lock-constant-face) 331 340 (fontified t) 340 341 (fontified t c-type c-not-decl) 341 342 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 342 344 (fontified t) 344 345 (fontified t face (rainbow-delimiters-depth-6-face)) 345 346 (fontified t face (rainbow-delimiters-depth-5-face)) 346 350 (fontified t) 350 351 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 351 362 (fontified t face font-lock-constant-face) 362 364 (fontified t) 364 369 (fontified t face font-lock-constant-face) 369 376 (fontified t) 376 377 (fontified t c-type c-not-decl) 377 378 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 378 381 (fontified t) 381 382 (fontified t c-type c-not-decl) 382 383 (fontified t) 383 384 (fontified t c-type c-not-decl) 384 387 (fontified t) 387 388 (fontified t face (rainbow-delimiters-depth-6-face)) 388 389 (fontified t face (rainbow-delimiters-depth-5-face)) 389 390 (fontified t face (rainbow-delimiters-depth-4-face)) 390 391 (fontified t face (rainbow-delimiters-depth-3-face)) 391 392 (fontified t) 392 393 (fontified t c-in-sws t c-is-sws t) 393 394 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 394 395 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 395 408 (fontified t face font-lock-comment-face c-in-sws t) 408 413 (fontified t c-is-sws t c-in-sws t) 413 414 (fontified t c-is-sws t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 414 416 (fontified t) 416 417 (fontified t c-type c-not-decl) 417 418 (fontified t face (rainbow-delimiters-depth-4-face)) 418 419 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 419 430 (fontified t face font-lock-constant-face) 430 432 (fontified t) 432 437 (fontified t face font-lock-constant-face) 437 444 (fontified t) 444 445 (fontified t c-type c-not-decl) 445 446 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 446 449 (fontified t) 449 450 (fontified t face (rainbow-delimiters-depth-6-face)) 450 451 (fontified t face (rainbow-delimiters-depth-5-face)) 451 452 (fontified t) 452 460 (fontified t c-in-sws t c-is-sws t) 460 461 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 461 462 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 462 483 (fontified t face font-lock-comment-face c-in-sws t) 483 486 (fontified t c-in-sws t) 486 489 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 489 548 (fontified t face font-lock-comment-face c-in-sws t) 548 551 (fontified t c-is-sws t c-in-sws t) 551 552 (fontified t c-is-sws t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 552 563 (fontified t face font-lock-constant-face) 563 565 (fontified t) 565 570 (fontified t face font-lock-constant-face) 570 576 (fontified t) 576 577 (fontified t c-type c-not-decl) 577 578 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 578 580 (fontified t) 580 581 (fontified t c-type c-not-decl) 581 582 (fontified t) 582 583 (fontified t face (rainbow-delimiters-depth-6-face)) 583 584 (fontified t face (rainbow-delimiters-depth-5-face)) 584 585 (fontified t face (rainbow-delimiters-depth-4-face)) 585 586 (fontified t face (rainbow-delimiters-depth-3-face)) 586 593 (fontified t) 593 594 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 594 596 (fontified t) 596 597 (fontified t c-type c-not-decl) 597 598 (fontified t face (rainbow-delimiters-depth-4-face)) 598 599 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 599 610 (fontified t face font-lock-constant-face) 610 612 (fontified t) 612 617 (fontified t face font-lock-constant-face) 617 626 (fontified t) 626 627 (fontified t c-type c-not-decl) 627 628 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 628 631 (fontified t) 631 632 (fontified t c-type c-not-decl) 632 634 (fontified t) 634 635 (fontified t face (rainbow-delimiters-depth-6-face)) 635 636 (fontified t face (rainbow-delimiters-depth-5-face)) 636 637 (fontified t face (rainbow-delimiters-depth-4-face)) 637 638 (fontified t face (rainbow-delimiters-depth-3-face)) 638 645 (fontified t) 645 646 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 646 649 (fontified t) 649 650 (fontified t c-type c-not-decl) 650 651 (fontified t face (rainbow-delimiters-depth-4-face)) 651 652 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 652 663 (fontified t face font-lock-constant-face) 663 665 (fontified t) 665 670 (fontified t face font-lock-constant-face) 670 677 (fontified t) 677 678 (fontified t c-type c-not-decl) 678 679 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 679 682 (fontified t) 682 683 (fontified t c-type c-not-decl) 683 686 (fontified t) 686 687 (fontified t face (rainbow-delimiters-depth-6-face)) 687 688 (fontified t face (rainbow-delimiters-depth-5-face)) 688 689 (fontified t face (rainbow-delimiters-depth-4-face)) 689 690 (fontified t face (rainbow-delimiters-depth-3-face)) 690 697 (fontified t) 697 698 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 698 701 (fontified t) 701 702 (fontified t c-type c-not-decl) 702 703 (fontified t face (rainbow-delimiters-depth-4-face)) 703 704 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 704 715 (fontified t face font-lock-constant-face) 715 717 (fontified t) 717 722 (fontified t face font-lock-constant-face) 722 729 (fontified t) 729 730 (fontified t c-type c-not-decl) 730 731 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 731 734 (fontified t) 734 735 (fontified t c-type c-not-decl) 735 738 (fontified t) 738 739 (fontified t face (rainbow-delimiters-depth-6-face)) 739 740 (fontified t face (rainbow-delimiters-depth-5-face)) 740 741 (fontified t face (rainbow-delimiters-depth-4-face)) 741 742 (fontified t face (rainbow-delimiters-depth-3-face)) 742 749 (fontified t) 749 750 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-3-face)) 750 752 (fontified t) 752 753 (fontified t c-type c-not-decl) 753 754 (fontified t face (rainbow-delimiters-depth-4-face)) 754 755 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 755 756 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 756 794 (fontified t c-in-sws t face font-lock-comment-face) 794 795 (fontified nil c-is-sws t) 795 797 (fontified nil c-is-sws t) 797 798 (fontified nil c-is-sws t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 798 809 (fontified nil face font-lock-constant-face) 809 811 (fontified nil) 811 816 (fontified nil face font-lock-constant-face) 816 822 (fontified nil) 822 823 (fontified nil c-type c-not-decl) 823 824 (fontified nil c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 824 827 (fontified nil) 827 828 (fontified nil c-type c-not-decl) 828 830 (fontified nil) 830 831 (fontified nil face (rainbow-delimiters-depth-6-face)) 831 832 (fontified nil face (rainbow-delimiters-depth-5-face)) 832 833 (fontified nil face (rainbow-delimiters-depth-4-face)) 833 834 (fontified nil face (rainbow-delimiters-depth-3-face)) 834 835 (fontified nil face (rainbow-delimiters-depth-2-face)) 835 836 (fontified nil) 836 837 (fontified nil)) . 7558) (undo-tree-id16 . -205) (undo-tree-id17 . -205) (undo-tree-id18 . -1) (undo-tree-id19 . -836) (undo-tree-id21 . -216) (undo-tree-id23 . -175) (undo-tree-id25 . -127) (undo-tree-id27 . -1) (undo-tree-id29 . -263) (undo-tree-id31 . -303) (undo-tree-id33 . -348) (undo-tree-id35 . -408) (undo-tree-id37 . -483) (undo-tree-id39 . -548) (undo-tree-id41 . -588) (undo-tree-id43 . -640) (undo-tree-id45 . -692) (undo-tree-id47 . -744) (undo-tree-id49 . -794) (undo-tree-id51 . -205) (undo-tree-id53 . -205) (undo-tree-id55 . -205) (undo-tree-id57 . -205) (undo-tree-id59 . -205) (undo-tree-id61 . -205) (undo-tree-id63 . -205) (undo-tree-id65 . -205) (undo-tree-id67 . -205) (undo-tree-id69 . -205) (undo-tree-id71 . -205) (undo-tree-id73 . -205) (undo-tree-id75 . -205) (undo-tree-id77 . -205) (undo-tree-id79 . -205) (undo-tree-id81 . -205) (undo-tree-id83 . -205) (undo-tree-id85 . -205) (undo-tree-id87 . -205) (undo-tree-id89 . -205) (undo-tree-id91 . -205) (undo-tree-id93 . -205) (undo-tree-id95 . -205) (undo-tree-id97 . -205) (undo-tree-id99 . -205) (undo-tree-id101 . -205) (undo-tree-id103 . -205) (undo-tree-id105 . -205) (undo-tree-id107 . -205) (undo-tree-id109 . -205) (undo-tree-id111 . -205) (undo-tree-id113 . -205) (undo-tree-id115 . -205) (undo-tree-id117 . -205) (undo-tree-id119 . -205) (undo-tree-id121 . -205) (undo-tree-id123 . -205) (undo-tree-id125 . -205) (undo-tree-id127 . -205) (undo-tree-id129 . -205) (undo-tree-id131 . -205) (undo-tree-id133 . -205) (undo-tree-id135 . -205) (undo-tree-id137 . -205) (undo-tree-id139 . -205) (undo-tree-id141 . -205) (undo-tree-id143 . -205) (undo-tree-id145 . -205) (undo-tree-id147 . -205) (undo-tree-id149 . -205) (undo-tree-id151 . -205) (undo-tree-id153 . -205) (undo-tree-id155 . -205) (undo-tree-id157 . -205) (undo-tree-id159 . -205) (undo-tree-id161 . -205) (undo-tree-id163 . -205) (undo-tree-id165 . -205) (undo-tree-id167 . -205) (undo-tree-id169 . -205) (undo-tree-id171 . -205) (undo-tree-id173 . -205) (undo-tree-id175 . -205) (undo-tree-id177 . -205) (undo-tree-id179 . -205) (undo-tree-id181 . -205) (undo-tree-id183 . -205) (undo-tree-id185 . -205) (undo-tree-id187 . -205) (undo-tree-id189 . -205) (undo-tree-id191 . -205) (undo-tree-id193 . -205) (undo-tree-id195 . -205) (undo-tree-id197 . -205) (undo-tree-id199 . -205) (undo-tree-id201 . -205) (undo-tree-id203 . -205) (undo-tree-id205 . -205) (undo-tree-id207 . -205) (undo-tree-id209 . -205) (undo-tree-id211 . -205) (undo-tree-id213 . -205) (undo-tree-id215 . -205) (undo-tree-id217 . -205) (undo-tree-id219 . -205) (undo-tree-id221 . -205) (undo-tree-id223 . -205) (undo-tree-id225 . -205) (undo-tree-id227 . -205) (undo-tree-id229 . -205) (undo-tree-id231 . -205) (undo-tree-id233 . -205) (undo-tree-id235 . -205) (undo-tree-id237 . -205) (undo-tree-id239 . -205) (undo-tree-id241 . -205) (undo-tree-id243 . -205) (undo-tree-id245 . -205) (undo-tree-id247 . -205) (undo-tree-id249 . -205) (undo-tree-id251 . -205) (undo-tree-id253 . -205) (undo-tree-id255 . -205) (undo-tree-id257 . -205) (undo-tree-id259 . -205) (undo-tree-id261 . -205) (undo-tree-id263 . -205) (undo-tree-id265 . -205) (undo-tree-id267 . -205) (undo-tree-id269 . -205) (undo-tree-id271 . -205) (undo-tree-id273 . -205) (undo-tree-id275 . -205) (undo-tree-id277 . -205) (undo-tree-id279 . -205) (undo-tree-id281 . -205) (undo-tree-id283 . -205) (undo-tree-id285 . -205) (undo-tree-id287 . -205) (undo-tree-id289 . -205) (undo-tree-id291 . -205) (undo-tree-id293 . -175) (undo-tree-id295 . -205) (undo-tree-id297 . -205) (undo-tree-id299 . -205) (undo-tree-id301 . -205) (undo-tree-id303 . -205) (undo-tree-id305 . -205) (undo-tree-id307 . -205) (undo-tree-id309 . -205) (undo-tree-id311 . -205) (undo-tree-id313 . -205) (undo-tree-id315 . -205) (undo-tree-id317 . -205) (undo-tree-id319 . -205) (undo-tree-id321 . -205) (undo-tree-id323 . -205) (undo-tree-id325 . -205) (undo-tree-id327 . -205) (undo-tree-id329 . -205) (undo-tree-id331 . -205) (undo-tree-id333 . -205) (undo-tree-id335 . -205) (undo-tree-id337 . -205) (undo-tree-id339 . -205) (undo-tree-id341 . -205) (undo-tree-id343 . -205) (undo-tree-id345 . -205) (undo-tree-id347 . -205) (undo-tree-id349 . -205) (undo-tree-id351 . -205) (undo-tree-id353 . -205) (undo-tree-id355 . -205) (undo-tree-id357 . -205) (undo-tree-id359 . -205) (undo-tree-id361 . -205) (undo-tree-id363 . -205) (undo-tree-id365 . -205) (undo-tree-id367 . -205) (undo-tree-id369 . -205) (undo-tree-id371 . -205) (undo-tree-id373 . -205) (undo-tree-id375 . -205) (8394 . 8395) (nil rear-nonsticky t 7560 . 7561) (t 26075 9317 277324 127000)) (26075 9330 591407 414000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7560 . 7561) (#("
" 0 1 (fontified nil)) . -8432) (7558 . 8433) 7557 (t 26075 9317 277324 127000)) nil (26075 9366 842991 782000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("  " 0 2 (fontified t)) . -8433) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) 8435 (8432 . 8435) 8371) nil (26075 9366 842985 912000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 9271 . 9272) (#("
" 0 1 (fontified nil)) . -10074) (9269 . 10075) 9252 (t 26075 9366 860659 441000)) nil (26075 10803 109483 382000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("  " 0 2 (fontified t)) . -9270) (undo-tree-id464 . -2) (undo-tree-id465 . -2) 9272 (9270 . 9272) (9270 . 9271) 9272) nil (26075 10803 109482 116000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((9306 . 9307) (9304 . 9306) (9296 . 9304) (9291 . 9296) (9273 . 9291) (#("to" 0 2 (fontified nil)) . 9273) (9273 . 9275) (#("token_class::token" 0 18 (fontified nil)) . -9273) (9273 . 9291) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -9273) (undo-tree-id460 . -2) (undo-tree-id461 . -2) 9275 (9273 . 9275) (#("y" 0 1 (fontified t)) . -9273) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 9274 (9273 . 9274) (9270 . 9273) 9270) nil (26075 10803 109476 525000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7523 . 7524) (t 26075 10803 127383 441000) 7522) nil (26075 10867 86661 790000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7528 . 7529) (#("
" 0 1 (fontified nil)) . -7559) (7524 . 7560)) nil (26075 10867 86660 997000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("
    " 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t rear-nonsticky t)) . 7524) (undo-tree-id485 . -4) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -5) (undo-tree-id506 . -5) (undo-tree-id507 . -5) (undo-tree-id508 . -5) (undo-tree-id509 . -5) (undo-tree-id510 . -5) (undo-tree-id511 . -5) (undo-tree-id512 . -5) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) (undo-tree-id555 . -5) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) 7529) nil (26075 10867 86658 104000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7524 . 7525)) nil (26075 10867 86600 219000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7573 . 7574) (7570 . 7573) (7571 . 7574) (#("  " 0 2 (fontified t)) . 7571) (undo-tree-id466 . -2) (undo-tree-id467 . -2) 7573 (7571 . 7573) (7570 . 7572) (#("  " 0 2 (fontified nil)) . 7569) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (7571 . 7573) (7568 . 7571) (#(";" 0 1 (fontified t)) . -7568) (undo-tree-id470 . -1) 7569 (7552 . 7556) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -7552) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("r" 0 1 (fontified t face font-lock-constant-face)) . -7553) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 7554 (7553 . 7554) (7552 . 7553) (#("m" 0 1 (fontified t face font-lock-constant-face)) . -7552) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("o" 0 1 (fontified t face font-lock-constant-face)) . -7553) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("d" 0 1 (fontified t face font-lock-constant-face)) . -7554) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 7555 (7544 . 7555) (#("sy" 0 2 (fontified nil)) . 7544) (7544 . 7546) (#("synatax_mod" 0 11 (fontified nil)) . -7544) (7544 . 7555) (#("sy" 0 1 (fontified t face font-lock-constant-face) 1 2 (fontified t face font-lock-constant-face)) . -7544) (undo-tree-id481 . -2) (undo-tree-id482 . -2) 7546 (7545 . 7546) (#("u" 0 1 (fontified t face font-lock-constant-face)) . -7545) (undo-tree-id483 . -1) (undo-tree-id484 . -1) 7546 (7544 . 7546) (7544 . 7546)) nil (26075 10867 86595 356000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("," 0 1 (fontified t)) . 9571) (t 26075 10867 97385 999000)) nil (26075 10932 618059 473000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((9530 . 9533) (#("m" 0 1 (fontified t)) . -9530) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("o" 0 1 (fontified t)) . -9531) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("d" 0 1 (fontified t)) . -9532) (undo-tree-id602 . -1) (undo-tree-id603 . -1) 9533 (9522 . 9533) (#("sy" 0 2 (fontified nil)) . 9522) (9522 . 9524) (#("synatax_mod" 0 11 (fontified nil)) . -9522) (9522 . 9533) (#("sy" 0 1 (fontified t) 1 2 (fontified t)) . -9522) (undo-tree-id604 . -2) (undo-tree-id605 . -2) 9524 (9522 . 9524) (#("r" 0 1 (fontified t)) . -9522) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("e" 0 1 (fontified t)) . -9523) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#("t" 0 1 (fontified t)) . -9524) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("_" 0 1 (fontified t)) . -9525) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("f" 0 1 (fontified t)) . -9526) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("u" 0 1 (fontified t)) . -9527) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("n" 0 1 (fontified t)) . -9528) (undo-tree-id618 . -1) (undo-tree-id619 . -1) 9529 (9529 . 9530) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -9529) (undo-tree-id620 . -1) 9530 (9576 . 9577) (#("]" 0 1 (fontified nil)) . -9576) (9576 . 9577) (#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -9576) (undo-tree-id621 . -1) (undo-tree-id622 . 1) (undo-tree-id623 . -1) 9577 (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -9573) (undo-tree-id624 . -1) (undo-tree-id625 . 1) (undo-tree-id626 . -1) 9574 (9571 . 9574) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9571) (9571 . 9572)) nil (26075 10932 618053 540000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((10104 . 10106) (10103 . 10104) (t 26075 10932 630721 961000)) nil (26075 10956 699469 62000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((#("  " 0 2 (fontified t)) . -7660) (undo-tree-id627 . -2) (undo-tree-id628 . -2) 7662 (7659 . 7662) (t 26075 10956 720722 933000) 7631) nil (26075 10992 462019 401000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7661 . 7662) (#("
" 0 1 (fontified nil)) . -7706) (7659 . 7707) 7616) nil (26075 10992 462009 112000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((9637 . 9638) (#("r" 0 1 (fontified t)) . -9637) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (#("q" 0 1 (fontified t)) . -9638) (undo-tree-id631 . -1) (undo-tree-id632 . -1) 9639 (9629 . 9639) (#("s" 0 1 (fontified t)) . -9629) (undo-tree-id633 . -1) (undo-tree-id634 . -1) 9630 (9628 . 9630) (t 26075 10992 474057 697000)) nil (26075 11186 635349 485000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil ((7600 . 7601) (7582 . 7600) (#("to" 0 2 (fontified nil)) . 7582) (7582 . 7584) (#("token_class::token" 0 18 (fontified nil)) . -7582) (7582 . 7600) (#("to" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -7582) (undo-tree-id635 . -2) (undo-tree-id636 . -2) 7584 (7582 . 7584) (#("void" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 7582) (undo-tree-id637 . -3) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (t 26075 11186 654065 476000)) nil (26075 11269 778267 159000) 0 (:visualizer [4 0 1 #<marker in no buffer>])])
([nil nil (7599) nil (26075 11282 544144 789000) 0 (:visualizer [3 0 1 #<marker in no buffer>])] [nil nil ((7582 . 7583) 7600) ((#("
" 0 1 (fontified t)) . 7582) (undo-tree-id640 . -1) (undo-tree-id641 . -1)) (26075 11269 775417 427000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#(">" 0 1 (fontified t)) . -7593) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 7594 (apply yas--snippet-revive 7587 7594 #s(yas--snippet nil (#s(yas--field 1 7593 7593 nil nil nil t nil)) nil 5 nil #s(yas--field 1 7593 7593 nil nil nil t nil) nil nil)) (#("<" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -7593) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . 1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) 7594 (#("typename Tp" 0 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 11 (fontified t face font-lock-type-face)) . 7594) (undo-tree-id893 . -11) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7593 7593 nil nil nil t nil)) nil 5 nil #s(yas--field 1 7593 7593 nil nil nil t nil) nil nil)) (7587 . 7606) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 7587) (7587 . 7611) (#("v" 0 1 (fontified nil)) . 7587) (7587 . 7588) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (syntax-table (4 . 62) fontified nil) 7 18 (fontified nil) 18 19 (c-type c-<>-arg-sep fontified nil) 19 34 (fontified nil) 34 35 (syntax-table (5 . 60) fontified nil)) . -7587) (7587 . 7622) (#("v" 0 1 (fontified t face font-lock-type-face)) . -7587) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) 7588 (7587 . 7588) (7585 . 7587) (7582 . 7585) (#("st" 0 2 (fontified nil)) . 7582) (7582 . 7584) (#("std" 0 3 (fontified nil)) . -7582) (7582 . 7585) (#("st" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face)) . -7582) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) 7584 (7582 . 7584) (7582 . 7583)) nil (26075 11282 544130 846000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
nil
([nil nil ((7607 . 7610) (7607 . 7608) (t 26075 11282 554069 311000)) nil (26075 11327 675033 183000) 0 (:visualizer [3 0 1 #<marker in no buffer>])])
([nil nil ((10199 . 10207) (10198 . 10199) (10197 . 10198) (10192 . 10197) (#("b" 0 1 (fontified t)) . -10192) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("n" 0 1 (fontified t)) . -10193) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("f" 0 1 (fontified t)) . -10194) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) 10195 (10192 . 10195) (#("t" 0 1 (fontified t)) . -10192) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("o" 0 1 (fontified t)) . -10193) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("k" 0 1 (fontified t)) . -10194) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("_" 0 1 (fontified t)) . -10195) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 10196 (10192 . 10196) (t 26075 11317 37404 21000)) nil (26075 11366 865209 180000) 0 (:visualizer [2 0 1 #<marker in no buffer>])] [nil nil ((apply -6 10093 10268 undo--wrap-and-run-primitive-undo 10093 10268 ((10186 . 10189) (10097 . 10100) 10093)) (t 26075 11317 37404 21000)) ((apply 6 10093 10262 undo--wrap-and-run-primitive-undo 10093 10262 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 10097) (#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 10186) 10119))) (26075 11327 672170 811000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((7659 . 7660) (7655 . 7659) (#(":" 0 1 (fontified t)) . -7655) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 7656 (7655 . 7656) (7653 . 7655) (nil fontified nil 7635 . 7653) (nil face (rainbow-delimiters-depth-2-face) 7635 . 7653) (7635 . 7653) (#("to" 0 2 (fontified nil)) . 7635) (nil fontified nil 7635 . 7637) (nil face (rainbow-delimiters-depth-2-face) 7635 . 7637) (7635 . 7637) (#("token_class::token" 0 18 (fontified nil)) . -7635) (nil fontified nil 7635 . 7653) (nil face (rainbow-delimiters-depth-2-face) 7635 . 7653) (7635 . 7653) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -7635) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) 7637 (7635 . 7637) (7636 . 7637) (7629 . 7634) (7629 . 7631) (7621 . 7629) (apply yas--snippet-revive 7595 7621 #s(yas--snippet nil (#s(yas--field 1 7602 7620 nil nil nil t nil)) nil 6 nil #s(yas--field 1 7602 7620 nil nil nil t nil) nil nil)) (nil fontified nil 7602 . 7620) (nil face (rainbow-delimiters-depth-2-face) 7602 . 7620) (7602 . 7620) (#("to" 0 2 (fontified nil)) . 7602) (nil fontified nil 7602 . 7604) (nil face (rainbow-delimiters-depth-2-face) 7602 . 7604) (7602 . 7604) (#("token_class::token" 0 18 (fontified nil)) . -7602) (nil fontified nil 7602 . 7620) (nil face (rainbow-delimiters-depth-2-face) 7602 . 7620) (7602 . 7620) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -7602) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) 7604 (7603 . 7604) (#("typename Tp" 0 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil) 9 11 (fontified nil face font-lock-type-face)) . 7603) (7602 . 7603) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 7602 7620 nil nil nil t nil)) nil 6 nil #s(yas--field 1 7602 7620 nil nil nil t nil) nil nil)) (7595 . 7614) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 7595) (7595 . 7619) (#("v" 0 1 (fontified nil)) . 7595) (7595 . 7596) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (syntax-table (4 . 62) fontified nil) 7 18 (fontified nil) 18 19 (c-type c-<>-arg-sep fontified nil) 19 34 (fontified nil) 34 35 (syntax-table (5 . 60) fontified nil)) . -7595) (7595 . 7630) (#("v" 0 1 (fontified t)) . -7595) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) 7596 (7595 . 7596) (7588 . 7590) (#(" " 0 1 (fontified nil)) . 7588) (7593 . 7594) (7588 . 7589) (#("  " 0 2 (fontified nil)) . 7588) (7593 . 7594) (7590 . 7593) (#("st" 0 2 (fontified nil)) . 7590) (7590 . 7592) (#("std" 0 3 (fontified nil)) . -7590) (7590 . 7593) (#("st" 0 1 (fontified t) 1 2 (fontified t)) . -7590) (undo-tree-id1052 . -2) (undo-tree-id1053 . -2) 7592 (#("a" 0 1 (fontified t)) . -7592) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 7593 (7591 . 7593) (#("t" 0 1 (fontified t)) . -7591) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("a" 0 1 (fontified t)) . -7592) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) 7593 (7590 . 7593) (7587 . 7590) (#("  " 0 2 (fontified t)) . 7587) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) 7589 (7586 . 7589) (7582 . 7585) (7579 . 7582) (7573 . 7579) (#("sta" 0 3 (fontified nil)) . 7573) (7573 . 7576) (#("static" 0 6 (fontified nil)) . -7573) (7573 . 7579) (#("stac" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -7573) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) 7577 (7576 . 7577) (#("v" 0 1 (fontified t)) . -7576) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) 7577 (7573 . 7577) (t 26075 11366 877406 18000)) nil (26075 11472 932650 51000) 0 (:visualizer [2 0 1 #<marker in no buffer>])])
nil
([nil nil ((nil rear-nonsticky nil 7666 . 7667) (#("
" 0 1 (fontified nil)) . -7695) (7662 . 7696) 7659) nil (26075 11582 505559 76000) 0 (:visualizer [1 0 1 #<marker in no buffer>])] [nil nil ((nil rear-nonsticky nil 7663 . 7664) (nil fontified nil 7660 . 7664) (nil fontified t 7660 . 7664) (7660 . 7664) 7659) ((#("void" 0 3 (fontified nil face font-lock-type-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-type-face)) . 7660) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -3) (undo-tree-id1116 . -3) (undo-tree-id1117 . -3) (undo-tree-id1118 . -3) (undo-tree-id1119 . -3) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3) (undo-tree-id1125 . -3) (undo-tree-id1126 . -3) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3) (undo-tree-id1145 . -3) (undo-tree-id1146 . -3) (undo-tree-id1147 . -3) (undo-tree-id1148 . -3) (undo-tree-id1149 . -3) (undo-tree-id1150 . -3) (undo-tree-id1151 . -3) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (nil fontified nil 7663 . 7664) (nil fontified nil 7660 . 7663) (nil rear-nonsticky t 7663 . 7664)) (26075 11472 503783 19000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 7667) (undo-tree-id1212 . 1) (undo-tree-id1213 . -1)) nil (26075 11582 505558 153000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7667 . 7668) (nil fontified nil 7664 . 7668) (7664 . 7668) 7663) ((#("void" 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 7664) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (nil rear-nonsticky t 7667 . 7668)) (26075 11472 499165 280000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("," 0 1 (fontified t c-type c-not-decl)) . -7689) (undo-tree-id1197 . -1) 7690 (7659 . 7660) (#("," 0 1 (fontified t c-type c-not-decl)) . -7659) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -7660) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . 1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . 1) (undo-tree-id1211 . -1) 7661 (#(";" 0 1 (fontified t)) . 7661)) nil (26075 11582 505555 800000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
nil
([nil nil ((apply -9 7588 7702 undo--wrap-and-run-primitive-undo 7588 7702 ((7669 . 7672) (7635 . 7638) (7590 . 7593) 7692))) nil (26075 11582 505545 771000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("0" 0 1 (fontified t face font-lock-variable-name-face)) . -7609) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) 7610 (7607 . 7610) (7589 . 7607) (#("to" 0 2 (fontified nil)) . 7589) (7589 . 7591) (#("token_class::token" 0 18 (fontified nil)) . -7589) (7589 . 7607) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -7589) (undo-tree-id1195 . -3) (undo-tree-id1196 . -3) 7592 (7589 . 7592) (7586 . 7589) 7585) nil (26075 11582 505544 270000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("  token_class::token a
" 0 2 (fontified t) 2 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 19 (fontified t face font-lock-type-face) 19 20 (fontified t c-type c-decl-id-start face font-lock-type-face) 20 21 (fontified t) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t)) . 7587) (undo-tree-id1186 . -22) (undo-tree-id1187 . 1) (undo-tree-id1188 . -23) (undo-tree-id1189 . -23) (undo-tree-id1190 . -22) (undo-tree-id1191 . -21) (undo-tree-id1192 . 1) 7608) nil (26075 11582 505539 756000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 7589 . 7590) (#("
" 0 1 (rear-nonsticky t fontified nil)) . -8097) (7587 . 8098)) nil (26075 11582 505534 68000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((apply 3 8098 8140 undo--wrap-and-run-primitive-undo 8098 8140 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -8100) 8143))) nil (26075 11582 505532 863000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((8149 . 8150) (8146 . 8148) (8145 . 8146) (8143 . 8145) (#("w" 0 1 (fontified t)) . -8143) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) 8144 (8143 . 8144) (8142 . 8143) (8140 . 8142) (#("q" 0 1 (fontified t)) . -8140) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) 8141 (8140 . 8141) (8139 . 8141)) nil (26075 11582 505528 616000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((7584 . 7585) (#("0" 0 1 (fontified t)) . -7584) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) 7585 (t 26075 11582 534081 327000)) nil (26075 11691 388767 550000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((8240 . 8241) (8236 . 8239) (#("u" 0 1 (fontified t)) . -8236) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) 8237 (8236 . 8237) (8235 . 8237) (#("r" 0 1 (fontified t)) . -8235) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) 8236 (8228 . 8236) (8222 . 8228) (8219 . 8222) (#("  " 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-in-sws t c-is-sws t)) . 8219) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) 8221 (8218 . 8221) 8197) nil (26075 11691 388762 484000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((7713 . 7714) (7709 . 7713) (#("m" 0 1 (fontified t)) . 7709) (#("o" 0 1 (fontified t)) . 7709) (#("t" 0 1 (fontified t)) . 7709) (#("A" 0 1 (fontified t)) . 7709) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (t 26075 11691 407419 20000)) nil (26075 12022 718783 837000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 10963 . 10964) (#("
" 0 1 (fontified nil)) . -11039) (10959 . 11040) (t 26075 12022 740765 630000)) nil (26075 13711 570054 374000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("
    " 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t rear-nonsticky t)) . 10959) (undo-tree-id1231 . -4) (undo-tree-id1232 . -5) (undo-tree-id1233 . -5) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -5) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) (undo-tree-id1247 . -5) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -5) (undo-tree-id1254 . -5) (undo-tree-id1255 . -5) (undo-tree-id1256 . -5) (undo-tree-id1257 . -5) (undo-tree-id1258 . -5) (undo-tree-id1259 . -5) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5) (undo-tree-id1272 . -5) (undo-tree-id1273 . -5) (undo-tree-id1274 . -5) (undo-tree-id1275 . -5) (undo-tree-id1276 . -5) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (undo-tree-id1292 . -5) (undo-tree-id1293 . -5) (undo-tree-id1294 . -5) (undo-tree-id1295 . -5) (undo-tree-id1296 . -5) (undo-tree-id1297 . -5) (undo-tree-id1298 . -5) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -5) (undo-tree-id1305 . -5) (undo-tree-id1306 . -5) (undo-tree-id1307 . -5) (undo-tree-id1308 . -5) (undo-tree-id1309 . -5) (undo-tree-id1310 . -5) (undo-tree-id1311 . -5) (undo-tree-id1312 . -5) (undo-tree-id1313 . -5) (undo-tree-id1314 . -5) (undo-tree-id1315 . -5) (undo-tree-id1316 . -5) (undo-tree-id1317 . -5) (undo-tree-id1318 . -5) (undo-tree-id1319 . -5) (undo-tree-id1320 . -5) (undo-tree-id1321 . -5) (undo-tree-id1322 . -5) (undo-tree-id1323 . -5) (undo-tree-id1324 . -5) (undo-tree-id1325 . -5) (undo-tree-id1326 . -5) (undo-tree-id1327 . -5) (undo-tree-id1328 . -5) (undo-tree-id1329 . -5) (undo-tree-id1330 . -5) (undo-tree-id1331 . -5) (undo-tree-id1332 . -5) (undo-tree-id1333 . -5) (undo-tree-id1334 . -5) (undo-tree-id1335 . -5) (undo-tree-id1336 . -5) (undo-tree-id1337 . -5) (undo-tree-id1338 . -5) (undo-tree-id1339 . -5) (undo-tree-id1340 . -5) (undo-tree-id1341 . -5) (undo-tree-id1342 . -5) (undo-tree-id1343 . -5) (undo-tree-id1344 . -5) (undo-tree-id1345 . -5) (undo-tree-id1346 . -5) (undo-tree-id1347 . -5) (undo-tree-id1348 . -5) (undo-tree-id1349 . -5) (undo-tree-id1350 . -5) (undo-tree-id1351 . -5) (undo-tree-id1352 . -5) (undo-tree-id1353 . -5) (undo-tree-id1354 . -5) (undo-tree-id1355 . -5) (undo-tree-id1356 . -5) (undo-tree-id1357 . -5) (undo-tree-id1358 . -5) (undo-tree-id1359 . -5) (undo-tree-id1360 . -5) (undo-tree-id1361 . -5) (undo-tree-id1362 . -5) (undo-tree-id1363 . -5) (undo-tree-id1364 . -5) (undo-tree-id1365 . -5) (undo-tree-id1366 . -5) (undo-tree-id1367 . -5) (undo-tree-id1368 . -5) (undo-tree-id1369 . -5) (undo-tree-id1370 . -5) (undo-tree-id1371 . -5) (undo-tree-id1372 . -5) (undo-tree-id1373 . -5) (undo-tree-id1374 . -5) (undo-tree-id1375 . -5) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5) (undo-tree-id1379 . -5) (undo-tree-id1380 . -5) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) (undo-tree-id1383 . -5) (undo-tree-id1384 . -5) (undo-tree-id1385 . -5) (undo-tree-id1386 . -5) (undo-tree-id1387 . -5) (undo-tree-id1388 . -5) (undo-tree-id1389 . -5) (undo-tree-id1390 . -5) (undo-tree-id1391 . -5) (undo-tree-id1392 . -5) (undo-tree-id1393 . -5) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) (undo-tree-id1415 . -5) (undo-tree-id1416 . -5) (undo-tree-id1417 . -5) (undo-tree-id1418 . -5) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) (undo-tree-id1422 . -5) (undo-tree-id1423 . -5) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5) (undo-tree-id1429 . -5) (undo-tree-id1430 . -5) (undo-tree-id1431 . -5) (undo-tree-id1432 . -5) (undo-tree-id1433 . -5) (undo-tree-id1434 . -5) (undo-tree-id1435 . -5) (undo-tree-id1436 . -5) (undo-tree-id1437 . -5) (undo-tree-id1438 . -5) (undo-tree-id1439 . -5) (undo-tree-id1440 . -5) (undo-tree-id1441 . -5) (undo-tree-id1442 . -5) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1452 . -5) (undo-tree-id1453 . -5) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) (undo-tree-id1457 . -5) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) 10964) nil (26075 13711 570046 351000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((11039 . 11040) (11036 . 11039) (11037 . 11040) (#("  " 0 2 (fontified t)) . 11037) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) 11039 (11037 . 11039) (11036 . 11038) (#("  " 0 2 (fontified nil)) . 11035) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (11037 . 11039) (11034 . 11037) (#(";" 0 1 (fontified t)) . -11034) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) 11035 (10959 . 10960)) nil (26075 13711 568700 682000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((11046 . 11047) 11039) nil (26075 13711 568684 111000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((10939 . 10940) (t 26075 13711 584166 480000)) nil (26075 14106 189699 214000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("I" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 10939) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1)) nil (26075 14106 189686 127000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil (10938) nil (26075 14106 188132 735000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((10878 . 10879) (10876 . 10878) (10862 . 10876) (10861 . 10862) (10856 . 10861) (10854 . 10856) (10854 . 10856) (10941 . 10947) (#("	" 0 1 (fontified nil c-is-sws t)) . 10941) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (10942 . 10943) (#("}" 0 1 (fontified nil c-is-sws t)) . -10942) (10942 . 10943) (10940 . 10942) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -10854) (undo-tree-id1480 . -1) (undo-tree-id1481 . 1) (undo-tree-id1482 . -1) 10855 (10853 . 10855)) nil (26075 14106 188119 557000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((10862 . 10865) (10862 . 10863) (#("t" 0 1 (fontified t)) . -10862) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (#("o" 0 1 (fontified t)) . -10863) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) 10864 (10862 . 10864) (t 26075 14106 204182 241000)) nil (26075 14152 251761 285000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("this->" 0 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t)) . 10114) (undo-tree-id1977 . -5) (undo-tree-id1978 . -6) (t 26075 14152 264184 85000)) nil (26075 14196 933383 860000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("t" 0 1 (fontified t)) . -10889) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (#("h" 0 1 (fontified t)) . -10890) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (#("i" 0 1 (fontified t)) . -10891) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (#("s" 0 1 (fontified t)) . -10892) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (#("-" 0 1 (fontified t)) . -10893) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#(">" 0 1 (fontified t)) . -10894) (undo-tree-id2798 . -1) 10895 (#("t" 0 1 (fontified t)) . -10859) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (#("h" 0 1 (fontified t)) . -10860) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (#("i" 0 1 (fontified t)) . -10861) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (#("s" 0 1 (fontified t)) . -10862) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) 10863 (#("-" 0 1 (fontified t)) . -10863) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (#(">" 0 1 (fontified t)) . -10864) (undo-tree-id2809 . -1) 10865 (#("t" 0 1 (fontified t)) . -10795) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (#("h" 0 1 (fontified t)) . -10796) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (#("i" 0 1 (fontified t)) . -10797) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (#("s" 0 1 (fontified t)) . -10798) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (#("-" 0 1 (fontified t)) . -10799) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (#(">" 0 1 (fontified t)) . -10800) (undo-tree-id2820 . -1) 10801 (#("t" 0 1 (fontified t)) . -10785) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (#("h" 0 1 (fontified t)) . -10786) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (#("i" 0 1 (fontified t)) . -10787) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (#("s" 0 1 (fontified t)) . -10788) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (#("-" 0 1 (fontified t)) . -10789) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (#(">" 0 1 (fontified t)) . -10790) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) 10791 (#("t" 0 1 (fontified t)) . -10745) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (#("h" 0 1 (fontified t)) . -10746) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (#("i" 0 1 (fontified t)) . -10747) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (#("s" 0 1 (fontified t)) . -10748) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (#("-" 0 1 (fontified t)) . -10749) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (#(">" 0 1 (fontified t)) . -10750) (undo-tree-id2843 . -1) 10751 (#("t" 0 1 (fontified t)) . -10697) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (#("h" 0 1 (fontified t)) . -10698) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (#("i" 0 1 (fontified t)) . -10699) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (#("s" 0 1 (fontified t)) . -10700) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (#("-" 0 1 (fontified t)) . -10701) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (#(">" 0 1 (fontified t)) . -10702) (undo-tree-id2854 . -1) 10703 (#("t" 0 1 (fontified t)) . -10639) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (#("h" 0 1 (fontified t)) . -10640) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (#("i" 0 1 (fontified t)) . -10641) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (#("s" 0 1 (fontified t)) . -10642) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (#("-" 0 1 (fontified t)) . -10643) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (#(">" 0 1 (fontified t)) . -10644) (undo-tree-id2865 . -1) 10645 (#("t" 0 1 (fontified t)) . -10546) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (#("h" 0 1 (fontified t)) . -10547) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (#("i" 0 1 (fontified t)) . -10548) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (#("s" 0 1 (fontified t)) . -10549) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (#("-" 0 1 (fontified t)) . -10550) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (#(">" 0 1 (fontified t)) . -10551) (undo-tree-id2876 . -1) 10552 (#("t" 0 1 (fontified t)) . -10498) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (#("h" 0 1 (fontified t)) . -10499) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (#("i" 0 1 (fontified t)) . -10500) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (#("s" 0 1 (fontified t)) . -10501) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (#("-" 0 1 (fontified t)) . -10502) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (#(">" 0 1 (fontified t)) . -10503) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) 10504 (#("t" 0 1 (fontified t)) . -10348) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (#("h" 0 1 (fontified t)) . -10349) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (#("i" 0 1 (fontified t)) . -10350) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (#("s" 0 1 (fontified t)) . -10351) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (#("-" 0 1 (fontified t)) . -10352) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (#(">" 0 1 (fontified t)) . -10353) (undo-tree-id2899 . -1) 10354 (#("t" 0 1 (fontified t)) . -10338) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (#("h" 0 1 (fontified t)) . -10339) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (#("i" 0 1 (fontified t)) . -10340) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (#("s" 0 1 (fontified t)) . -10341) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (#("-" 0 1 (fontified t)) . -10342) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (#(">" 0 1 (fontified t)) . -10343) (undo-tree-id2910 . -1) 10344 (#("t" 0 1 (fontified t)) . -10246) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (#("h" 0 1 (fontified t)) . -10247) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (#("i" 0 1 (fontified t)) . -10248) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (#("s" 0 1 (fontified t)) . -10249) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (#("-" 0 1 (fontified t)) . -10250) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (#(">" 0 1 (fontified t)) . -10251) (undo-tree-id2921 . -1) 10252 (#("t" 0 1 (fontified t)) . -10262) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (#("h" 0 1 (fontified t)) . -10263) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (#("i" 0 1 (fontified t)) . -10264) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (#("s" 0 1 (fontified t)) . -10265) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (#("-" 0 1 (fontified t)) . -10266) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (#(">" 0 1 (fontified t)) . -10267) (undo-tree-id2932 . -1) 10268 (10148 . 10149) (10146 . 10147) (#("A" 0 1 (fontified t)) . -10146) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (#("S" 0 1 (fontified t)) . -10147) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) 10148 (10146 . 10148) (10145 . 10147) (10141 . 10145) (10133 . 10141) (#("v" 0 1 (fontified t)) . -10133) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) 10134 (10131 . 10134) (#("y" 0 1 (fontified t)) . -10131) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) 10132 (10126 . 10132) (10123 . 10126) (10122 . 10123) (10120 . 10122) (#("v" 0 1 (fontified t)) . -10120) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) 10121 (10116 . 10121) (10112 . 10116) (10082 . 10088) (10075 . 10077) (#(" " 0 1 (fontified nil)) . 10075) (10080 . 10081) (10075 . 10076) (#("  " 0 2 (fontified nil)) . 10075) (10080 . 10081) (10077 . 10080) (10077 . 10078) (#("M" 0 1 (fontified t face font-lock-constant-face)) . -10077) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) 10078 (10077 . 10078) (10090 . 10094) (10095 . 10096) (#(" " 0 1 (fontified t)) . 10095) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) 10096 (10095 . 10096) (#(" " 0 1 (fontified t)) . 10095) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) 10096 (10095 . 10096) (10077 . 10095) (#("to" 0 2 (fontified nil)) . 10077) (10077 . 10079) (#("token_class::token" 0 18 (fontified nil)) . -10077) (10077 . 10095) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -10077) (undo-tree-id2949 . -3) (undo-tree-id2950 . -3) 10080 (10077 . 10080) (10074 . 10077)) nil (26075 14360 407809 217000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil nil ((10114 . 10115)) ((#(" " 0 1 (fontified t)) . 10114) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1)) (26075 14195 670510 113000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 10125 . 10126) (#("
" 0 1 (fontified nil)) . -10172) (10123 . 10173) 10104 (t 26075 14360 424192 433000)) nil (26075 14420 110802 509000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("
   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (rear-nonsticky t fontified t) 3 4 (fontified t)) . 10111) (undo-tree-id1971 . -3) (undo-tree-id1972 . -3) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) 10115) ((10111 . 10115)) (26075 14195 668451 179000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("b" 0 1 (fontified t)) . -10151) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (#("n" 0 1 (fontified t)) . -10152) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (#("f" 0 1 (fontified t)) . -10153) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -10154) (undo-tree-id3093 . -1) 10155 (10113 . 10116) (10113 . 10114) (#("tok_" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face)) . 10113) (undo-tree-id3094 . -3) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4)) nil (26075 14420 110795 935000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil
([nil nil ((10173 . 10175) (#("d" 0 1 (fontified t)) . -10173) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) 10174 (10171 . 10174) (#("n" 0 1 (fontified t)) . -10171) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) 10172 (10171 . 10172) (#("tok_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 10171) (undo-tree-id3101 . -3) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -3) (undo-tree-id3129 . -3) (undo-tree-id3130 . -3) (undo-tree-id3131 . -3) (undo-tree-id3132 . -3) (undo-tree-id3133 . -3) (undo-tree-id3134 . -3) (undo-tree-id3135 . -3) (undo-tree-id3136 . -3) (undo-tree-id3137 . -3) (undo-tree-id3138 . -3) (undo-tree-id3139 . -3) (undo-tree-id3140 . -3) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (undo-tree-id3143 . -3) (undo-tree-id3144 . -3) (undo-tree-id3145 . -3) (undo-tree-id3146 . -3) (undo-tree-id3147 . -3) (undo-tree-id3148 . -3) (undo-tree-id3149 . -3) (undo-tree-id3150 . -3) (undo-tree-id3151 . -3) (undo-tree-id3152 . -3) (undo-tree-id3153 . -3) (undo-tree-id3154 . -3) (undo-tree-id3155 . -3) (undo-tree-id3156 . -3) (undo-tree-id3157 . -3) (undo-tree-id3158 . -3) (undo-tree-id3159 . -3) (undo-tree-id3160 . -3) (undo-tree-id3161 . -3) (undo-tree-id3162 . -3) (undo-tree-id3163 . -3) (undo-tree-id3164 . -3) (undo-tree-id3165 . -3) (undo-tree-id3166 . -3) (undo-tree-id3167 . -3) (undo-tree-id3168 . -3) (undo-tree-id3169 . -3) (undo-tree-id3170 . -3) (undo-tree-id3171 . -3) (undo-tree-id3172 . -3) (undo-tree-id3173 . -3) (undo-tree-id3174 . -3) (undo-tree-id3175 . -3) (undo-tree-id3176 . -3) (undo-tree-id3177 . -3) (undo-tree-id3178 . -3) (undo-tree-id3179 . -3) (undo-tree-id3180 . -3) (undo-tree-id3181 . -3) (undo-tree-id3182 . -3) (undo-tree-id3183 . -3) (undo-tree-id3184 . -3) (undo-tree-id3185 . -3) (undo-tree-id3186 . -3) (undo-tree-id3187 . -3) (undo-tree-id3188 . -3) (undo-tree-id3189 . -3) (undo-tree-id3190 . -3) (undo-tree-id3191 . -3) (undo-tree-id3192 . -3) (undo-tree-id3193 . -3) (undo-tree-id3194 . -3) (undo-tree-id3195 . -3) (undo-tree-id3196 . -3) (undo-tree-id3197 . -3) (undo-tree-id3198 . -3) (undo-tree-id3199 . -3) (undo-tree-id3200 . -3) (undo-tree-id3201 . -3) (undo-tree-id3202 . -3) (undo-tree-id3203 . -3) (undo-tree-id3204 . -3) (undo-tree-id3205 . -3) (undo-tree-id3206 . -3) (undo-tree-id3207 . -3) (undo-tree-id3208 . -3) (undo-tree-id3209 . -3) (undo-tree-id3210 . -3) (undo-tree-id3211 . -3) (undo-tree-id3212 . -3) (undo-tree-id3213 . -3) (undo-tree-id3214 . -3) (undo-tree-id3215 . -3) (undo-tree-id3216 . -3) (undo-tree-id3217 . -3) (undo-tree-id3218 . -3) (undo-tree-id3219 . -3) (undo-tree-id3220 . -3) (undo-tree-id3221 . -3) (undo-tree-id3222 . -3) (undo-tree-id3223 . -3) (undo-tree-id3224 . -3) (undo-tree-id3225 . -3) (undo-tree-id3226 . -3) (undo-tree-id3227 . -3) (undo-tree-id3228 . -3) (undo-tree-id3229 . -3) (undo-tree-id3230 . -3) (undo-tree-id3231 . -3) (undo-tree-id3232 . -3) (undo-tree-id3233 . -3) (undo-tree-id3234 . -3) (undo-tree-id3235 . -3) (undo-tree-id3236 . -3) (undo-tree-id3237 . -3) (undo-tree-id3238 . -3) (undo-tree-id3239 . -3) (undo-tree-id3240 . -3) (undo-tree-id3241 . -3) (undo-tree-id3242 . -3) (undo-tree-id3243 . -3) (undo-tree-id3244 . -3) (undo-tree-id3245 . -3) (undo-tree-id3246 . -3) (undo-tree-id3247 . -3) (undo-tree-id3248 . -3) (undo-tree-id3249 . -3) (undo-tree-id3250 . -3) (undo-tree-id3251 . -3) (undo-tree-id3252 . -3) (undo-tree-id3253 . -3) (undo-tree-id3254 . -3) (undo-tree-id3255 . -3) (undo-tree-id3256 . -3) (undo-tree-id3257 . -3) (undo-tree-id3258 . -3) (undo-tree-id3259 . -3) (undo-tree-id3260 . -2) (undo-tree-id3261 . -2) (undo-tree-id3262 . -2) (undo-tree-id3263 . -2) (undo-tree-id3264 . -2) (undo-tree-id3265 . -2) (undo-tree-id3266 . -2) (undo-tree-id3267 . -2) (undo-tree-id3268 . -2) (undo-tree-id3269 . -2) (undo-tree-id3270 . -2) (undo-tree-id3271 . -2) (undo-tree-id3272 . -2) (undo-tree-id3273 . -2) (undo-tree-id3274 . -2) (undo-tree-id3275 . -2) (undo-tree-id3276 . -2) (undo-tree-id3277 . -2) (undo-tree-id3278 . -2) (undo-tree-id3279 . -2) (undo-tree-id3280 . -2) (undo-tree-id3281 . -2) (undo-tree-id3282 . -2) (undo-tree-id3283 . -2) (undo-tree-id3284 . -2) (undo-tree-id3285 . -2) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -4) (undo-tree-id3313 . -4) (t 26075 14420 127528 157000)) nil (26075 14448 41858 364000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((10156 . 10157) (t 26075 14448 54195 944000)) nil (26075 14497 377335 164000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil (10642) nil (26075 14654 898770 731000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("this->" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t)) . 10616) (undo-tree-id4365 . -6) (undo-tree-id4366 . -6) (undo-tree-id4367 . -6) (undo-tree-id4368 . -6) (undo-tree-id4369 . -6) (undo-tree-id4370 . -6) (undo-tree-id4371 . -6) (undo-tree-id4372 . -6) (undo-tree-id4373 . -6) (undo-tree-id4374 . -6) (undo-tree-id4375 . -6) (undo-tree-id4376 . -6) (undo-tree-id4377 . -6) (undo-tree-id4378 . -6) (undo-tree-id4379 . -6) (undo-tree-id4380 . -6) (undo-tree-id4381 . -6) (undo-tree-id4382 . -6) (undo-tree-id4383 . -6) (undo-tree-id4384 . -6) (undo-tree-id4385 . -6) (undo-tree-id4386 . -6) (undo-tree-id4387 . -6) (undo-tree-id4388 . -6) (undo-tree-id4389 . -6) (undo-tree-id4390 . -6) (undo-tree-id4391 . -6) (undo-tree-id4392 . -6) (undo-tree-id4393 . -6) (undo-tree-id4394 . -6) (undo-tree-id4395 . -6) (undo-tree-id4396 . -6) (undo-tree-id4397 . -6) (undo-tree-id4398 . -6) (undo-tree-id4399 . -6) (undo-tree-id4400 . -6) (undo-tree-id4401 . -6) (undo-tree-id4402 . -6) (undo-tree-id4403 . -6) (undo-tree-id4404 . -6) (undo-tree-id4405 . -6) (undo-tree-id4406 . -6) (undo-tree-id4407 . -6)) ((10616 . 10622)) (26075 14657 756414 50000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#(",Ter" 0 1 (fontified t c-type c-not-decl) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 9404) (undo-tree-id4586 . -3) (undo-tree-id4587 . -3) (undo-tree-id4588 . -3) (undo-tree-id4589 . -3) (undo-tree-id4590 . -3) (undo-tree-id4591 . -3) 9407 (t 26075 14661 140871 166000)) nil (26075 14850 223197 953000) 0 nil] [nil nil ((#("," 0 1 (fontified t c-type c-not-decl)) . -9439) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3649 . -1) (undo-tree-id3651 . -1) (undo-tree-id3653 . -1) (undo-tree-id3655 . -1) (undo-tree-id3657 . -1) (undo-tree-id3659 . -1) (undo-tree-id3661 . -1) (undo-tree-id3663 . -1) (undo-tree-id3665 . -1) (undo-tree-id3667 . -1) (undo-tree-id3669 . -1) (undo-tree-id3671 . -1) (undo-tree-id3673 . -1) (undo-tree-id3675 . -1) (undo-tree-id3677 . -1) (undo-tree-id3679 . -1) (undo-tree-id3681 . -1) (undo-tree-id3683 . -1) (undo-tree-id3685 . -1) (undo-tree-id3687 . -1) (undo-tree-id3689 . -1) (undo-tree-id3691 . -1) (undo-tree-id3693 . -1) (undo-tree-id3695 . -1) (undo-tree-id3697 . -1) (undo-tree-id3699 . -1) (undo-tree-id3701 . -1) (undo-tree-id3703 . -1) (undo-tree-id3705 . -1) (undo-tree-id3707 . -1) (undo-tree-id3709 . -1) (undo-tree-id3711 . -1) (undo-tree-id3713 . -1) (undo-tree-id3715 . -1) (undo-tree-id3717 . -1) (undo-tree-id3719 . -1) (undo-tree-id3721 . -1) (undo-tree-id3723 . -1) (undo-tree-id3725 . -1) (undo-tree-id3727 . -1) (undo-tree-id3729 . -1) (undo-tree-id3731 . -1) (undo-tree-id3733 . -1) (undo-tree-id3735 . -1) (undo-tree-id3737 . -1) (undo-tree-id3739 . -1) (undo-tree-id3741 . -1) (undo-tree-id3743 . -1) (undo-tree-id3745 . -1) (undo-tree-id3747 . -1) (undo-tree-id3749 . -1) (undo-tree-id3751 . -1) (undo-tree-id3753 . -1) (undo-tree-id3755 . -1) (undo-tree-id3757 . -1) (undo-tree-id3759 . -1) (undo-tree-id3761 . -1) (undo-tree-id3763 . -1) (undo-tree-id3765 . -1) (undo-tree-id3767 . -1) (undo-tree-id3769 . -1) (undo-tree-id3771 . -1) (undo-tree-id3773 . -1) (undo-tree-id3775 . -1) (undo-tree-id3777 . -1) (undo-tree-id3779 . -1) (undo-tree-id3781 . -1) (undo-tree-id3783 . -1) (undo-tree-id3785 . -1) (undo-tree-id3787 . -1) (undo-tree-id3789 . -1) (undo-tree-id3791 . -1) (undo-tree-id3793 . -1) (undo-tree-id3795 . -1) (undo-tree-id3797 . -1) (undo-tree-id3799 . -1) (undo-tree-id3801 . -1) (undo-tree-id3803 . -1) (undo-tree-id3805 . -1) (undo-tree-id3807 . -1) (undo-tree-id3809 . -1) (undo-tree-id3811 . -1) (undo-tree-id3813 . -1) (undo-tree-id3815 . -1) (undo-tree-id3817 . -1) (undo-tree-id3819 . -1) (undo-tree-id3821 . -1) (undo-tree-id3823 . -1) (undo-tree-id3825 . -1) (undo-tree-id3827 . -1) (undo-tree-id3829 . -1) (undo-tree-id3831 . -1) (undo-tree-id3833 . -1) (undo-tree-id3835 . -1) (undo-tree-id3837 . -1) (undo-tree-id3839 . -1) (undo-tree-id3841 . -1) (undo-tree-id3843 . -1) (undo-tree-id3845 . -1) (undo-tree-id3847 . -1) (undo-tree-id3849 . -1) (undo-tree-id3851 . -1) (undo-tree-id3853 . -1) (undo-tree-id3855 . -1) (undo-tree-id3857 . -1) (undo-tree-id3859 . -1) (undo-tree-id3861 . -1) (undo-tree-id3863 . -1) (undo-tree-id3865 . -1) (undo-tree-id3867 . -1) (undo-tree-id3869 . -1) (undo-tree-id3871 . -1) (undo-tree-id3873 . -1) (undo-tree-id3875 . -1) (undo-tree-id3877 . -1) (undo-tree-id3879 . -1) (undo-tree-id3881 . -1) (undo-tree-id3883 . -1) (undo-tree-id3885 . -1) (undo-tree-id3887 . -1) (undo-tree-id3889 . -1) (undo-tree-id3891 . -1) (undo-tree-id3893 . -1) (undo-tree-id3895 . -1) (undo-tree-id3897 . -1) (undo-tree-id3899 . -1) (undo-tree-id3901 . -1) (undo-tree-id3903 . -1) (undo-tree-id3905 . -1) (undo-tree-id3907 . -1) (undo-tree-id3909 . -1) (undo-tree-id3911 . -1) (undo-tree-id3913 . -1) (undo-tree-id3915 . -1) (undo-tree-id3917 . -1) (undo-tree-id3919 . -1) (undo-tree-id3921 . -1) (undo-tree-id3923 . -1) (undo-tree-id3925 . -1) (undo-tree-id3927 . -1) (undo-tree-id3929 . -1) (undo-tree-id3931 . -1) (undo-tree-id3933 . -1) (undo-tree-id3935 . -1) (undo-tree-id3937 . -1) (undo-tree-id3939 . -1) (undo-tree-id3941 . -1) (#("T" 0 1 (fontified t)) . -9440) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3945 . -1) (undo-tree-id3947 . -1) (undo-tree-id3949 . -1) (undo-tree-id3951 . -1) (undo-tree-id3953 . -1) (undo-tree-id3955 . -1) (undo-tree-id3957 . -1) (undo-tree-id3959 . -1) (undo-tree-id3961 . -1) (undo-tree-id3963 . -1) (undo-tree-id3965 . -1) (undo-tree-id3967 . -1) (undo-tree-id3969 . -1) (undo-tree-id3971 . -1) (undo-tree-id3973 . -1) (undo-tree-id3975 . -1) (undo-tree-id3977 . -1) (undo-tree-id3979 . -1) (undo-tree-id3981 . -1) (undo-tree-id3983 . -1) (undo-tree-id3985 . -1) (undo-tree-id3987 . -1) (undo-tree-id3989 . -1) (undo-tree-id3991 . -1) (undo-tree-id3993 . -1) (undo-tree-id3995 . -1) (undo-tree-id3997 . -1) (undo-tree-id3999 . -1) (undo-tree-id4001 . -1) (undo-tree-id4003 . -1) (undo-tree-id4005 . -1) (undo-tree-id4007 . -1) (undo-tree-id4009 . -1) (undo-tree-id4011 . -1) (undo-tree-id4013 . -1) (undo-tree-id4015 . -1) (undo-tree-id4017 . -1) (undo-tree-id4019 . -1) (undo-tree-id4021 . -1) (undo-tree-id4023 . -1) (undo-tree-id4025 . -1) (undo-tree-id4027 . -1) (undo-tree-id4029 . -1) (undo-tree-id4031 . -1) (undo-tree-id4033 . -1) (undo-tree-id4035 . -1) (undo-tree-id4037 . -1) (undo-tree-id4039 . -1) (undo-tree-id4041 . -1) (undo-tree-id4043 . -1) (undo-tree-id4045 . -1) (undo-tree-id4047 . -1) (undo-tree-id4049 . -1) (undo-tree-id4051 . -1) (undo-tree-id4053 . -1) (undo-tree-id4055 . -1) (undo-tree-id4057 . -1) (undo-tree-id4059 . -1) (undo-tree-id4061 . -1) (undo-tree-id4063 . -1) (undo-tree-id4065 . -1) (undo-tree-id4067 . -1) (undo-tree-id4069 . -1) (undo-tree-id4071 . -1) (undo-tree-id4073 . -1) (undo-tree-id4075 . -1) (undo-tree-id4077 . -1) (undo-tree-id4079 . -1) (undo-tree-id4081 . -1) (undo-tree-id4083 . -1) (undo-tree-id4085 . -1) (undo-tree-id4087 . -1) (undo-tree-id4089 . -1) (undo-tree-id4091 . -1) (undo-tree-id4093 . -1) (undo-tree-id4095 . -1) (undo-tree-id4097 . -1) (undo-tree-id4099 . -1) (undo-tree-id4101 . -1) (undo-tree-id4103 . -1) (undo-tree-id4105 . -1) (undo-tree-id4107 . -1) (undo-tree-id4109 . -1) (undo-tree-id4111 . -1) (undo-tree-id4113 . -1) (undo-tree-id4115 . -1) (undo-tree-id4117 . -1) (undo-tree-id4119 . -1) (undo-tree-id4121 . -1) (undo-tree-id4123 . -1) (undo-tree-id4125 . -1) (undo-tree-id4127 . -1) (undo-tree-id4129 . -1) (undo-tree-id4131 . -1) (undo-tree-id4133 . -1) (undo-tree-id4135 . -1) (undo-tree-id4137 . -1) (undo-tree-id4139 . -1) (undo-tree-id4141 . -1) (undo-tree-id4143 . -1) (undo-tree-id4145 . -1) (undo-tree-id4147 . -1) (undo-tree-id4149 . -1) (undo-tree-id4151 . -1) (undo-tree-id4153 . -1) (undo-tree-id4155 . -1) (undo-tree-id4157 . -1) (#("e" 0 1 (fontified t)) . -9441) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4161 . -1) (undo-tree-id4163 . -1) (undo-tree-id4165 . -1) (undo-tree-id4167 . -1) (undo-tree-id4169 . -1) (undo-tree-id4171 . -1) (undo-tree-id4173 . -1) (undo-tree-id4175 . -1) (undo-tree-id4177 . -1) (undo-tree-id4179 . -1) (undo-tree-id4181 . -1) (undo-tree-id4183 . -1) (undo-tree-id4185 . -1) (undo-tree-id4187 . -1) (undo-tree-id4189 . -1) (undo-tree-id4191 . -1) (undo-tree-id4193 . -1) (undo-tree-id4195 . -1) (undo-tree-id4197 . -1) (undo-tree-id4199 . -1) (undo-tree-id4201 . -1) (undo-tree-id4203 . -1) (undo-tree-id4205 . -1) (undo-tree-id4207 . -1) (undo-tree-id4209 . -1) (undo-tree-id4211 . -1) (undo-tree-id4213 . -1) (undo-tree-id4215 . -1) (undo-tree-id4217 . -1) (undo-tree-id4219 . -1) (undo-tree-id4221 . -1) (undo-tree-id4223 . -1) (undo-tree-id4225 . -1) (undo-tree-id4227 . -1) (undo-tree-id4229 . -1) (undo-tree-id4231 . -1) (undo-tree-id4233 . -1) (undo-tree-id4235 . -1) (undo-tree-id4237 . -1) (undo-tree-id4239 . -1) (undo-tree-id4241 . -1) (undo-tree-id4243 . -1) (undo-tree-id4245 . -1) (undo-tree-id4247 . -1) (undo-tree-id4249 . -1) (undo-tree-id4251 . -1) (undo-tree-id4253 . -1) (undo-tree-id4255 . -1) (undo-tree-id4257 . -1) (undo-tree-id4259 . -1) (undo-tree-id4261 . -1) (undo-tree-id4263 . -1) (undo-tree-id4265 . -1) (undo-tree-id4267 . -1) (undo-tree-id4269 . -1) (undo-tree-id4271 . -1) (undo-tree-id4273 . -1) (undo-tree-id4275 . -1) (undo-tree-id4277 . -1) (undo-tree-id4279 . -1) (undo-tree-id4281 . -1) (undo-tree-id4283 . -1) (undo-tree-id4285 . -1) (undo-tree-id4287 . -1) (undo-tree-id4289 . -1) (undo-tree-id4291 . -1) (undo-tree-id4293 . -1) (#("r" 0 1 (fontified t)) . -9442) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4297 . -1) (undo-tree-id4299 . -1) (undo-tree-id4301 . -1) (undo-tree-id4303 . -1) (undo-tree-id4305 . -1) (undo-tree-id4307 . -1) (undo-tree-id4309 . -1) (undo-tree-id4311 . -1) (undo-tree-id4313 . -1) (undo-tree-id4315 . -1) (undo-tree-id4317 . -1) (undo-tree-id4319 . -1) (undo-tree-id4321 . -1) (undo-tree-id4323 . -1) (undo-tree-id4325 . -1) (undo-tree-id4327 . -1) (undo-tree-id4329 . -1) (undo-tree-id4331 . -1) (undo-tree-id4333 . -1) (undo-tree-id4335 . -1) (undo-tree-id4337 . -1) (undo-tree-id4339 . -1) (undo-tree-id4341 . -1) (undo-tree-id4343 . -1) (undo-tree-id4345 . -1) (undo-tree-id4347 . -1) (undo-tree-id4349 . -1) 9443 (#("," 0 1 (fontified t c-type c-not-decl)) . -9404) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (#("T" 0 1 (fontified t)) . -9405) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (#("e" 0 1 (fontified t)) . -9406) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) 9407 (#("r" 0 1 (fontified t)) . 9407) (undo-tree-id4363 . -1) (t 26075 14594 4201 802000)) ((9404 . 9408) (9439 . 9443) (t 26075 14626 700869 790000)) (26075 14626 692025 575000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#(",Ter}" 0 1 (fontified t c-type c-not-decl) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-6-face))) . 9439) (undo-tree-id4434 . -4) (undo-tree-id4435 . -4) (undo-tree-id4436 . -4) (undo-tree-id4437 . -4) (undo-tree-id4438 . 1) (undo-tree-id4439 . -5) (undo-tree-id4440 . -4) (undo-tree-id4441 . -5) (undo-tree-id4442 . -3) (undo-tree-id4443 . -3) (undo-tree-id4444 . -3) (undo-tree-id4445 . -3) (undo-tree-id4446 . -3) (undo-tree-id4447 . -3) (undo-tree-id4448 . -3) (undo-tree-id4449 . -3) (undo-tree-id4450 . -3) (undo-tree-id4451 . -3) (undo-tree-id4452 . -3) (undo-tree-id4453 . -3) (undo-tree-id4454 . -3) (undo-tree-id4455 . -3) (undo-tree-id4456 . -3) (undo-tree-id4457 . -3) (undo-tree-id4458 . -4) (undo-tree-id4459 . -4) (undo-tree-id4460 . -4) (undo-tree-id4461 . -4) (undo-tree-id4462 . -4) (undo-tree-id4463 . -4) (undo-tree-id4464 . -4) (undo-tree-id4465 . -4) (undo-tree-id4466 . -4) (undo-tree-id4467 . -4) (undo-tree-id4468 . -4) (undo-tree-id4469 . -4) (undo-tree-id4470 . -4) (undo-tree-id4471 . -4) (undo-tree-id4472 . -4) (undo-tree-id4473 . -4) (undo-tree-id4474 . -4) (undo-tree-id4475 . -4) (undo-tree-id4476 . -4) (undo-tree-id4477 . -4) (undo-tree-id4478 . -4) (undo-tree-id4479 . -4) (undo-tree-id4480 . -4) (undo-tree-id4481 . -4) (undo-tree-id4482 . -4) (undo-tree-id4483 . -4) (undo-tree-id4484 . -4) (undo-tree-id4485 . -4) (undo-tree-id4486 . -4) (undo-tree-id4487 . -4) (undo-tree-id4488 . -4) (undo-tree-id4489 . -4) (undo-tree-id4490 . -4) (undo-tree-id4491 . -4) (undo-tree-id4492 . -4) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) (undo-tree-id4501 . -4) (undo-tree-id4502 . -4) (undo-tree-id4503 . -4) (undo-tree-id4504 . -4) (undo-tree-id4505 . -4) (undo-tree-id4506 . -4) (undo-tree-id4507 . -4) (undo-tree-id4508 . -4) (undo-tree-id4509 . -4) (undo-tree-id4510 . -4) (undo-tree-id4511 . -4) (undo-tree-id4512 . -4) (undo-tree-id4513 . -4) (undo-tree-id4514 . -4) (undo-tree-id4515 . -4) (undo-tree-id4516 . -4) (undo-tree-id4517 . -4) (undo-tree-id4518 . -4) (undo-tree-id4519 . -4) (undo-tree-id4520 . -4) (undo-tree-id4521 . -4) (undo-tree-id4522 . -4) (undo-tree-id4523 . -4) (undo-tree-id4524 . -4) (undo-tree-id4525 . -4) (undo-tree-id4526 . -4) (undo-tree-id4527 . -4) (undo-tree-id4528 . -4) (undo-tree-id4529 . -4) (undo-tree-id4530 . -4) (undo-tree-id4531 . -4) (undo-tree-id4532 . -4) (undo-tree-id4533 . -4) (undo-tree-id4534 . -4) (undo-tree-id4535 . -4) (undo-tree-id4536 . -4) (undo-tree-id4537 . -4) (undo-tree-id4538 . -4) (undo-tree-id4539 . -4) (undo-tree-id4540 . -4) (undo-tree-id4541 . -4) (undo-tree-id4542 . -4) (undo-tree-id4543 . -4) (undo-tree-id4544 . -4) (undo-tree-id4545 . -4) (undo-tree-id4546 . -4) (undo-tree-id4547 . -4) (undo-tree-id4548 . -4) (undo-tree-id4549 . -4) (undo-tree-id4550 . -4) (undo-tree-id4551 . -4) (undo-tree-id4552 . -4) (undo-tree-id4553 . -4) (undo-tree-id4554 . -4) (undo-tree-id4555 . -4) (undo-tree-id4556 . -4) (undo-tree-id4557 . -4) (undo-tree-id4558 . -4) (undo-tree-id4559 . -4) (undo-tree-id4560 . -4) (undo-tree-id4561 . -4) (undo-tree-id4562 . -4) (undo-tree-id4563 . -4) (undo-tree-id4564 . -4) (undo-tree-id4565 . -4) (undo-tree-id4566 . -4) (undo-tree-id4567 . -4) (undo-tree-id4568 . -4) (undo-tree-id4569 . -4) (undo-tree-id4570 . -4) (undo-tree-id4571 . -4) (undo-tree-id4572 . -4) (undo-tree-id4573 . -4) (undo-tree-id4574 . -4) (undo-tree-id4575 . -4) (undo-tree-id4576 . -4) (undo-tree-id4577 . -4) (undo-tree-id4578 . -4) (undo-tree-id4579 . -4) (undo-tree-id4580 . -4) (undo-tree-id4581 . -4) (undo-tree-id4582 . -4) (undo-tree-id4583 . -4) (undo-tree-id4584 . -4) (undo-tree-id4585 . -5) 9443) nil (26075 14850 223190 297000) 0 nil])
nil
([nil nil ((11157 . 11158) (11154 . 11156) (11152 . 11154) (11151 . 11152) (#("z" 0 1 (fontified t)) . -11151) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (#("e" 0 1 (fontified t)) . -11152) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) 11153 (11144 . 11153) (11141 . 11144) (11140 . 11142) (11132 . 11140) (11131 . 11132) (11128 . 11131) (#("  " 0 2 (fontified t)) . 11128) (undo-tree-id4412 . -2) (undo-tree-id4413 . -2) 11130 (11127 . 11130) (11126 . 11127) (11123 . 11126) (11114 . 11123) (#("bnf_token" 0 9 (fontified nil)) . -11114) (11114 . 11123) (#("bn" 0 1 (fontified t) 1 2 (fontified t)) . -11114) (undo-tree-id4414 . -2) (undo-tree-id4415 . -2) 11116 (11114 . 11116) (#("n" 0 1 (fontified t)) . -11114) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) 11115 (11114 . 11115) (#("t" 0 1 (fontified t)) . -11114) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (#("o" 0 1 (fontified t)) . -11115) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (#("k" 0 1 (fontified t)) . -11116) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (#("e" 0 1 (fontified t)) . -11117) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (#("n" 0 1 (fontified t)) . -11118) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) 11119 (11101 . 11119) (#("to" 0 2 (fontified nil)) . 11101) (11101 . 11103) (#("token_class::token" 0 18 (fontified nil)) . -11101) (11101 . 11119) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -11101) (undo-tree-id4428 . -2) (undo-tree-id4429 . -2) 11103 (11101 . 11103) (#(";" 0 1 (fontified t)) . 11101) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1)) nil (26075 14850 223098 528000) 0 nil])
([nil nil ((11205 . 11211) (11204 . 11206) (11203 . 11205) (11198 . 11203) (11178 . 11179) (11176 . 11178) (11169 . 11176) (11161 . 11169) (11158 . 11161) (11175 . 11176) (11169 . 11175) (11168 . 11170) (11162 . 11168) (11159 . 11162) (#("  " 0 2 (fontified t)) . 11159) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) 11161 (11158 . 11161) (t 26075 14850 260878 744000) 11157) nil (26075 14977 318634 133000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11200) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1)) nil (26075 14977 318629 624000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11200) (undo-tree-id4594 . 1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1)) nil (26075 14977 318434 726000) 0 nil])
([nil nil ((11247 . 11248) (11242 . 11247) (11237 . 11242) (11236 . 11237) (11234 . 11236) (11232 . 11234) (11223 . 11232) (#("bnf_token" 0 9 (fontified nil)) . -11223) (11223 . 11232) (11221 . 11223) (11210 . 11221) (#("to" 0 2 (fontified nil)) . 11210) (11210 . 11212) (#("token_class" 0 11 (fontified nil)) . -11210) (11210 . 11221) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -11210) (undo-tree-id4592 . -2) (undo-tree-id4593 . -2) 11212 (11210 . 11212) (11203 . 11205) (#("    " 0 4 (fontified t)) . 11203) 11212 (11207 . 11212) (11202 . 11207) (11210 . 11212) 11211) nil (26075 14977 318400 792000) 0 nil])
([nil nil ((11326 . 11327) (11325 . 11326) (#("t" 0 1 (fontified t)) . -11325) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (#("=" 0 1 (fontified t)) . -11326) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) 11327 (11325 . 11327) (11322 . 11325) (apply yas--snippet-revive 11292 11322 #s(yas--snippet nil (#s(yas--field 1 11299 11321 nil nil nil t nil)) nil 11 nil #s(yas--field 1 11299 11321 nil nil nil t nil) nil nil)) (nil fontified nil 11299 . 11321) (nil face (rainbow-delimiters-depth-4-face) 11299 . 11321) (11299 . 11321) (#("to" 0 2 (fontified nil)) . 11299) (nil fontified nil 11299 . 11301) (nil face (rainbow-delimiters-depth-4-face) 11299 . 11301) (11299 . 11301) (#("token_class::bnf_token" 0 22 (fontified nil)) . -11299) (nil fontified nil 11299 . 11321) (nil face (rainbow-delimiters-depth-4-face) 11299 . 11321) (11299 . 11321) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -11299) (undo-tree-id4830 . -2) (undo-tree-id4831 . -2) 11301 (11300 . 11301) (#("typename Tp" 0 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil) 9 11 (fontified nil face font-lock-type-face)) . 11300) (11299 . 11300) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11299 11321 nil nil nil t nil)) nil 11 nil #s(yas--field 1 11299 11321 nil nil nil t nil) nil nil)) (11292 . 11311) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 11292) (11292 . 11316) (#("v" 0 1 (fontified nil)) . 11292) (11292 . 11293) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (syntax-table (4 . 62) fontified nil) 7 18 (fontified nil) 18 19 (c-type c-<>-arg-sep fontified nil) 19 34 (fontified nil) 34 35 (syntax-table (5 . 60) fontified nil)) . -11292) (11292 . 11327) (#("vec" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -11292) (undo-tree-id4832 . -3) (undo-tree-id4833 . -3) 11295 (11294 . 11295) (#("r" 0 1 (fontified t)) . -11294) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) 11295 (11293 . 11295) (#("d" 0 1 (fontified t)) . -11293) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) 11294 (11292 . 11294) (11283 . 11287) (#("  " 0 2 (fontified nil)) . 11283) (11289 . 11290) (11283 . 11285) (#("    " 0 4 (fontified nil)) . 11283) (11290 . 11291) (11287 . 11290) (11282 . 11287) (11142 . 11143) (11136 . 11142) (11130 . 11136) (#("sta" 0 3 (fontified nil)) . 11130) (11130 . 11133) (#("static" 0 6 (fontified nil)) . -11130) (11130 . 11136) (#("sta" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -11130) (undo-tree-id4838 . -3) (undo-tree-id4839 . -3) 11133 (11130 . 11133) (11127 . 11130) (11258 . 11259) (nil syntax-table nil 11265 . 11266) (nil syntax-table (1) 11249 . 11250) (#("b" 0 1 (fontified t face font-lock-string-face)) . -11258) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -11259) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) 11260 (11258 . 11260) (nil syntax-table nil 11265 . 11266) (nil syntax-table (1) 11249 . 11250) (11262 . 11263) (nil syntax-table nil 11264 . 11265) (nil syntax-table (1) 11249 . 11250) (11261 . 11262) (nil syntax-table nil 11263 . 11264) (nil syntax-table (1) 11249 . 11250) (11260 . 11261) (nil syntax-table nil 11262 . 11263) (nil syntax-table (1) 11249 . 11250) (11259 . 11260) (nil syntax-table nil 11261 . 11262) (nil syntax-table (1) 11249 . 11250) (11260 . 11261) (nil syntax-table nil 11260 . 11261) (nil syntax-table (1) 11249 . 11250) (#("n" 0 1 (fontified t face font-lock-string-face)) . -11258) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -11259) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) 11260 (11258 . 11260) (nil syntax-table nil 11260 . 11261) (nil syntax-table (1) 11249 . 11250) (11255 . 11258) (#("^" 0 1 (fontified t face font-lock-string-face)) . -11255) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) 11256 (11250 . 11256) (#("%" 0 1 (fontified t face font-lock-string-face)) . -11250) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) 11251 (11250 . 11251) (11249 . 11251) (11248 . 11250) (11244 . 11248) (11242 . 11244) (11238 . 11242) (11238 . 11239) 11247 (t 26075 14977 370883 839000)) nil (26075 17508 233225 901000) 0 nil])
([nil nil ((#("    std::vector<token_class::bnf_token> ret;
" 0 4 (fontified t) 4 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face font-lock-constant-face) 6 7 (fontified t face font-lock-constant-face) 7 8 (fontified t) 8 9 (fontified t) 9 15 (fontified t face font-lock-type-face) 15 16 (fontified t syntax-table (4 . 62) face (rainbow-delimiters-depth-4-face)) 16 27 (fontified t face font-lock-constant-face) 27 29 (fontified t) 29 38 (fontified t face font-lock-type-face) 38 39 (fontified t syntax-table (5 . 60) c-type c-decl-id-start face (rainbow-delimiters-depth-4-face)) 39 40 (fontified t) 40 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t face font-lock-variable-name-face) 42 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t) 44 45 (fontified t)) . 11283) (undo-tree-id4682 . -44) (undo-tree-id4683 . 1) (undo-tree-id4684 . -43) (undo-tree-id4685 . -43) (undo-tree-id4686 . -45) (undo-tree-id4687 . -45) (undo-tree-id4688 . 1) (undo-tree-id4689 . -43) (undo-tree-id4690 . -43) (undo-tree-id4691 . -43) (undo-tree-id4692 . -43) (undo-tree-id4693 . -43) (undo-tree-id4694 . -43) (undo-tree-id4695 . -43) (undo-tree-id4696 . -43) (undo-tree-id4697 . -43) (undo-tree-id4698 . -43) (undo-tree-id4699 . -43) (undo-tree-id4700 . -43) (undo-tree-id4701 . -43) (undo-tree-id4702 . -43) (undo-tree-id4703 . -43) (undo-tree-id4704 . -43) (undo-tree-id4705 . -43) (undo-tree-id4706 . -43) (undo-tree-id4707 . -43) (undo-tree-id4708 . -43) (undo-tree-id4709 . -43) (undo-tree-id4710 . -43) (undo-tree-id4711 . -43) (undo-tree-id4712 . -43) (undo-tree-id4713 . -43) (undo-tree-id4714 . -43) (undo-tree-id4715 . -43) (undo-tree-id4716 . -43) (undo-tree-id4717 . -43) (undo-tree-id4718 . -43) (undo-tree-id4719 . -43) (undo-tree-id4720 . -43) (undo-tree-id4721 . -43) (undo-tree-id4722 . -43) (undo-tree-id4723 . -43) (undo-tree-id4724 . -43) (undo-tree-id4725 . -43) (undo-tree-id4726 . -43) (undo-tree-id4727 . -43) (undo-tree-id4728 . -43) (undo-tree-id4729 . -43) (undo-tree-id4730 . -43) (undo-tree-id4731 . -43) (undo-tree-id4732 . -43) (undo-tree-id4733 . -43) (undo-tree-id4734 . -43) (undo-tree-id4735 . -43) (undo-tree-id4736 . -43) (undo-tree-id4737 . -43) (undo-tree-id4738 . -43) (undo-tree-id4739 . -43) (undo-tree-id4740 . -43) (undo-tree-id4741 . -43) (undo-tree-id4742 . -43) (undo-tree-id4743 . -43) (undo-tree-id4744 . -43) (undo-tree-id4745 . -43) (undo-tree-id4746 . -43) (undo-tree-id4747 . -43) (undo-tree-id4748 . -43) (undo-tree-id4749 . -43) (undo-tree-id4750 . -43) (undo-tree-id4751 . -43) (undo-tree-id4752 . -43) (undo-tree-id4753 . -43) (undo-tree-id4754 . -43) (undo-tree-id4755 . -43) (undo-tree-id4756 . -43) (undo-tree-id4757 . -43) (undo-tree-id4758 . -43) (undo-tree-id4759 . -43) (undo-tree-id4760 . -43) (undo-tree-id4761 . -43) (undo-tree-id4762 . -43) (undo-tree-id4763 . -43) (undo-tree-id4764 . -43) (undo-tree-id4765 . -43) (undo-tree-id4766 . -43) (undo-tree-id4767 . -43) (undo-tree-id4768 . -43) (undo-tree-id4769 . -43) (undo-tree-id4770 . -43) (undo-tree-id4771 . -43) (undo-tree-id4772 . -43) (undo-tree-id4773 . -43) (undo-tree-id4774 . -43) (undo-tree-id4775 . -43) (undo-tree-id4776 . -43) (undo-tree-id4777 . -43) (undo-tree-id4778 . -43) (undo-tree-id4779 . -43) (undo-tree-id4780 . -43) (undo-tree-id4781 . -43) (undo-tree-id4782 . -43) (undo-tree-id4783 . -43) (undo-tree-id4784 . -43) (undo-tree-id4785 . -43) (undo-tree-id4786 . -43) (undo-tree-id4787 . -43) (undo-tree-id4788 . -43) (undo-tree-id4789 . -43) (undo-tree-id4790 . -43) (undo-tree-id4791 . -43) (undo-tree-id4792 . -43) (undo-tree-id4793 . -43) (undo-tree-id4794 . -43) (undo-tree-id4795 . -43) (undo-tree-id4796 . -43) (undo-tree-id4797 . -43) (undo-tree-id4798 . -43) (undo-tree-id4799 . -43) (undo-tree-id4800 . -43) (undo-tree-id4801 . -43) (undo-tree-id4802 . -43) (undo-tree-id4803 . -43) (undo-tree-id4804 . -43) (undo-tree-id4805 . -43) (undo-tree-id4806 . -43) (undo-tree-id4807 . -43) (undo-tree-id4808 . -43) (undo-tree-id4809 . -43) (undo-tree-id4810 . -43) (undo-tree-id4811 . -43) (undo-tree-id4812 . -43) (undo-tree-id4813 . -43) (undo-tree-id4814 . -43) (undo-tree-id4815 . -43) (undo-tree-id4816 . -43) (undo-tree-id4817 . -43) (undo-tree-id4818 . -43) (undo-tree-id4819 . -43) (undo-tree-id4820 . -43) (undo-tree-id4821 . -43) (undo-tree-id4822 . -43) (undo-tree-id4823 . -43) (undo-tree-id4824 . -43) (undo-tree-id4825 . -45) 11326) nil (26075 17508 233198 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11131 . 11132) (#("
" 0 1 (fontified nil)) . -11172) (11127 . 11173) 11108) nil (26075 17508 232945 680000) 0 nil])
([nil nil ((11327 . 11332) 11303) nil (26075 17508 232945 40000) 0 nil])
([nil nil ((11332 . 11341)) nil (26075 17508 232944 574000) 0 nil])
([nil nil ((11341 . 11342)) nil (26075 17508 232944 230000) 0 nil])
([nil nil ((11342 . 11344)) nil (26075 17508 232943 806000) 0 nil])
([nil nil ((11342 . 11350) (#("o" 0 1 (fontified nil)) . 11342) (11342 . 11343) (#("operator" 0 8 (fontified nil)) . -11342) (11342 . 11350) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -11342) (undo-tree-id4680 . -2) (undo-tree-id4681 . -2) 11344) nil (26075 17508 232942 795000) 0 nil])
([nil nil ((11350 . 11352)) nil (26075 17508 232940 27000) 0 nil])
([nil nil ((11352 . 11354)) nil (26075 17508 232939 501000) 0 nil])
([nil nil ((11354 . 11355)) nil (26075 17508 232938 850000) 0 nil])
([nil nil ((11353 . 11360)) nil (26075 17508 232938 485000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11359) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) 11360) nil (26075 17509 888156 278000) 0 nil])
([nil nil ((11371 . 11373) (11368 . 11371) (#("u" 0 1 (fontified t)) . -11368) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (#("z" 0 1 (fontified t)) . -11369) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (#("e" 0 1 (fontified t)) . -11370) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) 11371 (11361 . 11371) (11360 . 11361) (11359 . 11361)) nil (26075 17522 133993 88000) 0 nil] [nil nil ((11359 . 11361)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face))) . 11359) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1)) (26075 17509 885448 512000) 0 nil] [nil nil ((11359 . 11361)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face))) . 11359) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1)) (26075 17508 232927 343000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-constant-face)) . -11061) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) 11062 (11057 . 11062) (#("m" 0 1 (fontified t face font-lock-constant-face)) . -11057) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (#("o" 0 1 (fontified t face font-lock-constant-face)) . -11058) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) 11059 (#("d" 0 1 (fontified t face font-lock-constant-face)) . -11059) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) 11060 (11049 . 11060) (#("sy" 0 2 (fontified nil)) . 11049) (11049 . 11051) (#("synatax_mod" 0 11 (fontified nil)) . -11049) (11049 . 11060) (#("sy" 0 1 (fontified t face font-lock-constant-face) 1 2 (fontified t face font-lock-constant-face)) . -11049) (undo-tree-id5265 . -2) (undo-tree-id5266 . -2) 11051 (11049 . 11051) (11050 . 11051) (11022 . 11026) (11045 . 11046) (t 26075 17522 147652 562000)) nil (26075 17554 5830 97000) 0 nil])
nil
nil
([nil nil ((#("    " 0 4 (fontified t)) . 11022) (undo-tree-id4864 . -3) (undo-tree-id4865 . 4) (undo-tree-id4866 . -4)) nil (26075 17554 5490 303000) 0 nil])
([nil nil ((apply -36 11113 11450 undo--wrap-and-run-primitive-undo 11113 11450 ((11444 . 11447) (11423 . 11426) (11371 . 11374) (11339 . 11342) (11301 . 11304) (11294 . 11297) (11273 . 11276) (11248 . 11251) (11215 . 11218) (11195 . 11198) (11147 . 11150) (11115 . 11118) 11113)) (t 26075 17554 20987 175000)) nil (26075 17585 560133 258000) 0 nil])
([nil nil ((10022 . 10024) (#("	  " 0 1 (c-is-sws t fontified nil) 1 3 (c-is-sws t fontified nil)) . 10022) (10063 . 10064) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -10063) (10063 . 10064) (t 26075 17585 577655 111000)) nil (26075 17646 425885 94000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 9982) (undo-tree-id6342 . 1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) 9983 (#("//{token_class::token::AND_t,{Ter,OP}}," 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1 2 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 2 39 (fontified t c-in-sws t face font-lock-comment-face)) . 9982) (undo-tree-id6456 . -38) (undo-tree-id6457 . 39) (undo-tree-id6458 . -14) (undo-tree-id6459 . -14) (undo-tree-id6460 . -14) (undo-tree-id6461 . -14) (undo-tree-id6462 . -14) (undo-tree-id6463 . -14) (undo-tree-id6464 . -14) (undo-tree-id6465 . -14) (undo-tree-id6466 . -14) (undo-tree-id6467 . -14) (undo-tree-id6468 . -14) (undo-tree-id6469 . -14) (undo-tree-id6470 . -14) (undo-tree-id6471 . -14) (undo-tree-id6472 . -14) (undo-tree-id6473 . -14) (undo-tree-id6474 . -14) (undo-tree-id6475 . -14) (undo-tree-id6476 . -14) (undo-tree-id6477 . -14) (undo-tree-id6478 . -14) (undo-tree-id6479 . -14) (undo-tree-id6480 . -14) (undo-tree-id6481 . -14) (undo-tree-id6482 . -14) (undo-tree-id6483 . -14) (undo-tree-id6484 . -14) (undo-tree-id6485 . -14) (undo-tree-id6486 . -14) (undo-tree-id6487 . -14) (undo-tree-id6488 . -14) (undo-tree-id6489 . -14) (undo-tree-id6490 . -14) (undo-tree-id6491 . -14) (undo-tree-id6492 . -14) (undo-tree-id6493 . -14) (undo-tree-id6494 . -14) (undo-tree-id6495 . -14) (undo-tree-id6496 . -14) (undo-tree-id6497 . -14) (undo-tree-id6498 . -14) (undo-tree-id6499 . -14) (undo-tree-id6500 . -14) (undo-tree-id6501 . -14) (undo-tree-id6502 . -14) (undo-tree-id6503 . -14) (undo-tree-id6504 . -14) (undo-tree-id6505 . -14) (undo-tree-id6506 . -14) (undo-tree-id6507 . -14) (undo-tree-id6508 . -14) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -39) (undo-tree-id6561 . -39) (undo-tree-id6562 . -39) (undo-tree-id6563 . -39) (t 26075 17612 477656 190000)) nil (26075 17663 314874 944000) 0 nil] [nil nil ((9972 . 9977) (9972 . 9973) (#("     {OP,{//{token_class::token::AND_t,{Ter,OP}},
" 0 5 (fontified t) 5 6 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-4-face)) 6 8 (fontified t) 8 9 (fontified t c-type c-not-decl) 9 10 (fontified t face (rainbow-delimiters-depth-5-face)) 10 11 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 11 12 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face c-in-sws t)) . 9972) (undo-tree-id5267 . -49) (undo-tree-id5268 . 39) (undo-tree-id5269 . -10) (undo-tree-id5270 . -10) (undo-tree-id5271 . -50) (undo-tree-id5272 . -50) (undo-tree-id5273 . -24) (undo-tree-id5274 . -24) (undo-tree-id5275 . -24) (undo-tree-id5276 . -24) (undo-tree-id5277 . -24) (undo-tree-id5278 . -24) (undo-tree-id5279 . -24) (undo-tree-id5280 . -24) (undo-tree-id5281 . -24) (undo-tree-id5282 . -24) (undo-tree-id5283 . -24) (undo-tree-id5284 . -24) (undo-tree-id5285 . -24) (undo-tree-id5286 . -24) (undo-tree-id5287 . -24) (undo-tree-id5288 . -24) (undo-tree-id5289 . -24) (undo-tree-id5290 . -24) (undo-tree-id5291 . -24) (undo-tree-id5292 . -24) (undo-tree-id5293 . -24) (undo-tree-id5294 . -24) (undo-tree-id5295 . -24) (undo-tree-id5296 . -24) (undo-tree-id5297 . -24) (undo-tree-id5298 . -24) (undo-tree-id5299 . -24) (undo-tree-id5300 . -24) (undo-tree-id5301 . -24) (undo-tree-id5302 . -24) (undo-tree-id5303 . -24) (undo-tree-id5304 . -24) (undo-tree-id5305 . -24) (undo-tree-id5306 . -24) (undo-tree-id5307 . -24) (undo-tree-id5308 . -24) (undo-tree-id5309 . -24) (undo-tree-id5310 . -24) (undo-tree-id5311 . -24) (undo-tree-id5312 . -24) (undo-tree-id5313 . -24) (undo-tree-id5314 . -24) (undo-tree-id5315 . -24) (undo-tree-id5316 . -24) (undo-tree-id5317 . -24) (undo-tree-id5318 . -24) (undo-tree-id5319 . -24) (undo-tree-id5320 . -24) (undo-tree-id5321 . -24) (undo-tree-id5322 . -24) (undo-tree-id5323 . -24) (undo-tree-id5324 . -6) (undo-tree-id5325 . -6) (undo-tree-id5326 . -6) (undo-tree-id5327 . -6) (undo-tree-id5328 . -6) (undo-tree-id5329 . -6) (undo-tree-id5330 . -6) (undo-tree-id5331 . -6) (undo-tree-id5332 . -6) (undo-tree-id5333 . -6) (undo-tree-id5334 . -6) (undo-tree-id5335 . -6) (undo-tree-id5336 . -6) (undo-tree-id5337 . -6) (undo-tree-id5338 . -6) (undo-tree-id5339 . -6) (undo-tree-id5340 . -6) (undo-tree-id5341 . -6) (undo-tree-id5342 . -6) (undo-tree-id5343 . -6) (undo-tree-id5344 . -6) (undo-tree-id5345 . -6) (undo-tree-id5346 . -6) (undo-tree-id5347 . -6) (undo-tree-id5348 . -6) (undo-tree-id5349 . -6) (undo-tree-id5350 . -5) (undo-tree-id5351 . -5) (undo-tree-id5352 . -5) (undo-tree-id5353 . -5) (undo-tree-id5354 . -5) (undo-tree-id5355 . -5) (undo-tree-id5356 . -5) (undo-tree-id5357 . -5) (undo-tree-id5358 . -5) (undo-tree-id5359 . -5) (undo-tree-id5360 . -5) (undo-tree-id5361 . -5) (undo-tree-id5362 . -5) (undo-tree-id5363 . -5) (undo-tree-id5364 . -5) (undo-tree-id5365 . -5) (undo-tree-id5366 . -5) (undo-tree-id5367 . -5) (undo-tree-id5368 . -5) (undo-tree-id5369 . -5) (undo-tree-id5370 . -5) (undo-tree-id5371 . -5) (undo-tree-id5372 . -5) (undo-tree-id5373 . -5) (undo-tree-id5374 . -5) (undo-tree-id5375 . -5) (undo-tree-id5376 . -4) (undo-tree-id5377 . -4) (undo-tree-id5378 . -4) (undo-tree-id5379 . -4) (undo-tree-id5380 . -4) (undo-tree-id5381 . -4) (undo-tree-id5382 . -4) (undo-tree-id5383 . -4) (undo-tree-id5384 . -4) (undo-tree-id5385 . -4) (undo-tree-id5386 . -4) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) (undo-tree-id5392 . -4) (undo-tree-id5393 . -4) (undo-tree-id5394 . -4) (undo-tree-id5395 . -4) (undo-tree-id5396 . -4) (undo-tree-id5397 . -4) (undo-tree-id5398 . -4) (undo-tree-id5399 . -4) (undo-tree-id5400 . -4) (undo-tree-id5401 . -4) (undo-tree-id5402 . -4) (undo-tree-id5403 . -4) (undo-tree-id5404 . -4) (undo-tree-id5405 . -4) (undo-tree-id5406 . -4) (undo-tree-id5407 . -4) (undo-tree-id5408 . -4) (undo-tree-id5409 . -4) (undo-tree-id5410 . -4) (undo-tree-id5411 . -4) (undo-tree-id5412 . -4) (undo-tree-id5413 . -4) (undo-tree-id5414 . -4) (undo-tree-id5415 . -4) (undo-tree-id5416 . -4) (undo-tree-id5417 . -4) (undo-tree-id5418 . -4) (undo-tree-id5419 . -4) (undo-tree-id5420 . -4) (undo-tree-id5421 . -4) (undo-tree-id5422 . -4) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) (undo-tree-id5427 . -4) (undo-tree-id5428 . -4) (undo-tree-id5429 . -4) (undo-tree-id5430 . -4) (undo-tree-id5431 . -4) (undo-tree-id5432 . -4) (undo-tree-id5433 . -4) (undo-tree-id5434 . -4) (undo-tree-id5435 . -4) (undo-tree-id5436 . -4) (undo-tree-id5437 . -4) (undo-tree-id5438 . -4) (undo-tree-id5439 . -4) (undo-tree-id5440 . -4) (undo-tree-id5441 . -4) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) (undo-tree-id5446 . -4) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) (undo-tree-id5449 . -4) (undo-tree-id5450 . -4) (undo-tree-id5451 . -4) (undo-tree-id5452 . -4) (undo-tree-id5453 . -4) (undo-tree-id5454 . -4) (undo-tree-id5455 . -4) (undo-tree-id5456 . -4) (undo-tree-id5457 . -4) (undo-tree-id5458 . -4) (undo-tree-id5459 . -4) (undo-tree-id5460 . -4) (undo-tree-id5461 . -4) (undo-tree-id5462 . -4) (undo-tree-id5463 . -4) (undo-tree-id5464 . -4) (undo-tree-id5465 . -4) (undo-tree-id5466 . -4) (undo-tree-id5467 . -4) (undo-tree-id5468 . -4) (undo-tree-id5469 . -4) (undo-tree-id5470 . -4) (undo-tree-id5471 . -4) (undo-tree-id5472 . -4) (undo-tree-id5473 . -4) (undo-tree-id5474 . -4) (undo-tree-id5475 . -4) (undo-tree-id5476 . -4) (undo-tree-id5477 . -4) (undo-tree-id5478 . -4) (undo-tree-id5479 . -4) (undo-tree-id5480 . -4) (undo-tree-id5481 . -4) (undo-tree-id5482 . -4) (undo-tree-id5483 . -5) (undo-tree-id5484 . -5) (undo-tree-id5485 . -5) (undo-tree-id5486 . -5) (undo-tree-id5487 . -5) (undo-tree-id5488 . -5) (undo-tree-id5489 . -5) (undo-tree-id5490 . -5) (undo-tree-id5491 . -5) (undo-tree-id5492 . -5) (undo-tree-id5493 . -5) (undo-tree-id5494 . -5) (undo-tree-id5495 . -5) (undo-tree-id5496 . -5) (undo-tree-id5497 . -5) (undo-tree-id5498 . -5) (undo-tree-id5499 . -5) (undo-tree-id5500 . -5) (undo-tree-id5501 . -5) (undo-tree-id5502 . -5) (undo-tree-id5503 . -5) (undo-tree-id5504 . -5) (undo-tree-id5505 . -5) (undo-tree-id5506 . -5) (undo-tree-id5507 . -5) (undo-tree-id5508 . -5) (undo-tree-id5509 . -5) (undo-tree-id5510 . -5) (undo-tree-id5511 . -5) (undo-tree-id5512 . -5) (undo-tree-id5513 . -5) (undo-tree-id5514 . -5) (undo-tree-id5515 . -5) (undo-tree-id5516 . -5) (undo-tree-id5517 . -5) (undo-tree-id5518 . -5) (undo-tree-id5519 . -5) (undo-tree-id5520 . -5) (undo-tree-id5521 . -5) (undo-tree-id5522 . -5) (undo-tree-id5523 . -5) (undo-tree-id5524 . -5) (undo-tree-id5525 . -5) (undo-tree-id5526 . -5) (undo-tree-id5527 . -5) (undo-tree-id5528 . -5) (undo-tree-id5529 . -5) (undo-tree-id5530 . -5) (undo-tree-id5531 . -5) (undo-tree-id5532 . -5) (undo-tree-id5533 . -5) (undo-tree-id5534 . -6) (undo-tree-id5535 . -6) (undo-tree-id5536 . -6) (undo-tree-id5537 . -6) (undo-tree-id5538 . -6) (undo-tree-id5539 . -6) (undo-tree-id5540 . -6) (undo-tree-id5541 . -6) (undo-tree-id5542 . -6) (undo-tree-id5543 . -6) (undo-tree-id5544 . -6) (undo-tree-id5545 . -6) (undo-tree-id5546 . -6) (undo-tree-id5547 . -6) (undo-tree-id5548 . -6) (undo-tree-id5549 . -6) (undo-tree-id5550 . -6) (undo-tree-id5551 . -6) (undo-tree-id5552 . -6) (undo-tree-id5553 . -6) (undo-tree-id5554 . -6) (undo-tree-id5555 . -6) (undo-tree-id5556 . -6) (undo-tree-id5557 . -6) (undo-tree-id5558 . -6) (undo-tree-id5559 . -6) (undo-tree-id5560 . -7) (undo-tree-id5561 . -7) (undo-tree-id5562 . -7) (undo-tree-id5563 . -7) (undo-tree-id5564 . -7) (undo-tree-id5565 . -7) (undo-tree-id5566 . -7) (undo-tree-id5567 . -7) (undo-tree-id5568 . -7) (undo-tree-id5569 . -7) (undo-tree-id5570 . -7) (undo-tree-id5571 . -7) (undo-tree-id5572 . -7) (undo-tree-id5573 . -7) (undo-tree-id5574 . -7) (undo-tree-id5575 . -7) (undo-tree-id5576 . -7) (undo-tree-id5577 . -7) (undo-tree-id5578 . -7) (undo-tree-id5579 . -7) (undo-tree-id5580 . -7) (undo-tree-id5581 . -7) (undo-tree-id5582 . -7) (undo-tree-id5583 . -7) (undo-tree-id5584 . -7) (undo-tree-id5585 . -7) (undo-tree-id5586 . -8) (undo-tree-id5587 . -8) (undo-tree-id5588 . -8) (undo-tree-id5589 . -8) (undo-tree-id5590 . -8) (undo-tree-id5591 . -8) (undo-tree-id5592 . -8) (undo-tree-id5593 . -8) (undo-tree-id5594 . -8) (undo-tree-id5595 . -8) (undo-tree-id5596 . -8) (undo-tree-id5597 . -8) (undo-tree-id5598 . -8) (undo-tree-id5599 . -8) (undo-tree-id5600 . -8) (undo-tree-id5601 . -8) (undo-tree-id5602 . -8) (undo-tree-id5603 . -8) (undo-tree-id5604 . -8) (undo-tree-id5605 . -8) (undo-tree-id5606 . -8) (undo-tree-id5607 . -8) (undo-tree-id5608 . -8) (undo-tree-id5609 . -8) (undo-tree-id5610 . -8) (undo-tree-id5611 . -8) (undo-tree-id5612 . -9) (undo-tree-id5613 . -9) (undo-tree-id5614 . -9) (undo-tree-id5615 . -9) (undo-tree-id5616 . -9) (undo-tree-id5617 . -9) (undo-tree-id5618 . -9) (undo-tree-id5619 . -9) (undo-tree-id5620 . -9) (undo-tree-id5621 . -9) (undo-tree-id5622 . -9) (undo-tree-id5623 . -9) (undo-tree-id5624 . -9) (undo-tree-id5625 . -9) (undo-tree-id5626 . -9) (undo-tree-id5627 . -9) (undo-tree-id5628 . -9) (undo-tree-id5629 . -9) (undo-tree-id5630 . -9) (undo-tree-id5631 . -9) (undo-tree-id5632 . -9) (undo-tree-id5633 . -9) (undo-tree-id5634 . -9) (undo-tree-id5635 . -9) (undo-tree-id5636 . -9) (undo-tree-id5637 . -9) (undo-tree-id5638 . -10) (undo-tree-id5639 . -10) (undo-tree-id5640 . -10) (undo-tree-id5641 . -10) (undo-tree-id5642 . -10) (undo-tree-id5643 . -10) (undo-tree-id5644 . -10) (undo-tree-id5645 . -10) (undo-tree-id5646 . -10) (undo-tree-id5647 . -10) (undo-tree-id5648 . -10) (undo-tree-id5649 . -10) (undo-tree-id5650 . -10) (undo-tree-id5651 . -10) (undo-tree-id5652 . -10) (undo-tree-id5653 . -10) (undo-tree-id5654 . -10) (undo-tree-id5655 . -10) (undo-tree-id5656 . -10) (undo-tree-id5657 . -10) (undo-tree-id5658 . -10) (undo-tree-id5659 . -10) (undo-tree-id5660 . -10) (undo-tree-id5661 . -10) (undo-tree-id5662 . -10) (undo-tree-id5663 . -10) (undo-tree-id5664 . -11) (undo-tree-id5665 . -11) (undo-tree-id5666 . -11) (undo-tree-id5667 . -11) (undo-tree-id5668 . -11) (undo-tree-id5669 . -11) (undo-tree-id5670 . -11) (undo-tree-id5671 . -11) (undo-tree-id5672 . -11) (undo-tree-id5673 . -11) (undo-tree-id5674 . -11) (undo-tree-id5675 . -11) (undo-tree-id5676 . -11) (undo-tree-id5677 . -11) (undo-tree-id5678 . -11) (undo-tree-id5679 . -11) (undo-tree-id5680 . -11) (undo-tree-id5681 . -11) (undo-tree-id5682 . -11) (undo-tree-id5683 . -11) (undo-tree-id5684 . -11) (undo-tree-id5685 . -11) (undo-tree-id5686 . -11) (undo-tree-id5687 . -11) (undo-tree-id5688 . -11) (undo-tree-id5689 . -11) (undo-tree-id5690 . -11) (undo-tree-id5691 . -11) (undo-tree-id5692 . -11) (undo-tree-id5693 . -11) (undo-tree-id5694 . -11) (undo-tree-id5695 . -11) (undo-tree-id5696 . -11) (undo-tree-id5697 . -11) (undo-tree-id5698 . -11) (undo-tree-id5699 . -11) (undo-tree-id5700 . -11) (undo-tree-id5701 . -11) (undo-tree-id5702 . -11) (undo-tree-id5703 . -11) (undo-tree-id5704 . -11) (undo-tree-id5705 . -11) (undo-tree-id5706 . -11) (undo-tree-id5707 . -11) (undo-tree-id5708 . -11) (undo-tree-id5709 . -11) (undo-tree-id5710 . -11) (undo-tree-id5711 . -11) (undo-tree-id5712 . -11) (undo-tree-id5713 . -11) (undo-tree-id5714 . -11) (undo-tree-id5715 . -10) (undo-tree-id5716 . -10) (undo-tree-id5717 . -10) (undo-tree-id5718 . -10) (undo-tree-id5719 . -10) (undo-tree-id5720 . -10) (undo-tree-id5721 . -10) (undo-tree-id5722 . -10) (undo-tree-id5723 . -10) (undo-tree-id5724 . -10) (undo-tree-id5725 . -10) (undo-tree-id5726 . -10) (undo-tree-id5727 . -10) (undo-tree-id5728 . -10) (undo-tree-id5729 . -10) (undo-tree-id5730 . -10) (undo-tree-id5731 . -10) (undo-tree-id5732 . -10) (undo-tree-id5733 . -10) (undo-tree-id5734 . -10) (undo-tree-id5735 . -10) (undo-tree-id5736 . -10) (undo-tree-id5737 . -10) (undo-tree-id5738 . -10) (undo-tree-id5739 . -10) (undo-tree-id5740 . -10) (undo-tree-id5741 . -10) (undo-tree-id5742 . -10) (undo-tree-id5743 . -10) (undo-tree-id5744 . -10) (undo-tree-id5745 . -10) (undo-tree-id5746 . -10) (undo-tree-id5747 . -10) (undo-tree-id5748 . -10) (undo-tree-id5749 . -10) (undo-tree-id5750 . -10) (undo-tree-id5751 . -10) (undo-tree-id5752 . -10) (undo-tree-id5753 . -10) (undo-tree-id5754 . -10) (undo-tree-id5755 . -10) (undo-tree-id5756 . -10) (undo-tree-id5757 . -10) (undo-tree-id5758 . -10) (undo-tree-id5759 . -10) (undo-tree-id5760 . -10) (undo-tree-id5761 . -10) (undo-tree-id5762 . -10) (undo-tree-id5763 . -10) (undo-tree-id5764 . -10) (undo-tree-id5765 . -10) (undo-tree-id5766 . -10) (undo-tree-id5767 . -10) (undo-tree-id5768 . -10) (undo-tree-id5769 . -10) (undo-tree-id5770 . -10) (undo-tree-id5771 . -10) (undo-tree-id5772 . -10) (undo-tree-id5773 . -10) (undo-tree-id5774 . -10) (undo-tree-id5775 . -10) (undo-tree-id5776 . -10) (undo-tree-id5777 . -10) (undo-tree-id5778 . -10) (undo-tree-id5779 . -10) (undo-tree-id5780 . -10) (undo-tree-id5781 . -10) (undo-tree-id5782 . -10) (undo-tree-id5783 . -10) (undo-tree-id5784 . -10) (undo-tree-id5785 . -10) (undo-tree-id5786 . -10) (undo-tree-id5787 . -10) (undo-tree-id5788 . -10) (undo-tree-id5789 . -10) (undo-tree-id5790 . -10) (undo-tree-id5791 . -10) (undo-tree-id5792 . -10) (undo-tree-id5793 . -10) (undo-tree-id5794 . -10) (undo-tree-id5795 . -10) (undo-tree-id5796 . -10) (undo-tree-id5797 . -10) (undo-tree-id5798 . -10) (undo-tree-id5799 . -10) (undo-tree-id5800 . -10) (undo-tree-id5801 . -10) (undo-tree-id5802 . -10) (undo-tree-id5803 . -10) (undo-tree-id5804 . -10) (undo-tree-id5805 . -10) (undo-tree-id5806 . -10) (undo-tree-id5807 . -10) (undo-tree-id5808 . -10) (undo-tree-id5809 . -10) (undo-tree-id5810 . -10) (undo-tree-id5811 . -10) (undo-tree-id5812 . -10) (undo-tree-id5813 . -10) (undo-tree-id5814 . -10) (undo-tree-id5815 . -10) (undo-tree-id5816 . -10) (undo-tree-id5817 . -10) (undo-tree-id5818 . -10) (undo-tree-id5819 . -10) (undo-tree-id5820 . -10) (undo-tree-id5821 . -10) (undo-tree-id5822 . -10) (undo-tree-id5823 . -10) (undo-tree-id5824 . -50) (undo-tree-id5825 . -50) (undo-tree-id5826 . -50) 9982 (t 26075 17612 477656 190000)) ((9972 . 10022) (#("
" 0 1 (fontified nil)) . 9972) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (#("     " 0 5 (fontified t)) . 9972) (undo-tree-id5829 . -5) (undo-tree-id5830 . -5) (undo-tree-id5831 . -5)) (26075 17646 419497 994000) 0 nil])
([nil nil ((#("{	 " 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (c-is-sws t fontified t) 2 3 (c-is-sws t fontified t)) . 9981) (undo-tree-id5832 . -2) (undo-tree-id5833 . 2) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . 3) (undo-tree-id6340 . -1) (undo-tree-id6341 . -3)) nil (26075 17663 314747 435000) 0 nil])
nil
([nil nil ((9981 . 9982)) nil (26075 17663 313477 572000) 0 nil])
([nil nil ((9872 . 9873) (9869 . 9872) (9868 . 9869) (9867 . 9868) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -9867) (9866 . 9868) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9866) (9866 . 9867) (t 26075 17663 334324 899000)) nil (26075 17693 605957 341000) 0 nil])
([nil nil ((apply -12 9870 10043 undo--wrap-and-run-primitive-undo 9870 10043 ((9990 . 9993) (9935 . 9938) (9880 . 9883) (9872 . 9875) 10030))) nil (26075 17693 605952 841000) 0 nil])
([nil nil ((apply -52 9408 9930 undo--wrap-and-run-primitive-undo 9408 9930 ((9870 . 9873) (9822 . 9825) (9822 . 9823) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 9822) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (#<marker at 10392 in synatax_main.cpp> . -1) (9817 . 9822) (9749 . 9752) (9749 . 9750) (#("	" 0 1 (c-in-sws t fontified t)) . 9749) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (#<marker at 10327 in synatax_main.cpp> . -1) (9744 . 9749) (9671 . 9674) (9603 . 9606) (9603 . 9604) (#("	" 0 1 (fontified t)) . 9603) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (#<marker at 9932 in synatax_main.cpp> . -1) (9598 . 9603) (9555 . 9558) (9507 . 9510) (9507 . 9508) (#("	" 0 1 (fontified t)) . 9507) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (#<marker at 9847 in synatax_main.cpp> . -1) (9502 . 9507) (9457 . 9460) (9413 . 9416) (9413 . 9414) (#("	" 0 1 (fontified t)) . 9413) (#<marker at 11739 in synatax_main.cpp> . -1) (#<marker at 12069 in synatax_main.cpp> . -1) (#<marker at 12069 in synatax_main.cpp> . -1) (#<marker in no buffer> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (#<marker at 9762 in synatax_main.cpp> . -1) (9408 . 9413))) (t 26075 17693 684326 122000)) nil (26075 17713 273316 840000) 0 nil])
([nil nil ((9409 . 9410) (9408 . 9409) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -9408) (9407 . 9409) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9407) (9406 . 9408) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -9406) (9406 . 9407) (#("," 0 1 (fontified t)) . -9406) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) 9407) nil (26075 17713 273313 154000) 0 nil])
([nil nil ((9415 . 9416) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -9407) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . 1) (undo-tree-id6819 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -9408) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . 1) (undo-tree-id6825 . -1) 9409 (#(";" 0 1 (fontified t)) . 9409) (t 26075 17713 287660 245000)) nil (26075 17749 287838 978000) 0 nil])
([nil nil ((apply 13 9408 9538 undo--wrap-and-run-primitive-undo 9408 9538 ((#("     " 0 5 (c-in-sws t fontified t)) . 9498) (#<marker at 11739 in synatax_main.cpp> . -5) (#<marker at 12069 in synatax_main.cpp> . -5) (#<marker at 12069 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker in no buffer> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#<marker at 9847 in synatax_main.cpp> . -5) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9503) (#<marker at 11739 in synatax_main.cpp> . -2) (#<marker at 12069 in synatax_main.cpp> . -2) (#<marker at 12069 in synatax_main.cpp> . -2) (#<marker in no buffer> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#<marker at 9847 in synatax_main.cpp> . -2) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9456) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#<marker at 9800 in synatax_main.cpp> . -2) (#("//" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9413) (#<marker at 8570 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker in no buffer> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) (#<marker at 9762 in synatax_main.cpp> . -2) 9551))) nil (26075 17749 287829 244000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . 9413)) nil (26075 17749 287828 337000) 0 nil])
([nil nil ((9536 . 9537) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -9536) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . 1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) 9537 (9536 . 9537) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -9536) (9535 . 9537) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -9535) (9535 . 9536) (#("," 0 1 (fontified t)) . -9535) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) 9536) nil (26075 17749 287818 793000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 9406) (undo-tree-id6826 . 1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (t 26075 17749 327661 696000)) nil (26075 17777 64882 568000) 0 nil])
([nil nil ((9406 . 9407)) nil (26075 17777 64041 886000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -9448) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) 9449 (t 26075 17777 107662 814000)) nil (26075 17794 697220 775000) 0 nil])
([nil nil ((9449 . 9450) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -9449) (9448 . 9450) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9448) (9448 . 9449)) nil (26075 17794 697218 534000) 0 nil])
([nil nil ((9450 . 9451)) nil (26075 17794 697217 805000) 0 nil])
([nil nil ((9452 . 9454) (#("     " 0 1 (fontified nil) 1 5 (fontified nil)) . 9452) (undo-tree-id6830 . -5) (undo-tree-id6831 . -5) (undo-tree-id6832 . -5) (undo-tree-id6833 . -5) (undo-tree-id6834 . -5) (undo-tree-id6835 . -5) (undo-tree-id6836 . -5) (undo-tree-id6837 . -5) (undo-tree-id6838 . -5) (undo-tree-id6839 . -5) (undo-tree-id6840 . -5) (undo-tree-id6841 . -5) (undo-tree-id6842 . -5) (undo-tree-id6843 . -5) (undo-tree-id6844 . -5) (undo-tree-id6845 . -5) (undo-tree-id6846 . -5) (undo-tree-id6847 . -5) (undo-tree-id6848 . -5) (undo-tree-id6849 . -5) (undo-tree-id6850 . -5) (undo-tree-id6851 . -5) (undo-tree-id6852 . -5) (undo-tree-id6853 . -5) (undo-tree-id6854 . -5) (undo-tree-id6855 . -5) (undo-tree-id6856 . -5) (undo-tree-id6857 . -5) (undo-tree-id6858 . -5) (undo-tree-id6859 . -5) (undo-tree-id6860 . -5) (undo-tree-id6861 . -5) (undo-tree-id6862 . -5) (undo-tree-id6863 . -5) (undo-tree-id6864 . -5) (undo-tree-id6865 . -5) (undo-tree-id6866 . -5) (undo-tree-id6867 . -5) (undo-tree-id6868 . -5) (undo-tree-id6869 . -5) (undo-tree-id6870 . -5) (undo-tree-id6871 . -5) (undo-tree-id6872 . -5) (undo-tree-id6873 . -5) (undo-tree-id6874 . -5) (undo-tree-id6875 . -5) (undo-tree-id6876 . -5) (undo-tree-id6877 . -5) (undo-tree-id6878 . -5) (undo-tree-id6879 . -5) (undo-tree-id6880 . -5) (undo-tree-id6881 . -5) (undo-tree-id6882 . -5) (undo-tree-id6883 . -5) (undo-tree-id6884 . -5) (undo-tree-id6885 . -5) (undo-tree-id6886 . -5) (undo-tree-id6887 . -5) (undo-tree-id6888 . -5) (undo-tree-id6889 . -5) (undo-tree-id6890 . -5) (undo-tree-id6891 . -5) (undo-tree-id6892 . -5) (undo-tree-id6893 . -5) (undo-tree-id6894 . -5) (undo-tree-id6895 . -5) (undo-tree-id6896 . -5) (undo-tree-id6897 . -5) (undo-tree-id6898 . -5) (undo-tree-id6899 . -5) (undo-tree-id6900 . -5) (undo-tree-id6901 . -5) (undo-tree-id6902 . -5) (undo-tree-id6903 . -5) (undo-tree-id6904 . -5) (undo-tree-id6905 . -5) (undo-tree-id6906 . -5) (undo-tree-id6907 . -5) (undo-tree-id6908 . -5) (undo-tree-id6909 . -5) (undo-tree-id6910 . -5) (undo-tree-id6911 . -5) (undo-tree-id6912 . -5) (undo-tree-id6913 . -5) (undo-tree-id6914 . -5) (undo-tree-id6915 . -5) (undo-tree-id6916 . -5) (undo-tree-id6917 . -5) (undo-tree-id6918 . -5) (undo-tree-id6919 . -5) (undo-tree-id6920 . -5) (undo-tree-id6921 . -5) (undo-tree-id6922 . -5) (undo-tree-id6923 . -5) (undo-tree-id6924 . -5) (undo-tree-id6925 . -5) (undo-tree-id6926 . -5) (undo-tree-id6927 . -5) (undo-tree-id6928 . -5) (undo-tree-id6929 . -5) (undo-tree-id6930 . -5) (undo-tree-id6931 . -5) (undo-tree-id6932 . -5) (undo-tree-id6933 . -5) (undo-tree-id6934 . -5) (undo-tree-id6935 . -5) (undo-tree-id6936 . -5) (9457 . 9459)) nil (26075 17794 697214 399000) 0 nil])
([nil nil ((9498 . 9500) (9498 . 9500)) nil (26075 17794 697143 201000) 0 nil])
([nil nil ((9498 . 9499) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -9498) (9497 . 9499) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9497) (9497 . 9498) (9451 . 9456) (#("  " 0 2 (c-in-sws t c-is-sws t fontified nil)) . 9451) (9493 . 9494) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -9493) (9493 . 9494) (#("," 0 1 (fontified t)) . -9493) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) 9494 (9449 . 9450) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -9449) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . 1) (undo-tree-id6944 . -1) (#(";" 0 1 (fontified t)) . -9450) (undo-tree-id6945 . -1) 9451 (#("/" 0 1 (fontified t)) . -9454) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -9455) (undo-tree-id6948 . -1) 9456 (t 26075 17794 737663 526000)) nil (26075 17818 337894 61000) 0 nil])
([nil nil ((9499 . 9500)) nil (26075 17818 337877 645000) 0 nil])
([nil nil ((9497 . 9498) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -9497) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . 1) (undo-tree-id7107 . -1) 9498 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -9498) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . 1) (undo-tree-id7113 . -1) 9499 (#(";" 0 1 (fontified t)) . 9499) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (t 26075 17818 384331 147000)) nil (26075 17870 795405 168000) 0 nil])
([nil nil ((9498 . 9500) (#("      " 0 6 (fontified t)) . 9498) 9541 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -9496) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . 1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) 9497 (9541 . 9542) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -9541) (9541 . 9542) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -9541) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . 1) (undo-tree-id7089 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -9542) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . 1) (undo-tree-id7093 . -1) 9543 (9542 . 9543) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -9542) (9542 . 9543) (9499 . 9505) (#("  	 " 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 9499) (undo-tree-id7094 . -2) (undo-tree-id7095 . -2) (undo-tree-id7096 . -2) (undo-tree-id7097 . -2) (undo-tree-id7098 . 2) 9501 (#("/" 0 1 (fontified t)) . 9501) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face)) . 9501) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1)) nil (26075 17870 795389 550000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 9534) (undo-tree-id7184 . 1) (undo-tree-id7185 . -1) (t 26075 17870 814333 248000)) nil (26075 17914 214402 65000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 9534) (undo-tree-id7182 . 1) (undo-tree-id7183 . -1)) nil (26075 17914 214400 78000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 9534) (undo-tree-id7180 . 1) (undo-tree-id7181 . -1)) nil (26075 17914 214398 54000) 0 nil])
([nil nil ((9538 . 9543) (#("      " 0 1 (c-in-sws t fontified t) 1 5 (c-in-sws t fontified t) 5 6 (fontified t)) . 9538) (undo-tree-id7172 . 6) (undo-tree-id7173 . -5) (undo-tree-id7174 . -5) 9543 (#("/" 0 1 (fontified t)) . -9543) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9544) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) 9545 (9535 . 9536) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9535) (9535 . 9536) (9534 . 9535) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -9534) (9534 . 9535) (9534 . 9535) (#(";" 0 1 (fontified t)) . 9534) (undo-tree-id7179 . 1)) nil (26075 17914 214394 967000) 0 nil])
([nil nil ((apply 30 9583 9877 undo--wrap-and-run-primitive-undo 9583 9877 ((#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9828) (#("     " 0 5 (c-in-sws t fontified t)) . 9783) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -5) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#<marker at 10392 in synatax_main.cpp> . -4) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9788) (#("     " 0 5 (c-in-sws t fontified t)) . 9718) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -5) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#<marker at 10327 in synatax_main.cpp> . -4) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9723) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9648) (#("     " 0 5 (c-in-sws t fontified t)) . 9583) (#<marker at 8570 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -5) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker in no buffer> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#<marker at 9932 in synatax_main.cpp> . -4) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9588) (#<marker (moves after insertion) at 12070 in synatax_main.cpp> . 3) 9907))) nil (26075 17914 214386 940000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -9874) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . 1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) 9875) nil (26075 17914 214383 63000) 0 nil])
([nil nil ((#("V" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . 9881) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (t 26075 17914 287668 336000)) nil (26075 17948 845729 15000) 0 nil])
([nil nil ((9872 . 9873) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -9872) (9872 . 9873) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -9872) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . 1) (undo-tree-id7379 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -9873) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . 1) (undo-tree-id7518 . -1) 9874 (#(";" 0 1 (fontified t)) . -9874) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . 1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) 9875 (#("
  " 0 1 (fontified t) 1 3 (c-in-sws t fontified t c-is-sws t)) . 9875) (undo-tree-id7657 . -3) (undo-tree-id7658 . -3) (undo-tree-id7659 . 2) (undo-tree-id7660 . -1) (undo-tree-id7661 . -3) (undo-tree-id7662 . -3) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -3) (undo-tree-id7666 . -3) (undo-tree-id7667 . -3) (undo-tree-id7668 . -3) (undo-tree-id7669 . -3) (undo-tree-id7670 . -3) (undo-tree-id7671 . -3) (undo-tree-id7672 . -3) (undo-tree-id7673 . -3) (undo-tree-id7674 . -3) (undo-tree-id7675 . -3) (undo-tree-id7676 . -3) (undo-tree-id7677 . -3) (undo-tree-id7678 . -3) (undo-tree-id7679 . -3) (undo-tree-id7680 . -3) (undo-tree-id7681 . -3) (undo-tree-id7682 . -3) (undo-tree-id7683 . -3) (undo-tree-id7684 . -3) (undo-tree-id7685 . -3) (undo-tree-id7686 . -3) (undo-tree-id7687 . -3) (undo-tree-id7688 . -3) (undo-tree-id7689 . -3) (undo-tree-id7690 . -3) (undo-tree-id7691 . -3) (undo-tree-id7692 . -3) (undo-tree-id7693 . -3) (undo-tree-id7694 . -3) (undo-tree-id7695 . -3) (undo-tree-id7696 . -3) (undo-tree-id7697 . -3) (undo-tree-id7698 . -3) (undo-tree-id7699 . -3) (undo-tree-id7700 . -3) (undo-tree-id7701 . -3) (undo-tree-id7702 . -3) (undo-tree-id7703 . -3) (undo-tree-id7704 . -3) (undo-tree-id7705 . -3) (undo-tree-id7706 . -3) (undo-tree-id7707 . -3) (undo-tree-id7708 . -3) (undo-tree-id7709 . -3) (undo-tree-id7710 . -3) (undo-tree-id7711 . -3) (undo-tree-id7712 . -3) (undo-tree-id7713 . -3) (undo-tree-id7714 . -3) (undo-tree-id7715 . -3) (undo-tree-id7716 . -3) (undo-tree-id7717 . -3) (undo-tree-id7718 . -3) (undo-tree-id7719 . -3) (undo-tree-id7720 . -3) (undo-tree-id7721 . -3) (undo-tree-id7722 . -3) (undo-tree-id7723 . -3) (undo-tree-id7724 . -3) (undo-tree-id7725 . -3) (undo-tree-id7726 . -3) (undo-tree-id7727 . -3) (undo-tree-id7728 . -3) (undo-tree-id7729 . -3) (undo-tree-id7730 . -3) (undo-tree-id7731 . -3) (undo-tree-id7732 . -3) (undo-tree-id7733 . -3) (undo-tree-id7734 . -3) (undo-tree-id7735 . -3) (undo-tree-id7736 . -3) (undo-tree-id7737 . -3) (undo-tree-id7738 . -3) (undo-tree-id7739 . -3) (undo-tree-id7740 . -3) (undo-tree-id7741 . -3) (undo-tree-id7742 . -3) (undo-tree-id7743 . -3) (undo-tree-id7744 . -3) (undo-tree-id7745 . -3) (undo-tree-id7746 . -3) (undo-tree-id7747 . -3) (undo-tree-id7748 . -3) (undo-tree-id7749 . -3) (undo-tree-id7750 . -3) (undo-tree-id7751 . -3) (undo-tree-id7752 . -3) (undo-tree-id7753 . -3) (undo-tree-id7754 . -3) (undo-tree-id7755 . -3) (undo-tree-id7756 . -3) (undo-tree-id7757 . -3) (undo-tree-id7758 . -3) (undo-tree-id7759 . -3) (undo-tree-id7760 . -3) (undo-tree-id7761 . -3) (undo-tree-id7762 . -3) (undo-tree-id7763 . -3) (undo-tree-id7764 . -3) (undo-tree-id7765 . -3) (undo-tree-id7766 . -3) (undo-tree-id7767 . -3) (undo-tree-id7768 . -3) (undo-tree-id7769 . -3) (undo-tree-id7770 . -3) (undo-tree-id7771 . -3) (undo-tree-id7772 . -3) (undo-tree-id7773 . -3) (undo-tree-id7774 . -3) (undo-tree-id7775 . -3) (undo-tree-id7776 . -3) (undo-tree-id7777 . -3) (undo-tree-id7778 . -3) (undo-tree-id7779 . -3) (undo-tree-id7780 . -3) (undo-tree-id7781 . -3) (undo-tree-id7782 . -3) (undo-tree-id7783 . -3) (undo-tree-id7784 . -3) (undo-tree-id7785 . -3) (undo-tree-id7786 . -3) (undo-tree-id7787 . -3) (undo-tree-id7788 . -3) (undo-tree-id7789 . -3) (undo-tree-id7790 . -3) (undo-tree-id7791 . -3) (undo-tree-id7792 . -3) (undo-tree-id7793 . -3) (undo-tree-id7794 . -3) (undo-tree-id7795 . -3) (undo-tree-id7796 . -3) 9878 (#("/" 0 1 (fontified t)) . -9878) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -9879) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -9880) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) 9881) nil (26075 17948 845631 654000) 0 nil])
([nil nil ((apply 9 9875 10030 undo--wrap-and-run-primitive-undo 9875 10030 ((#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9981) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9929) (#("// " 0 1 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -9877) 10039))) nil (26075 17948 844431 775000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -10027) (undo-tree-id7186 . -1) (undo-tree-id7187 . 1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) 10028) nil (26075 17948 844428 186000) 0 nil])
([nil nil ((apply 36 11077 11377 undo--wrap-and-run-primitive-undo 11077 11377 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11375) (#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11357) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11308) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11279) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11244) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11240) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11222) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11200) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11170) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11153) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11108) (#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11079) 11413)) (t 26075 17948 864336 397000)) nil (26075 17965 602807 121000) 0 nil])
([nil nil ((11106 . 11108) (#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . 11106) (undo-tree-id8340 . -2) (undo-tree-id8341 . -2) (undo-tree-id8342 . -2) (undo-tree-id8343 . -2) (undo-tree-id8344 . -2) (undo-tree-id8345 . -2) (undo-tree-id8346 . -2) (undo-tree-id8347 . -2) (undo-tree-id8348 . -2) (undo-tree-id8349 . -2) (undo-tree-id8350 . -2) (undo-tree-id8351 . -2) (undo-tree-id8352 . -2) (undo-tree-id8353 . -2) (undo-tree-id8354 . -2) (undo-tree-id8355 . -2) (undo-tree-id8356 . -2) (undo-tree-id8357 . -2) (undo-tree-id8358 . -2) (undo-tree-id8359 . -2) (undo-tree-id8360 . -2) (undo-tree-id8361 . -2) (undo-tree-id8362 . -2) (undo-tree-id8363 . -2) (undo-tree-id8364 . -2) (undo-tree-id8365 . -2) (undo-tree-id8366 . -2) (undo-tree-id8367 . -2) (undo-tree-id8368 . -2) (undo-tree-id8369 . -2) (undo-tree-id8370 . -2) (undo-tree-id8371 . -2) (undo-tree-id8372 . -2) (undo-tree-id8373 . -2) (undo-tree-id8374 . -2) (undo-tree-id8375 . -2) (undo-tree-id8376 . -2) (undo-tree-id8377 . -2) (undo-tree-id8378 . -2) (undo-tree-id8379 . -2) (undo-tree-id8380 . -2) (undo-tree-id8381 . -2) (undo-tree-id8382 . -2) (undo-tree-id8383 . -2) (undo-tree-id8384 . -2) (undo-tree-id8385 . -2) (undo-tree-id8386 . -2) (undo-tree-id8387 . -2) (undo-tree-id8388 . -2) (undo-tree-id8389 . -2) (undo-tree-id8390 . -2) (undo-tree-id8391 . -2) (undo-tree-id8392 . -2) (undo-tree-id8393 . -2) (undo-tree-id8394 . -2) (undo-tree-id8395 . -2) (undo-tree-id8396 . -2) (undo-tree-id8397 . -2) (undo-tree-id8398 . -2) (undo-tree-id8399 . -2) (undo-tree-id8400 . -2) (undo-tree-id8401 . -2) (undo-tree-id8402 . -2) (undo-tree-id8403 . -2) (undo-tree-id8404 . -2) (undo-tree-id8405 . -2) (undo-tree-id8406 . -2) (undo-tree-id8407 . -2) (undo-tree-id8408 . -2) (undo-tree-id8409 . -2) (undo-tree-id8410 . -2) (undo-tree-id8411 . -2) (undo-tree-id8412 . -2) (undo-tree-id8413 . -2) (undo-tree-id8414 . -2) (undo-tree-id8415 . -2) (undo-tree-id8416 . -2) (undo-tree-id8417 . -2) (undo-tree-id8418 . -2) (undo-tree-id8419 . -2) (undo-tree-id8420 . -2) (undo-tree-id8421 . -2) (undo-tree-id8422 . -2) (undo-tree-id8423 . -2) (undo-tree-id8424 . -2) (undo-tree-id8425 . -2) (undo-tree-id8426 . -2) (undo-tree-id8427 . -2) (undo-tree-id8428 . -2) (undo-tree-id8429 . -2) (undo-tree-id8430 . -2) (undo-tree-id8431 . -2) (undo-tree-id8432 . -2) (undo-tree-id8433 . -2) (undo-tree-id8434 . -2) (undo-tree-id8435 . -2) (undo-tree-id8436 . -2) (undo-tree-id8437 . -2) (undo-tree-id8438 . -2) (undo-tree-id8439 . -2) (undo-tree-id8440 . -2) (undo-tree-id8441 . -2) (undo-tree-id8442 . -2) (undo-tree-id8443 . -2) (undo-tree-id8444 . -2) (undo-tree-id8445 . -2) (undo-tree-id8446 . -2) (undo-tree-id8447 . -2) (undo-tree-id8448 . -2) (undo-tree-id8449 . -2) (undo-tree-id8450 . -2) (undo-tree-id8451 . -2) (undo-tree-id8452 . -2) (undo-tree-id8453 . -2) (undo-tree-id8454 . -2) (undo-tree-id8455 . -2) (undo-tree-id8456 . -2) (undo-tree-id8457 . -2) (undo-tree-id8458 . -2) (undo-tree-id8459 . -2) (undo-tree-id8460 . -2) (undo-tree-id8461 . -2) (undo-tree-id8462 . -2) (undo-tree-id8463 . -2) (undo-tree-id8464 . -2) (undo-tree-id8465 . -2) (undo-tree-id8466 . -2) (undo-tree-id8467 . -2) (undo-tree-id8468 . -2) (undo-tree-id8469 . -2) (undo-tree-id8470 . -2) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (undo-tree-id8474 . -2) (undo-tree-id8475 . -2) 11108 (t 26075 17965 621003 739000)) nil (26075 17985 474991 453000) 0 nil])
([nil nil ((11349 . 11351) (t 26075 17985 514337 873000)) nil (26075 18068 379381 517000) 0 nil])
([nil nil ((apply -3 11304 11369 undo--wrap-and-run-primitive-undo 11304 11369 ((11308 . 11311) 11355)) (t 26075 18068 401007 867000)) nil (26075 18205 386591 645000) 0 nil])
([nil nil ((8334 . 8336) (8333 . 8334) (8324 . 8333) (#("bnf_token" 0 9 (fontified nil)) . -8324) (8324 . 8333) (8322 . 8324) (nil fontified nil 8311 . 8322) (nil face (rainbow-delimiters-depth-1-face) 8311 . 8322) (8311 . 8322) (#("to" 0 2 (fontified nil)) . 8311) (nil fontified nil 8311 . 8313) (nil face (rainbow-delimiters-depth-1-face) 8311 . 8313) (8311 . 8313) (#("token_class" 0 11 (fontified nil)) . -8311) (nil fontified nil 8311 . 8322) (nil face (rainbow-delimiters-depth-1-face) 8311 . 8322) (8311 . 8322) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -8311) (undo-tree-id8476 . -2) (undo-tree-id8477 . -2) 8313 (8311 . 8313) (#("y" 0 1 (fontified t)) . -8311) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) 8312 (8311 . 8312)) nil (26075 18205 386588 121000) 0 nil])
([nil nil ((10172 . 10173) (#("S" 0 1 (fontified t)) . 10172) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (t 26075 18205 407680 33000)) nil (26075 18290 921806 458000) 0 nil])
([nil nil ((10173 . 10174)) nil (26075 18290 921763 356000) 0 nil])
([nil nil ((apply -3 11330 11398 undo--wrap-and-run-primitive-undo 11330 11398 ((11334 . 11337) 11384)) (t 26075 18290 941016 808000)) nil (26075 18308 728493 636000) 0 nil])
([nil nil ((apply 3 11330 11384 undo--wrap-and-run-primitive-undo 11330 11384 ((#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -11334) 11387))) nil (26075 18308 728492 636000) 0 nil])
([nil nil ((apply 3 11330 11381 undo--wrap-and-run-primitive-undo 11330 11381 ((#("// " 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11334) 11384))) nil (26075 18308 728489 204000) 0 nil])
([nil nil ((11463 . 11469) (11462 . 11464) (11458 . 11462) (11448 . 11458) (#("b" 0 1 (c-is-sws t fontified t)) . -11448) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (#("r" 0 1 (fontified t)) . -11449) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (#("e" 0 1 (fontified t)) . -11450) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (#("a" 0 1 (fontified t)) . -11451) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (#("k" 0 1 (fontified t face font-lock-keyword-face)) . -11452) (undo-tree-id8540 . -1) 11453 (11442 . 11443) (11439 . 11440) (11438 . 11440) (11435 . 11438) (11434 . 11436) (11424 . 11434) (11418 . 11424) (11417 . 11418) (11413 . 11416) (11412 . 11413) (11410 . 11412) (11409 . 11410) (11408 . 11409) (11407 . 11408) (11405 . 11407) (11403 . 11405) (11401 . 11403) (#("e" 0 1 (fontified t)) . -11401) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) 11402 (11393 . 11402) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -11393) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (#("=" 0 1 (fontified t)) . -11394) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) 11395 (11389 . 11395) (11388 . 11390) (11385 . 11388) (11380 . 11385) (t 26075 18308 747684 191000) 11350) nil (26075 18517 477998 330000) 0 nil])
([nil nil ((#("    ret=this->operator()(bnf_st[bnf_st.size()-1]);
    for(int i=ret.size()-1;i>=0;i--) bnf_st.push_back(ret[i]);
" 0 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t face font-lock-keyword-face) 16 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t face (rainbow-delimiters-depth-3-face)) 24 25 (fontified t face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-4-face)) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-5-face)) 44 45 (fontified t face (rainbow-delimiters-depth-5-face)) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 49 (fontified t face (rainbow-delimiters-depth-3-face)) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t face font-lock-keyword-face) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 60 (fontified t face font-lock-type-face) 60 61 (fontified t face font-lock-type-face) 61 62 (fontified t c-type c-decl-id-start face font-lock-type-face) 62 63 (fontified t) 63 64 (fontified t face font-lock-variable-name-face) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-4-face)) 74 75 (fontified t face (rainbow-delimiters-depth-4-face)) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t face (rainbow-delimiters-depth-3-face)) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-3-face)) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-4-face)) 109 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-4-face)) 111 112 (fontified t face (rainbow-delimiters-depth-3-face)) 112 113 (fontified t) 113 114 (fontified t)) . 11330) (undo-tree-id8995 . -75) (undo-tree-id8996 . -113) (undo-tree-id8997 . 1) (undo-tree-id8998 . -75) (undo-tree-id8999 . -24) (undo-tree-id9000 . -114) (undo-tree-id9001 . -24) (undo-tree-id9002 . -24) (undo-tree-id9003 . 1) (undo-tree-id9004 . -24) (undo-tree-id9005 . -75) (undo-tree-id9006 . 90) (undo-tree-id9007 . -25) (undo-tree-id9008 . 66) (undo-tree-id9009 . -49) 11354 (t 26075 18387 707687 373000)) nil (26075 18531 883557 480000) 0 nil] [nil nil ((#("-1;i>=0;i--) bnf_st.push_back(ret[i]);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-3-face)) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-4-face)) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-4-face)) 36 37 (fontified t face (rainbow-delimiters-depth-3-face)) 37 38 (fontified t)) . 11405) (undo-tree-id8547 . -37) (undo-tree-id8548 . -38) (undo-tree-id8549 . -38) (undo-tree-id8550 . -38) (undo-tree-id8551 . -38) (t 26075 18387 707687 373000)) ((11405 . 11443)) (26075 18514 691860 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11195 . 11196) (#("
" 0 1 (fontified nil)) . -11305) (11191 . 11306)) nil (26075 18531 883545 666000) 0 nil])
([nil nil ((11405 . 11406)) ((#("k" 0 1 (fontified t)) . 11405) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1)) (26075 18514 688425 618000) 0 nil])
([nil nil ((11241 . 11243) (#("    " 0 4 (fontified t)) . 11241) (undo-tree-id8555 . -2) (undo-tree-id8556 . -2) (undo-tree-id8557 . -2) (undo-tree-id8558 . -2) (undo-tree-id8559 . -2) (undo-tree-id8560 . -2) (undo-tree-id8561 . -2) (undo-tree-id8562 . -2) (undo-tree-id8563 . -2) (undo-tree-id8564 . -2) (undo-tree-id8565 . -2) (undo-tree-id8566 . -2) (undo-tree-id8567 . -2) (undo-tree-id8568 . -2) (undo-tree-id8569 . -2) (undo-tree-id8570 . -2) (undo-tree-id8571 . -2) (undo-tree-id8572 . -2) (undo-tree-id8573 . -2) (undo-tree-id8574 . -2) (undo-tree-id8575 . -2) (undo-tree-id8576 . -2) (undo-tree-id8577 . -2) (undo-tree-id8578 . -2) (undo-tree-id8579 . -2) (undo-tree-id8580 . -2) (undo-tree-id8581 . -2) 11243 (11191 . 11194) (#("  " 0 2 (fontified t)) . 11191) (undo-tree-id8582 . -2) (undo-tree-id8583 . -2) (undo-tree-id8584 . -2) (undo-tree-id8585 . -2) (undo-tree-id8586 . -2) (undo-tree-id8587 . -2) (undo-tree-id8588 . -2) (undo-tree-id8589 . -2) (undo-tree-id8590 . -2) (undo-tree-id8591 . -2) (undo-tree-id8592 . -2) (undo-tree-id8593 . -2) (undo-tree-id8594 . -2) (undo-tree-id8595 . -2) (undo-tree-id8596 . -2) (undo-tree-id8597 . -2) (undo-tree-id8598 . -2) (undo-tree-id8599 . -2) (undo-tree-id8600 . -2) (undo-tree-id8601 . -2) (undo-tree-id8602 . -2) (undo-tree-id8603 . -2) (undo-tree-id8604 . -2) (undo-tree-id8605 . -2) (undo-tree-id8606 . -2) (undo-tree-id8607 . -2) (undo-tree-id8608 . -2) (undo-tree-id8609 . -2) (undo-tree-id8610 . -2) (undo-tree-id8611 . -2) (undo-tree-id8612 . -2) (undo-tree-id8613 . -2) (undo-tree-id8614 . -2) (undo-tree-id8615 . -2) (undo-tree-id8616 . -2) (undo-tree-id8617 . -2) (undo-tree-id8618 . -2) (undo-tree-id8619 . -2) (undo-tree-id8620 . -2) (undo-tree-id8621 . -2) (undo-tree-id8622 . -2) (undo-tree-id8623 . -2) (undo-tree-id8624 . -2) (undo-tree-id8625 . -2) (undo-tree-id8626 . -2) (undo-tree-id8627 . -2) (undo-tree-id8628 . -2) (undo-tree-id8629 . -2) (undo-tree-id8630 . -2) (undo-tree-id8631 . -2) (undo-tree-id8632 . -2) (undo-tree-id8633 . -2) (undo-tree-id8634 . -2) (undo-tree-id8635 . -2) (undo-tree-id8636 . -2) (undo-tree-id8637 . -2) (undo-tree-id8638 . -2) (undo-tree-id8639 . -2) (undo-tree-id8640 . -2) (undo-tree-id8641 . -2) (undo-tree-id8642 . -2) (undo-tree-id8643 . -2) (undo-tree-id8644 . -2) (undo-tree-id8645 . -2) (undo-tree-id8646 . -2) (undo-tree-id8647 . -2) (undo-tree-id8648 . -2) (undo-tree-id8649 . -2) (undo-tree-id8650 . -2) (undo-tree-id8651 . -2) (undo-tree-id8652 . -2) (undo-tree-id8653 . -2) (undo-tree-id8654 . -2) (undo-tree-id8655 . -2) (undo-tree-id8656 . -2) (undo-tree-id8657 . -2) (undo-tree-id8658 . -2) (undo-tree-id8659 . -2) (undo-tree-id8660 . -2) (undo-tree-id8661 . -2) (undo-tree-id8662 . -2) (undo-tree-id8663 . -2) (undo-tree-id8664 . -2) 11193 (11190 . 11193) (#("

    " 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . 11190) (undo-tree-id8665 . -2) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -2) (undo-tree-id8669 . -2) (undo-tree-id8670 . -6) (undo-tree-id8671 . -6) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -6) (undo-tree-id8805 . -6) (undo-tree-id8806 . -6) (undo-tree-id8807 . -6) (undo-tree-id8808 . -6) (undo-tree-id8809 . -6) (undo-tree-id8810 . -6) (undo-tree-id8811 . -6) (undo-tree-id8812 . -6) (undo-tree-id8813 . -6) (undo-tree-id8814 . -6) (undo-tree-id8815 . -6) (undo-tree-id8816 . -6) (undo-tree-id8817 . -6) (undo-tree-id8818 . -6) (undo-tree-id8819 . -6) (undo-tree-id8820 . -6) (undo-tree-id8821 . -6) (undo-tree-id8822 . -6) (undo-tree-id8823 . -6) (undo-tree-id8824 . -6) (undo-tree-id8825 . -6) (undo-tree-id8826 . -6) (undo-tree-id8827 . -6) (undo-tree-id8828 . -6) (undo-tree-id8829 . -6) (undo-tree-id8830 . -6) (undo-tree-id8831 . -6) (undo-tree-id8832 . -6) (undo-tree-id8833 . -6) (undo-tree-id8834 . -6) (undo-tree-id8835 . -6) (undo-tree-id8836 . -6) (undo-tree-id8837 . -6) (undo-tree-id8838 . -6) (undo-tree-id8839 . -6) (undo-tree-id8840 . -6) (undo-tree-id8841 . -6) (undo-tree-id8842 . -6) (undo-tree-id8843 . -6) (undo-tree-id8844 . -6) (undo-tree-id8845 . -6) (undo-tree-id8846 . -6) (undo-tree-id8847 . -6) (undo-tree-id8848 . -6) (undo-tree-id8849 . -6) (undo-tree-id8850 . -6) (undo-tree-id8851 . -6) (undo-tree-id8852 . -6) (undo-tree-id8853 . -6) (undo-tree-id8854 . -6) (undo-tree-id8855 . -6) (undo-tree-id8856 . -6) (undo-tree-id8857 . -6) (undo-tree-id8858 . -6) (undo-tree-id8859 . -6) (undo-tree-id8860 . -6) (undo-tree-id8861 . -6) (undo-tree-id8862 . -6) (undo-tree-id8863 . -6) (undo-tree-id8864 . -6) (undo-tree-id8865 . -6) (undo-tree-id8866 . -6) (undo-tree-id8867 . -6) (undo-tree-id8868 . -6) (undo-tree-id8869 . -6) (undo-tree-id8870 . -6) (undo-tree-id8871 . -6) (undo-tree-id8872 . -6) (undo-tree-id8873 . -6) (undo-tree-id8874 . -6) (undo-tree-id8875 . -6) (undo-tree-id8876 . -6) (undo-tree-id8877 . -6) (undo-tree-id8878 . -6) (undo-tree-id8879 . -6) (undo-tree-id8880 . -6) (undo-tree-id8881 . -6) (undo-tree-id8882 . -6) (undo-tree-id8883 . -6) (undo-tree-id8884 . -6) (undo-tree-id8885 . -6) (undo-tree-id8886 . -6) (undo-tree-id8887 . -6) (undo-tree-id8888 . -6) (undo-tree-id8889 . -6) (undo-tree-id8890 . -6) (undo-tree-id8891 . -6) (undo-tree-id8892 . -6) (undo-tree-id8893 . -6) (undo-tree-id8894 . -6) (undo-tree-id8895 . -6) (undo-tree-id8896 . -6) (undo-tree-id8897 . -6) (undo-tree-id8898 . -6) (undo-tree-id8899 . -6) (undo-tree-id8900 . -6) (undo-tree-id8901 . -6) (undo-tree-id8902 . -6) (undo-tree-id8903 . -6) (undo-tree-id8904 . -6) (undo-tree-id8905 . -6) (undo-tree-id8906 . -6) (undo-tree-id8907 . -6) (undo-tree-id8908 . -6) (undo-tree-id8909 . -6) (undo-tree-id8910 . -6) (undo-tree-id8911 . -6) (undo-tree-id8912 . -6) (undo-tree-id8913 . -6) (undo-tree-id8914 . -6) (undo-tree-id8915 . -6) (undo-tree-id8916 . -6) (undo-tree-id8917 . -6) (undo-tree-id8918 . -6) (undo-tree-id8919 . -6) (undo-tree-id8920 . -6) (undo-tree-id8921 . -6) (undo-tree-id8922 . -6) (undo-tree-id8923 . -6) (undo-tree-id8924 . -6) (undo-tree-id8925 . -6) (undo-tree-id8926 . -6) (undo-tree-id8927 . -6) (undo-tree-id8928 . -6) (undo-tree-id8929 . -6) (undo-tree-id8930 . -6) (undo-tree-id8931 . -6) (undo-tree-id8932 . -6) (undo-tree-id8933 . -6) (undo-tree-id8934 . -6) (undo-tree-id8935 . -6) (undo-tree-id8936 . -6) (undo-tree-id8937 . -6) (undo-tree-id8938 . -6) (undo-tree-id8939 . -6) (undo-tree-id8940 . -6) (undo-tree-id8941 . -6) (undo-tree-id8942 . -6) (undo-tree-id8943 . -6) (undo-tree-id8944 . -6) (undo-tree-id8945 . -6) (undo-tree-id8946 . -6) (undo-tree-id8947 . -6) (undo-tree-id8948 . -6) (undo-tree-id8949 . -6) (undo-tree-id8950 . -6) (undo-tree-id8951 . -6) (undo-tree-id8952 . -6) (undo-tree-id8953 . -6) (undo-tree-id8954 . -6) (undo-tree-id8955 . -6) (undo-tree-id8956 . -6) (undo-tree-id8957 . -6) (undo-tree-id8958 . -6) (undo-tree-id8959 . -6) (undo-tree-id8960 . -6) (undo-tree-id8961 . -6) (undo-tree-id8962 . -6) (undo-tree-id8963 . -6) (undo-tree-id8964 . -6) (undo-tree-id8965 . -6) (undo-tree-id8966 . -2) (undo-tree-id8967 . -6) (undo-tree-id8968 . -6) (undo-tree-id8969 . -6) (undo-tree-id8970 . -6) (undo-tree-id8971 . -6) (undo-tree-id8972 . -6) (undo-tree-id8973 . -6) (undo-tree-id8974 . -6) (undo-tree-id8975 . -6) (undo-tree-id8976 . -6) (undo-tree-id8977 . -6) (undo-tree-id8978 . -6) (undo-tree-id8979 . -6) (undo-tree-id8980 . -6) (undo-tree-id8981 . -6) (undo-tree-id8982 . -6) (undo-tree-id8983 . -6) (undo-tree-id8984 . -6) (undo-tree-id8985 . -6) (undo-tree-id8986 . -6) (undo-tree-id8987 . -6) (undo-tree-id8988 . -6) (undo-tree-id8989 . -6) (undo-tree-id8990 . -6) (undo-tree-id8991 . -6) (undo-tree-id8992 . -6) (undo-tree-id8993 . -6) (undo-tree-id8994 . -6) 11196) nil (26075 18531 883531 699000) 0 nil])
nil
([nil nil ((11524 . 11525) (#("r" 0 1 (fontified t)) . -11523) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) 11524 (11520 . 11524) (11519 . 11521) (11516 . 11519) (11508 . 11516) (11503 . 11508) (11502 . 11503) (11500 . 11502) (11498 . 11500) (11489 . 11498) (#("bnf_token" 0 9 (fontified nil)) . -11489) (11489 . 11498) (#("bn" 0 1 (fontified t) 1 2 (fontified t)) . -11489) (undo-tree-id9012 . -2) (undo-tree-id9013 . -2) 11491 (11489 . 11491) (11487 . 11489) (11476 . 11487) (#("to" 0 2 (fontified nil)) . 11476) (11476 . 11478) (#("token_class" 0 11 (fontified nil)) . -11476) (11476 . 11487) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -11476) (undo-tree-id9014 . -2) (undo-tree-id9015 . -2) 11478 (11476 . 11478) (11469 . 11471) (#("    " 0 4 (fontified t)) . 11469) 11478 (11473 . 11478) (11468 . 11473) (#("    " 0 4 (fontified t)) . 11468) (undo-tree-id9016 . -4) (undo-tree-id9017 . -4) 11472 (11467 . 11472) (t 26075 18531 907693 160000) 11442) nil (26075 18712 345222 390000) 0 nil])
([nil nil ((11523 . 11526) (11520 . 11523) (#("ret" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11520) (undo-tree-id9018 . -2) (undo-tree-id9019 . -3) (undo-tree-id9020 . -3) (t 26075 18712 371033 741000)) nil (26075 18874 358413 773000) 0 nil])
([nil nil ((11099 . 11100) (t 26075 18874 391040 253000)) nil (26075 19928 265771 45000) 0 nil])
([nil nil ((11100 . 11102)) nil (26075 19928 265769 992000) 0 nil])
([nil nil ((nil fontified nil 11100 . 11103) (11100 . 11103) (#("st" 0 2 (fontified nil)) . 11100) (nil fontified nil 11100 . 11102) (11100 . 11102) (#("std" 0 3 (fontified nil)) . -11100) (nil fontified nil 11100 . 11103) (11100 . 11103) (#("st" 0 1 (fontified t) 1 2 (fontified t)) . -11100) (undo-tree-id9023 . -2) (undo-tree-id9024 . -2) 11102) nil (26075 19928 265768 767000) 0 nil])
([nil nil ((11103 . 11105)) nil (26075 19928 265766 370000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11112 11130 nil nil nil t nil)) nil 14 nil #s(yas--field 1 11112 11130 nil nil nil t nil) nil nil)) (11105 . 11124) (#("vector<${1:typename Tp}>" 0 24 (fontified nil)) . 11105) (11105 . 11129) (#("vector<typename Tp, typename Alloc>" 0 6 (fontified nil) 6 7 (syntax-table (4 . 62) fontified nil) 7 18 (fontified nil) 18 19 (c-type c-<>-arg-sep fontified nil) 19 34 (fontified nil) 34 35 (syntax-table (5 . 60) fontified nil)) . -11105) (11105 . 11140)) nil (26075 19928 265765 615000) 0 nil])
([nil nil ((11113 . 11114) (#("typename Tp" 0 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil) 9 11 (fontified nil face font-lock-type-face)) . 11113) (11112 . 11113)) nil (26075 19928 265764 517000) 0 nil])
([nil nil ((nil fontified nil 11112 . 11130) (nil face (rainbow-delimiters-depth-2-face) 11112 . 11130) (11112 . 11130) (#("to" 0 2 (fontified nil)) . 11112) (nil fontified nil 11112 . 11114) (nil face (rainbow-delimiters-depth-2-face) 11112 . 11114) (11112 . 11114) (#("token_class::token" 0 18 (fontified nil)) . -11112) (nil fontified nil 11112 . 11130) (nil face (rainbow-delimiters-depth-2-face) 11112 . 11130) (11112 . 11130) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -11112) (undo-tree-id9021 . -2) (undo-tree-id9022 . -2) 11114) nil (26075 19928 265762 833000) 0 nil])
([nil nil ((apply yas--snippet-revive 11105 11131 #s(yas--snippet nil (#s(yas--field 1 11112 11130 nil nil nil t nil)) nil 14 nil #s(yas--field 1 11112 11130 nil nil nil t nil) nil nil))) nil (26075 19928 265749 582000) 0 nil])
([nil nil ((11131 . 11137)) nil (26075 19928 265745 5000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11576) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) 11577 (11575 . 11577) (11571 . 11575) (11570 . 11571) (11504 . 11509) (11503 . 11504) (t 26075 19928 284415 982000)) nil (26075 20349 55083 900000) 0 nil])
([nil nil ((apply -6 11513 11592 undo--wrap-and-run-primitive-undo 11513 11592 ((11553 . 11556) (11515 . 11518) 11513)) (t 26075 20349 87766 271000)) nil (26075 20416 550533 383000) 0 nil])
([nil nil ((apply 6 11513 11579 undo--wrap-and-run-primitive-undo 11513 11579 ((#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11550) (#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11515) 11585)) (t 26075 20416 574435 651000)) nil (26075 20485 575797 833000) 0 nil])
([nil nil ((11034 . 11035) (t 26075 20485 601105 89000)) nil (26075 20676 257888 397000) 0 nil])
([nil nil (11034) nil (26075 20676 257887 512000) 0 nil])
([nil nil ((11016 . 11022) (#("J" 0 1 (fontified t face font-lock-type-face)) . -11016) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) 11017 (11016 . 11017) (11015 . 11016) (11012 . 11015) (11012 . 11013) (#("O" 0 1 (fontified t face font-lock-constant-face)) . -11012) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) 11013 (11012 . 11013)) nil (26075 20676 257884 363000) 0 nil])
([nil nil (11149) nil (26075 20696 998457 712000) 0 nil])
([nil nil ((11015 . 11016) (t 26075 20676 307779 446000)) nil (26075 20696 998454 436000) 0 nil])
([nil nil ((#("  bnf_st.pop_back();
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 19 (fontified t face (rainbow-delimiters-depth-2-face)) 19 20 (fontified t) 20 21 (fontified t)) . 11383) (undo-tree-id9112 . -20) (undo-tree-id9113 . -3) (undo-tree-id9114 . -3) 11386 (t 26075 20697 27780 282000)) nil (26075 20812 674227 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11293 . 11294) (#("
" 0 1 (fontified nil)) . -11312) (11291 . 11313) 11243) nil (26075 20812 674216 986000) 0 nil])
([nil nil ((11622 . 11623) (11621 . 11623) (11620 . 11622) (11613 . 11620) (11612 . 11613) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -11612) (11612 . 11613) (11610 . 11612) (11609 . 11610) (11605 . 11609) (#("s" 0 1 (fontified t)) . -11605) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (#("i" 0 1 (fontified t)) . -11606) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (#("z" 0 1 (fontified t)) . -11607) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (#("e" 0 1 (fontified t)) . -11608) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) 11609 (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -11609) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 11610) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -11610) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . 1) (undo-tree-id9136 . -1) (#(">" 0 1 (fontified t)) . -11611) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (#("1" 0 1 (fontified t)) . -11612) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) 11613 (11612 . 11613) (#("0" 0 1 (fontified t)) . -11612) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) 11613 (11612 . 11613) (#(">" 0 1 (fontified t)) . -11612) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) 11613 (11611 . 11613) (11609 . 11611) (11599 . 11609) (11598 . 11600) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -11598) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (nil syntax-table nil 11599 . 11600) (nil syntax-table (1) 11598 . 11599) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 11599) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -11599) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . 11600) (11599 . 11601) (11598 . 11600) (11596 . 11598) (#("o" 0 1 (fontified t)) . -11596) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) 11597 (11596 . 11597) (11591 . 11596) (t 26075 20812 694451 601000)) nil (26075 21003 535919 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11619)) nil (26075 21003 535899 256000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11618) (undo-tree-id9122 . -1)) nil (26075 21003 535898 828000) 0 nil])
([nil nil ((11620 . 11626) (#("     " 0 5 (fontified nil)) . -11620) (undo-tree-id9121 . -5) (#(" " 0 1 (fontified t)) . 11625) (11629 . 11633) 11630 (11619 . 11626) 11618) nil (26075 21003 535897 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11628 . 11629) (#("
" 0 1 (fontified nil)) . -11687) (11626 . 11688) 11625) nil (26075 21003 535895 488000) 0 nil])
([nil nil ((11627 . 11633) (#("  " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -11627) (undo-tree-id9119 . -2) (undo-tree-id9120 . -2) 11629) nil (26075 21003 535894 379000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t) 6 7 (fontified t)) . 11620) (undo-tree-id9115 . -6) (undo-tree-id9116 . 1) (undo-tree-id9117 . -6) (undo-tree-id9118 . -5) 11625) nil (26075 21003 535889 935000) 0 nil])
([nil nil ((11717 . 11718) (11709 . 11716) (11707 . 11709) (11706 . 11708) (11699 . 11706) (11691 . 11699) (11684 . 11691) (t 26075 21003 557792 620000) 11683) nil (26075 21208 843497 573000) 0 nil])
([nil nil ((11143 . 11144) (t 26075 21208 864467 543000)) nil (26075 21217 34610 821000) 0 nil])
([nil nil ((11754 . 11755) (11748 . 11753) (11747 . 11748) (11743 . 11747) (#("d" 0 1 (fontified t)) . -11743) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) 11744 (11741 . 11744) (11740 . 11742) (11735 . 11740) (#("J" 0 1 (fontified t)) . -11735) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) 11736 (11733 . 11736) (11726 . 11733) (11719 . 11726) (t 26075 21217 57801 201000) 11718) nil (26075 21321 734745 230000) 0 nil])
([nil nil ((11806 . 11813) (#("
      " 0 1 (fontified t) 1 7 (fontified t)) . 11806) (undo-tree-id9382 . -7) 11813 (11813 . 11815) (11806 . 11813) (11802 . 11805) (11801 . 11802) (11798 . 11801) (#("r" 0 1 (fontified t)) . -11798) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (#("e" 0 1 (fontified t)) . -11799) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) 11800 (11797 . 11800) (11791 . 11797) (#("o" 0 1 (fontified t)) . -11791) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (#("p" 0 1 (fontified t)) . -11792) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) 11793 (11790 . 11793) (11789 . 11790) (#(">" 0 1 (fontified t)) . -11789) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) 11790 (11789 . 11790) (11786 . 11789) (11785 . 11786) (11775 . 11785) (11774 . 11775) (#("." 0 1 (fontified t)) . -11774) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) 11775 (11772 . 11775) (11771 . 11773) (11769 . 11771) (11764 . 11769) (#("    " 0 4 (fontified t)) . 11764) (undo-tree-id9395 . -4) (undo-tree-id9396 . -4) 11768 (11763 . 11768) (t 26075 21321 757805 419000) 11762) nil (26075 21575 163579 816000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11812)) nil (26075 21575 163558 944000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11811) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1)) nil (26075 21575 163553 282000) 0 nil])
([nil nil ((11839 . 11840) (11837 . 11839) (#("%" 0 1 (fontified t)) . -11837) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) 11838 (11837 . 11838) (11836 . 11837) (11837 . 11838) (11834 . 11835) (nil syntax-table nil 11836 . 11837) (nil syntax-table (1) 11826 . 11827) (11832 . 11834) (11828 . 11832) (#("i" 0 1 (fontified t face font-lock-string-face)) . -11828) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) 11829 (11827 . 11829) (11826 . 11828) (11825 . 11827) (11824 . 11825) (11821 . 11824) (#("i" 0 1 (fontified t)) . -11821) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (#("i" 0 1 (fontified t)) . -11822) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) 11823 (11819 . 11823) (#("p" 0 1 (fontified t)) . -11819) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (#("o" 0 1 (fontified t)) . -11820) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) 11821 (11819 . 11821) (11812 . 11819) (11820 . 11824) (11813 . 11819) (11812 . 11814)) nil (26075 21575 162862 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11848 . 11849) (#("
" 0 1 (fontified nil)) . -11872) (11842 . 11873) 11839) nil (26075 21575 162850 937000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11938) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) 11939 (11934 . 11939) (11933 . 11934) (11930 . 11932) (11928 . 11930) (11927 . 11928) (#("x" 0 1 (fontified t)) . -11927) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) 11928 (11918 . 11928) (11917 . 11919) (#("." 0 1 (fontified t)) . -11917) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) 11918 (11912 . 11918) (11790 . 11792) (11788 . 11790) (11786 . 11788) (#("x" 0 1 (fontified t)) . -11786) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (#("w" 0 1 (fontified t)) . -11787) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) 11788 (11778 . 11788) (11777 . 11779) (11895 . 11896) (11896 . 11897) (11893 . 11894) (nil syntax-table nil 11895 . 11896) (nil syntax-table (1) 11886 . 11887) (11887 . 11893) (11886 . 11888) (11885 . 11887) (11879 . 11885) (11872 . 11879)) nil (26075 21575 162845 123000) 0 nil])
([nil nil ((11963 . 11964) (11961 . 11963) (11947 . 11961) (11940 . 11947) (t 26075 21575 204482 302000) 11939) nil (26075 21609 764978 688000) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -11774) (11774 . 11776) (#("while" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face)) . 11774) (undo-tree-id9397 . -5) (undo-tree-id9398 . -5) (undo-tree-id9399 . -2) (undo-tree-id9400 . -2) (undo-tree-id9401 . -2) (undo-tree-id9402 . -2) (undo-tree-id9403 . -2) (undo-tree-id9404 . -2) (undo-tree-id9405 . -2) (undo-tree-id9406 . -2) (undo-tree-id9407 . -2) (undo-tree-id9408 . -2) (undo-tree-id9409 . -2) (undo-tree-id9410 . -2) (undo-tree-id9411 . -2) (undo-tree-id9412 . -2) (undo-tree-id9413 . -2) (undo-tree-id9414 . -2) (undo-tree-id9415 . -2) (undo-tree-id9416 . -2) (undo-tree-id9417 . -2) (undo-tree-id9418 . -2) (undo-tree-id9419 . -2) (undo-tree-id9420 . -2) (undo-tree-id9421 . -2) (undo-tree-id9422 . -2) (undo-tree-id9423 . -2) (undo-tree-id9424 . -2) (undo-tree-id9425 . -2) (undo-tree-id9426 . -3) (undo-tree-id9427 . -3) (undo-tree-id9428 . -3) (undo-tree-id9429 . -3) (undo-tree-id9430 . -3) (undo-tree-id9431 . -3) (undo-tree-id9432 . -3) (undo-tree-id9433 . -3) (undo-tree-id9434 . -3) (undo-tree-id9435 . -3) (undo-tree-id9436 . -3) (undo-tree-id9437 . -3) (undo-tree-id9438 . -3) (undo-tree-id9439 . -3) (undo-tree-id9440 . -3) (undo-tree-id9441 . -3) (undo-tree-id9442 . -3) (undo-tree-id9443 . -3) (undo-tree-id9444 . -3) (undo-tree-id9445 . -3) (undo-tree-id9446 . -3) (undo-tree-id9447 . -3) (undo-tree-id9448 . -3) (undo-tree-id9449 . -3) (undo-tree-id9450 . -3) (undo-tree-id9451 . -3) (undo-tree-id9452 . -3) (undo-tree-id9453 . -3) (undo-tree-id9454 . -3) (undo-tree-id9455 . -3) (undo-tree-id9456 . -3) (undo-tree-id9457 . -3) (undo-tree-id9458 . -3) (undo-tree-id9459 . -3) (undo-tree-id9460 . -3) (undo-tree-id9461 . -3) (undo-tree-id9462 . -3) (undo-tree-id9463 . -3) (undo-tree-id9464 . -3) (undo-tree-id9465 . -3) (undo-tree-id9466 . -3) (undo-tree-id9467 . -3) (undo-tree-id9468 . -3) (undo-tree-id9469 . -3) (undo-tree-id9470 . -3) (undo-tree-id9471 . -3) (undo-tree-id9472 . -3) (undo-tree-id9473 . -3) (undo-tree-id9474 . -3) (undo-tree-id9475 . -3) (undo-tree-id9476 . -3) (undo-tree-id9477 . -3) (undo-tree-id9478 . -3) (undo-tree-id9479 . -3) (undo-tree-id9480 . -3) (undo-tree-id9481 . -3) (undo-tree-id9482 . -3) (undo-tree-id9483 . -3) (undo-tree-id9484 . -3) (undo-tree-id9485 . -3) (undo-tree-id9486 . -3) (undo-tree-id9487 . -3) (undo-tree-id9488 . -3) (undo-tree-id9489 . -3) (undo-tree-id9490 . -3) (undo-tree-id9491 . -3) (undo-tree-id9492 . -3) (undo-tree-id9493 . -3) (undo-tree-id9494 . -3) (undo-tree-id9495 . -3) (undo-tree-id9496 . -3) (undo-tree-id9497 . -3) (undo-tree-id9498 . -3) (undo-tree-id9499 . -3) (undo-tree-id9500 . -3) (undo-tree-id9501 . -3) (undo-tree-id9502 . -3) (undo-tree-id9503 . -3) (undo-tree-id9504 . -3) (undo-tree-id9505 . -3) (undo-tree-id9506 . -4) (undo-tree-id9507 . -4) (undo-tree-id9508 . -4) (undo-tree-id9509 . -4) (undo-tree-id9510 . -4) (undo-tree-id9511 . -4) (undo-tree-id9512 . -4) (undo-tree-id9513 . -4) (undo-tree-id9514 . -4) (undo-tree-id9515 . -4) (undo-tree-id9516 . -4) (undo-tree-id9517 . -4) (undo-tree-id9518 . -4) (undo-tree-id9519 . -4) (undo-tree-id9520 . -4) (undo-tree-id9521 . -4) (undo-tree-id9522 . -4) (undo-tree-id9523 . -4) (undo-tree-id9524 . -4) (undo-tree-id9525 . -4) (undo-tree-id9526 . -4) (undo-tree-id9527 . -4) (undo-tree-id9528 . -4) (undo-tree-id9529 . -4) (undo-tree-id9530 . -4) (undo-tree-id9531 . -4) (undo-tree-id9532 . -4) (undo-tree-id9533 . -4) (undo-tree-id9534 . -4) (undo-tree-id9535 . -4) (undo-tree-id9536 . -4) (undo-tree-id9537 . -4) (undo-tree-id9538 . -4) (undo-tree-id9539 . -4) (undo-tree-id9540 . -4) (undo-tree-id9541 . -4) (undo-tree-id9542 . -4) (undo-tree-id9543 . -4) (undo-tree-id9544 . -4) (undo-tree-id9545 . -4) (undo-tree-id9546 . -4) (undo-tree-id9547 . -4) (undo-tree-id9548 . -4) (undo-tree-id9549 . -4) (undo-tree-id9550 . -4) (undo-tree-id9551 . -4) (undo-tree-id9552 . -4) (undo-tree-id9553 . -4) (undo-tree-id9554 . -4) (undo-tree-id9555 . -4) (undo-tree-id9556 . -4) (undo-tree-id9557 . -4) (undo-tree-id9558 . -4) (undo-tree-id9559 . -4) (undo-tree-id9560 . -4) (undo-tree-id9561 . -4) (undo-tree-id9562 . -4) (undo-tree-id9563 . -4) (undo-tree-id9564 . -4) (undo-tree-id9565 . -4) (undo-tree-id9566 . -4) (undo-tree-id9567 . -4) (undo-tree-id9568 . -4) (undo-tree-id9569 . -4) (undo-tree-id9570 . -4) (undo-tree-id9571 . -4) (undo-tree-id9572 . -4) (undo-tree-id9573 . -4) (undo-tree-id9574 . -4) (undo-tree-id9575 . -4) (undo-tree-id9576 . -4) (undo-tree-id9577 . -4) (undo-tree-id9578 . -4) (undo-tree-id9579 . -4) (undo-tree-id9580 . -4) (undo-tree-id9581 . -4) (undo-tree-id9582 . -4) (undo-tree-id9583 . -4) (undo-tree-id9584 . -4) (undo-tree-id9585 . -4) (undo-tree-id9586 . -5) (undo-tree-id9587 . -5) (undo-tree-id9588 . -5) (undo-tree-id9589 . -5) (undo-tree-id9590 . -5) (undo-tree-id9591 . -5) (undo-tree-id9592 . -5) (undo-tree-id9593 . -5) (undo-tree-id9594 . -5) (undo-tree-id9595 . -5) (undo-tree-id9596 . -5) (undo-tree-id9597 . -5) (undo-tree-id9598 . -5) (undo-tree-id9599 . -5) (undo-tree-id9600 . -5) (undo-tree-id9601 . -5) (undo-tree-id9602 . -5) (undo-tree-id9603 . -5) (undo-tree-id9604 . -5) (undo-tree-id9605 . -5) (undo-tree-id9606 . -5) (undo-tree-id9607 . -5) (undo-tree-id9608 . -5) (undo-tree-id9609 . -5) (undo-tree-id9610 . -5) (undo-tree-id9611 . -5) (undo-tree-id9612 . -5) (undo-tree-id9613 . -5) (undo-tree-id9614 . -5) (undo-tree-id9615 . -5) (undo-tree-id9616 . -5) (undo-tree-id9617 . -5) (undo-tree-id9618 . -5) (undo-tree-id9619 . -5) (undo-tree-id9620 . -5) (undo-tree-id9621 . -5) (undo-tree-id9622 . -5) (undo-tree-id9623 . -5) (undo-tree-id9624 . -5) (undo-tree-id9625 . -5) (undo-tree-id9626 . -5) (undo-tree-id9627 . -5) (undo-tree-id9628 . -5) (undo-tree-id9629 . -5) (undo-tree-id9630 . -5) (undo-tree-id9631 . -5) (undo-tree-id9632 . -5) (undo-tree-id9633 . -5) (undo-tree-id9634 . -5) (undo-tree-id9635 . -5) (undo-tree-id9636 . -5) (undo-tree-id9637 . -5) (undo-tree-id9638 . -5) (undo-tree-id9639 . -5) (undo-tree-id9640 . -5) (undo-tree-id9641 . -5) (undo-tree-id9642 . -5) (undo-tree-id9643 . -5) (undo-tree-id9644 . -5) (undo-tree-id9645 . -5) (undo-tree-id9646 . -5) (undo-tree-id9647 . -5) (undo-tree-id9648 . -5) (undo-tree-id9649 . -5) (undo-tree-id9650 . -5) (undo-tree-id9651 . -5) (undo-tree-id9652 . -5) (undo-tree-id9653 . -5) (undo-tree-id9654 . -5) (undo-tree-id9655 . -5) (undo-tree-id9656 . -5) (undo-tree-id9657 . -5) (undo-tree-id9658 . -5) (undo-tree-id9659 . -5) (undo-tree-id9660 . -5) (undo-tree-id9661 . -5) (undo-tree-id9662 . -5) (undo-tree-id9663 . -5) (undo-tree-id9664 . -5) (undo-tree-id9665 . -5) (undo-tree-id9666 . -5) (11769 . 11774) 11774 (11771 . 11774) (#("o" 0 1 (fontified t)) . -11771) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (#("l" 0 1 (fontified t)) . -11772) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) 11773 (11769 . 11773) (#("i" 0 1 (fontified t)) . -11769) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -11770) (undo-tree-id9673 . -1) 11771 (11772 . 11773) (11784 . 11786) (11780 . 11784) (11772 . 11780) (11772 . 11774) (#("d" 0 1 (fontified t)) . -11772) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) 11773 (11772 . 11773) (#("*" 0 1 (fontified t)) . -11772) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (#("*" 0 1 (fontified t)) . -11773) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) 11774 (11772 . 11774) (t 26075 21609 787817 29000)) nil (26075 21645 320180 668000) 0 nil])
([nil nil ((apply -18 11593 11783 undo--wrap-and-run-primitive-undo 11593 11783 ((11777 . 11780) (11736 . 11739) (11699 . 11702) (11631 . 11634) (11622 . 11625) (11597 . 11600) 11593)) (t 26075 21645 341151 793000)) nil (26075 21764 282581 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12019 . 12020) (#("
" 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . -12159) (12015 . 12160) 12014) nil (26075 21764 282580 144000) 0 nil])
([nil nil ((apply 9 12016 12151 undo--wrap-and-run-primitive-undo 12016 12151 ((#("// " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -12119) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -12085) (#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -12020) 12160))) nil (26075 21764 282579 278000) 0 nil])
([nil nil ((12016 . 12020) (#("      " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 6 (fontified t)) . -12016) (undo-tree-id9901 . -4) (undo-tree-id9902 . -4) (undo-tree-id9903 . -6) (undo-tree-id9904 . -6) (undo-tree-id9905 . -6) (undo-tree-id9906 . -6) (undo-tree-id9907 . -6) (undo-tree-id9908 . -6) (undo-tree-id9909 . -6) (undo-tree-id9910 . -6) (undo-tree-id9911 . -6) (undo-tree-id9912 . -6) (undo-tree-id9913 . -6) (undo-tree-id9914 . -6) (undo-tree-id9915 . -6) (undo-tree-id9916 . -6) (undo-tree-id9917 . -6) (undo-tree-id9918 . -6) (undo-tree-id9919 . -6) (undo-tree-id9920 . -6) (undo-tree-id9921 . -6) (undo-tree-id9922 . -6) (undo-tree-id9923 . -6) (undo-tree-id9924 . -6) (undo-tree-id9925 . -6) (undo-tree-id9926 . -6) (undo-tree-id9927 . -6) (undo-tree-id9928 . -6) (undo-tree-id9929 . -6) 12022) nil (26075 21764 282577 873000) 0 nil])
([nil nil ((12016 . 12021) (#("    " 0 4 (fontified t)) . 12016) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -4) (undo-tree-id9740 . -4) (undo-tree-id9741 . -4) (undo-tree-id9742 . -4) (undo-tree-id9743 . -4) (undo-tree-id9744 . -4) (undo-tree-id9745 . -4) (undo-tree-id9746 . -4) (undo-tree-id9747 . -4) (undo-tree-id9748 . -4) (undo-tree-id9749 . -4) (undo-tree-id9750 . -4) (undo-tree-id9751 . -4) (undo-tree-id9752 . -4) (undo-tree-id9753 . -4) (undo-tree-id9754 . -4) (undo-tree-id9755 . -4) (undo-tree-id9756 . -4) (undo-tree-id9757 . -4) (undo-tree-id9758 . -4) (undo-tree-id9759 . -4) (undo-tree-id9760 . -4) (undo-tree-id9761 . -4) (undo-tree-id9762 . -4) (undo-tree-id9763 . -4) (undo-tree-id9764 . -4) (undo-tree-id9765 . -4) (undo-tree-id9766 . -4) (undo-tree-id9767 . -4) (undo-tree-id9768 . -4) (undo-tree-id9769 . -4) (undo-tree-id9770 . -4) (undo-tree-id9771 . -4) (undo-tree-id9772 . -4) (undo-tree-id9773 . -4) (undo-tree-id9774 . -4) (undo-tree-id9775 . -4) (undo-tree-id9776 . -4) (undo-tree-id9777 . -4) (undo-tree-id9778 . -4) (undo-tree-id9779 . -4) (undo-tree-id9780 . -4) (undo-tree-id9781 . -4) (undo-tree-id9782 . -4) (undo-tree-id9783 . -4) (undo-tree-id9784 . -4) (undo-tree-id9785 . -4) (undo-tree-id9786 . -4) (undo-tree-id9787 . -4) (undo-tree-id9788 . -4) (undo-tree-id9789 . -4) (undo-tree-id9790 . -4) (undo-tree-id9791 . -4) (undo-tree-id9792 . -4) (undo-tree-id9793 . -4) (undo-tree-id9794 . -4) (undo-tree-id9795 . -4) (undo-tree-id9796 . -4) (undo-tree-id9797 . -4) (undo-tree-id9798 . -4) (undo-tree-id9799 . -4) (undo-tree-id9800 . -4) (undo-tree-id9801 . -4) (undo-tree-id9802 . -4) (undo-tree-id9803 . -4) (undo-tree-id9804 . -4) (undo-tree-id9805 . -4) (undo-tree-id9806 . -4) (undo-tree-id9807 . -4) (undo-tree-id9808 . -4) (undo-tree-id9809 . -4) (undo-tree-id9810 . -4) (undo-tree-id9811 . -4) (undo-tree-id9812 . -4) (undo-tree-id9813 . -4) (undo-tree-id9814 . -4) (undo-tree-id9815 . -4) (undo-tree-id9816 . -4) (undo-tree-id9817 . -4) (undo-tree-id9818 . -4) (undo-tree-id9819 . -4) (undo-tree-id9820 . -4) (undo-tree-id9821 . -4) (undo-tree-id9822 . -4) (undo-tree-id9823 . -4) (undo-tree-id9824 . -4) (undo-tree-id9825 . -4) (undo-tree-id9826 . -4) (undo-tree-id9827 . -4) (undo-tree-id9828 . -4) (undo-tree-id9829 . -4) (undo-tree-id9830 . -4) (undo-tree-id9831 . -4) (undo-tree-id9832 . -4) (undo-tree-id9833 . -4) (undo-tree-id9834 . -4) (undo-tree-id9835 . -4) (undo-tree-id9836 . -4) (undo-tree-id9837 . -4) (undo-tree-id9838 . -4) (undo-tree-id9839 . -4) (undo-tree-id9840 . -4) (undo-tree-id9841 . -4) (undo-tree-id9842 . -4) (undo-tree-id9843 . -4) (undo-tree-id9844 . -4) (undo-tree-id9845 . -4) (undo-tree-id9846 . -4) (undo-tree-id9847 . -4) (undo-tree-id9848 . -4) (undo-tree-id9849 . -4) (undo-tree-id9850 . -4) (undo-tree-id9851 . -4) (undo-tree-id9852 . -4) (undo-tree-id9853 . -4) (undo-tree-id9854 . -4) (undo-tree-id9855 . -4) (undo-tree-id9856 . -4) (undo-tree-id9857 . -4) (undo-tree-id9858 . -4) (undo-tree-id9859 . -4) (undo-tree-id9860 . -4) (undo-tree-id9861 . -4) (undo-tree-id9862 . -4) (undo-tree-id9863 . -4) (undo-tree-id9864 . -4) (undo-tree-id9865 . -4) (undo-tree-id9866 . -4) (undo-tree-id9867 . -4) (undo-tree-id9868 . -4) (undo-tree-id9869 . -4) (undo-tree-id9870 . -4) (undo-tree-id9871 . -4) (undo-tree-id9872 . -4) (undo-tree-id9873 . -4) (undo-tree-id9874 . -4) (undo-tree-id9875 . -4) (undo-tree-id9876 . -4) (undo-tree-id9877 . -4) (undo-tree-id9878 . -4) (undo-tree-id9879 . -4) (undo-tree-id9880 . -4) (undo-tree-id9881 . -4) (undo-tree-id9882 . -4) (undo-tree-id9883 . -4) (undo-tree-id9884 . -4) (undo-tree-id9885 . -4) (undo-tree-id9886 . -4) (undo-tree-id9887 . -4) (undo-tree-id9888 . -4) (undo-tree-id9889 . -4) (undo-tree-id9890 . -4) (undo-tree-id9891 . -4) (undo-tree-id9892 . -4) (undo-tree-id9893 . -4) (undo-tree-id9894 . -4) (undo-tree-id9895 . -4) (undo-tree-id9896 . -4) (undo-tree-id9897 . -4) (undo-tree-id9898 . -4) (undo-tree-id9899 . -4) (undo-tree-id9900 . -4) 12020) nil (26075 21764 282555 719000) 0 nil])
([nil nil ((12080 . 12084) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 12080) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) 12084) nil (26075 21764 282449 948000) 0 nil])
([nil nil ((12112 . 12116) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 12112) (undo-tree-id9680 . -4) (undo-tree-id9681 . -4) (undo-tree-id9682 . -4) (undo-tree-id9683 . -4) (undo-tree-id9684 . -4) (undo-tree-id9685 . -4) (undo-tree-id9686 . -4) (undo-tree-id9687 . -4) (undo-tree-id9688 . -4) (undo-tree-id9689 . -4) (undo-tree-id9690 . -4) (undo-tree-id9691 . -4) (undo-tree-id9692 . -4) (undo-tree-id9693 . -4) (undo-tree-id9694 . -4) (undo-tree-id9695 . -4) (undo-tree-id9696 . -4) (undo-tree-id9697 . -4) (undo-tree-id9698 . -4) (undo-tree-id9699 . -4) (undo-tree-id9700 . -4) (undo-tree-id9701 . -4) (undo-tree-id9702 . -4) (undo-tree-id9703 . -4) (undo-tree-id9704 . -4) (undo-tree-id9705 . -4) (undo-tree-id9706 . -4) (undo-tree-id9707 . -4) (undo-tree-id9708 . -4) (undo-tree-id9709 . -4) (undo-tree-id9710 . -4) (undo-tree-id9711 . -4) (undo-tree-id9712 . -4) (undo-tree-id9713 . -4) (undo-tree-id9714 . -4) (undo-tree-id9715 . -4) (undo-tree-id9716 . -4) (undo-tree-id9717 . -4) (undo-tree-id9718 . -4) (undo-tree-id9719 . -4) (undo-tree-id9720 . -4) (undo-tree-id9721 . -4) (undo-tree-id9722 . -4) (undo-tree-id9723 . -4) (undo-tree-id9724 . -4) (undo-tree-id9725 . -4) (undo-tree-id9726 . -4) (undo-tree-id9727 . -4) (undo-tree-id9728 . -4) (undo-tree-id9729 . -4) (undo-tree-id9730 . -4) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) 12116) nil (26075 21764 282114 223000) 0 nil])
([nil nil ((#("    ret=do_that(bnf_st,op_st);
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t) 30 31 (fontified t)) . 11562) (undo-tree-id10020 . -30) (undo-tree-id10021 . -4) (undo-tree-id10022 . -4) 11566 (t 26075 21764 314489 922000)) nil (26075 21984 828066 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11988 . 11989) (#("
" 0 1 (fontified nil)) . -12015) (11984 . 12016) 11983) nil (26075 21984 828064 55000) 0 nil])
([nil nil ((12214 . 12215) (12213 . 12215) (12206 . 12212) (#("    " 0 4 (fontified nil)) . 12206) (undo-tree-id10012 . -4) (12210 . 12212) (12205 . 12212) (12190 . 12191) (12200 . 12201) (#("r" 0 1 (fontified t)) . -12200) (undo-tree-id10013 . -1) 12201 (12201 . 12203) (12195 . 12201) (12190 . 12195) (12189 . 12191) (12187 . 12189) (12182 . 12187) (12181 . 12182) (#(";" 0 1 (fontified t)) . -12181) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) 12182 (12181 . 12182) (12178 . 12181) (12176 . 12178) (12167 . 12176) (#("bnf_token" 0 9 (fontified nil)) . -12167) (12167 . 12176) (12165 . 12167) (12154 . 12165) (#("to" 0 2 (fontified nil)) . 12154) (12154 . 12156) (#("token_class" 0 11 (fontified nil)) . -12154) (12154 . 12165) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -12154) (undo-tree-id10016 . -2) (undo-tree-id10017 . -2) 12156 (12154 . 12156) (12147 . 12149) (#("    " 0 4 (fontified t)) . 12147) 12156 (12151 . 12156) (12146 . 12151) (#("    " 0 4 (fontified t)) . 12146) (undo-tree-id10018 . -4) (undo-tree-id10019 . -4) 12150 (12145 . 12150) 12116) nil (26075 21984 828060 762000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 12209) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1)) nil (26075 21984 828051 403000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 12209) (undo-tree-id9930 . 1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1)) nil (26075 21984 833090 291000) 0 nil])
([nil nil ((12187 . 12192) (#("i" 0 1 (fontified t)) . -12187) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -12188) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) 12189 (12211 . 12218) (12214 . 12218) 12215) nil (26075 22098 220340 254000) 0 nil] [nil nil ((12214 . 12220) (12214 . 12215) 12216) ((#("
" 0 1 (fontified nil)) . 12214) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (#("      " 0 6 (fontified t)) . 12214) (undo-tree-id10025 . -6) (undo-tree-id10026 . -6) (undo-tree-id10027 . -6)) (26075 21984 827989 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12220 . 12221) (#("
" 0 1 (fontified nil)) . -12350) (12214 . 12351) 12213) nil (26075 22098 220334 970000) 0 nil])
nil
([nil nil ((#("      
" 0 6 (fontified t) 6 7 (fontified t)) . 12351) (undo-tree-id10028 . -6) (undo-tree-id10029 . -5) (undo-tree-id10030 . -5) 12356) nil (26075 22098 220331 746000) 0 nil])
([nil nil ((12358 . 12363) (#("  " 0 2 (fontified t)) . 12358) (undo-tree-id10039 . -2) (undo-tree-id10040 . -2) 12360 (t 26075 22098 247836 718000)) nil (26075 22133 321416 841000) 0 nil])
([nil nil ((12359 . 12364) (#("    " 0 4 (fontified t)) . 12359) (undo-tree-id10037 . -4) (undo-tree-id10038 . -4) 12363) nil (26075 22133 321414 82000) 0 nil])
([nil nil ((12364 . 12368)) nil (26075 22133 321411 549000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -12367) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) 12368) nil (26075 22133 321410 460000) 0 nil])
([nil nil ((12367 . 12371)) nil (26075 22133 324716 278000) 0 nil])
([nil nil ((12373 . 12374) (12371 . 12373)) nil (26075 22137 65308 979000) 0 nil] [nil nil ((12371 . 12373)) ((#("[]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-3-face))) . 12371) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1)) (26075 22133 321399 84000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 11773) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (t 26075 22137 107838 279000)) nil (26075 22156 635513 825000) 0 nil])
nil
([nil nil ((11814 . 11815) (#("a" 0 1 (fontified t)) . 11814) (undo-tree-id10097 . -1) (t 26075 22156 674505 739000)) nil (26075 22186 854263 456000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -11799) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (#(">" 0 1 (fontified t)) . -11800) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (#("s" 0 1 (fontified t)) . -11801) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (#("t" 0 1 (fontified t)) . -11802) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (#("a" 0 1 (fontified t)) . -11803) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (#("t" 0 1 (fontified t)) . -11804) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) 11805 (11801 . 11805) (11800 . 11801) (11799 . 11800) (#(".is_ter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 11799) (undo-tree-id10110 . -6) (undo-tree-id10111 . -7) (undo-tree-id10112 . -7) (undo-tree-id10113 . -7) (undo-tree-id10114 . -7) (undo-tree-id10115 . -7) (undo-tree-id10116 . -7) (undo-tree-id10117 . -7) (undo-tree-id10118 . -7) (undo-tree-id10119 . -7) (undo-tree-id10120 . -7) (undo-tree-id10121 . -7) (undo-tree-id10122 . -7) (undo-tree-id10123 . -7) (undo-tree-id10124 . -7) (undo-tree-id10125 . -7) (undo-tree-id10126 . -7) (undo-tree-id10127 . -7) (undo-tree-id10128 . -7) (undo-tree-id10129 . -7) (undo-tree-id10130 . -7) (undo-tree-id10131 . -7) (undo-tree-id10132 . -7) (undo-tree-id10133 . -7) (undo-tree-id10134 . -7) (undo-tree-id10135 . -7) (undo-tree-id10136 . -7) (undo-tree-id10137 . -6) (undo-tree-id10138 . -6) (undo-tree-id10139 . -6) (undo-tree-id10140 . -6) (undo-tree-id10141 . -6) (undo-tree-id10142 . -6) (undo-tree-id10143 . -6) (undo-tree-id10144 . -6) (undo-tree-id10145 . -6) (undo-tree-id10146 . -6) (undo-tree-id10147 . -6) (undo-tree-id10148 . -6) (undo-tree-id10149 . -6) (undo-tree-id10150 . -6) (undo-tree-id10151 . -6) (undo-tree-id10152 . -6) (undo-tree-id10153 . -6) (undo-tree-id10154 . -6) (undo-tree-id10155 . -6) (undo-tree-id10156 . -6) (undo-tree-id10157 . -6) (undo-tree-id10158 . -6) (undo-tree-id10159 . -6) (undo-tree-id10160 . -6) (undo-tree-id10161 . -6) (undo-tree-id10162 . -6) (undo-tree-id10163 . -5) (undo-tree-id10164 . -5) (undo-tree-id10165 . -5) (undo-tree-id10166 . -5) (undo-tree-id10167 . -5) (undo-tree-id10168 . -5) (undo-tree-id10169 . -5) (undo-tree-id10170 . -5) (undo-tree-id10171 . -5) (undo-tree-id10172 . -5) (undo-tree-id10173 . -5) (undo-tree-id10174 . -5) (undo-tree-id10175 . -5) (undo-tree-id10176 . -5) (undo-tree-id10177 . -5) (undo-tree-id10178 . -5) (undo-tree-id10179 . -5) (undo-tree-id10180 . -5) (undo-tree-id10181 . -5) (undo-tree-id10182 . -5) (undo-tree-id10183 . -5) (undo-tree-id10184 . -5) (undo-tree-id10185 . -5) (undo-tree-id10186 . -5) (undo-tree-id10187 . -5) (undo-tree-id10188 . -5) (undo-tree-id10189 . -4) (undo-tree-id10190 . -4) (undo-tree-id10191 . -4) (undo-tree-id10192 . -4) (undo-tree-id10193 . -4) (undo-tree-id10194 . -4) (undo-tree-id10195 . -4) (undo-tree-id10196 . -4) (undo-tree-id10197 . -4) (undo-tree-id10198 . -4) (undo-tree-id10199 . -4) (undo-tree-id10200 . -4) (undo-tree-id10201 . -4) (undo-tree-id10202 . -4) (undo-tree-id10203 . -4) (undo-tree-id10204 . -4) (undo-tree-id10205 . -4) (undo-tree-id10206 . -4) (undo-tree-id10207 . -4) (undo-tree-id10208 . -4) (undo-tree-id10209 . -4) (undo-tree-id10210 . -4) (undo-tree-id10211 . -4) (undo-tree-id10212 . -4) (undo-tree-id10213 . -4) (undo-tree-id10214 . -4) (undo-tree-id10215 . -3) (undo-tree-id10216 . -3) (undo-tree-id10217 . -3) (undo-tree-id10218 . -3) (undo-tree-id10219 . -3) (undo-tree-id10220 . -3) (undo-tree-id10221 . -3) (undo-tree-id10222 . -3) (undo-tree-id10223 . -3) (undo-tree-id10224 . -3) (undo-tree-id10225 . -3) (undo-tree-id10226 . -3) (undo-tree-id10227 . -3) (undo-tree-id10228 . -3) (undo-tree-id10229 . -3) (undo-tree-id10230 . -3) (undo-tree-id10231 . -3) (undo-tree-id10232 . -3) (undo-tree-id10233 . -3) (undo-tree-id10234 . -3) (undo-tree-id10235 . -3) (undo-tree-id10236 . -3) (undo-tree-id10237 . -3) (undo-tree-id10238 . -3) (undo-tree-id10239 . -3) (undo-tree-id10240 . -3) (undo-tree-id10241 . -2) (undo-tree-id10242 . -2) (undo-tree-id10243 . -2) (undo-tree-id10244 . -2) (undo-tree-id10245 . -2) (undo-tree-id10246 . -2) (undo-tree-id10247 . -2) (undo-tree-id10248 . -2) (undo-tree-id10249 . -2) (undo-tree-id10250 . -2) (undo-tree-id10251 . -2) (undo-tree-id10252 . -2) (undo-tree-id10253 . -2) (undo-tree-id10254 . -2) (undo-tree-id10255 . -2) (undo-tree-id10256 . -2) (undo-tree-id10257 . -2) (undo-tree-id10258 . -2) (undo-tree-id10259 . -2) (undo-tree-id10260 . -2) (undo-tree-id10261 . -2) (undo-tree-id10262 . -2) (undo-tree-id10263 . -2) (undo-tree-id10264 . -2) (undo-tree-id10265 . -2) (undo-tree-id10266 . -2) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -7) (undo-tree-id10294 . -7) (t 26075 22186 877840 294000)) nil (26075 22215 220477 135000) 0 nil])
([nil nil ((11933 . 11934) (11932 . 11933) (#("." 0 1 (fontified t)) . 11932) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (t 26075 22215 244508 108000)) nil (26075 22228 379321 660000) 0 nil])
([nil nil ((11934 . 11943) (11933 . 11934) (#(">" 0 1 (fontified t)) . -11933) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (#("r" 0 1 (fontified t)) . -11934) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) 11935 (11934 . 11935) (11934 . 11935) (#(")" 0 1 (fontified nil)) . -11934) (11934 . 11935) (#("stat)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-4-face))) . 11934) (undo-tree-id10304 . -4) (undo-tree-id10305 . 5) (undo-tree-id10306 . 5) (undo-tree-id10307 . -5) (undo-tree-id10308 . -5) (t 26075 22228 414508 642000)) nil (26075 22252 231448 46000) 0 nil])
([nil nil ((12322 . 12329) (#("w" 0 1 (fontified t)) . -12322) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (#("e" 0 1 (fontified t)) . -12323) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) 12324 (12321 . 12324) (#("y" 0 1 (fontified t face font-lock-keyword-face)) . -12321) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) 12322 (12321 . 12322) (#("y" 0 1 (fontified t face font-lock-keyword-face)) . -12321) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (#("w" 0 1 (fontified t)) . -12322) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) 12323 (12322 . 12323) (12321 . 12322) (#("r" 0 1 (fontified t)) . -12321) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) 12322 (12319 . 12322) (#("r" 0 1 (fontified t)) . -12319) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (#("r" 0 1 (fontified t)) . -12320) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) 12321 (12319 . 12321) (#("s" 0 1 (fontified t)) . -12319) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (#("t" 0 1 (fontified t)) . -12320) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (#("a" 0 1 (fontified t)) . -12321) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (#("t" 0 1 (fontified t)) . -12322) (undo-tree-id10387 . -1) 12323 (12318 . 12319) (12317 . 12318) (#("." 0 1 (fontified t)) . 12317) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (t 26075 22252 257842 936000)) nil (26075 22283 953 413000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 12328) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1)) nil (26075 22283 897 478000) 0 nil])
([nil nil ((8109 . 8110) (#("1" 0 1 (fontified t)) . -8109) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (#("2" 0 1 (fontified t)) . -8110) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) 8111 (8109 . 8111) (#("1" 0 1 (fontified t)) . -8109) (undo-tree-id10423 . -1) 8110 (8122 . 8123) (8120 . 8122) (8116 . 8120) (#("," 0 1 (fontified t)) . -8116) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) 8117 (8116 . 8117) (8115 . 8116) (#("2" 0 1 (fontified t)) . -8115) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) 8116 (8114 . 8116) (8111 . 8114) (8110 . 8111) (8109 . 8110) (8105 . 8108) (#("t" 0 1 (fontified t)) . -8105) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (#("r" 0 1 (fontified t)) . -8106) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (#("u" 0 1 (fontified t)) . -8107) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -8108) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (#("_" 0 1 (fontified t)) . -8109) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (#("t" 0 1 (fontified t)) . -8110) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (#("y" 0 1 (fontified t)) . -8111) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (#("p" 0 1 (fontified t)) . -8112) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (#("e" 0 1 (fontified t)) . -8113) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) 8114 (8107 . 8115) (8104 . 8107) (#("-" 0 1 (fontified t)) . -8104) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (#(">" 0 1 (fontified t)) . -8105) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) 8106 (8105 . 8106) (8104 . 8105) (#("." 0 1 (fontified t)) . -8104) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) 8105 (8104 . 8105) (#(";" 0 1 (fontified t)) . -8104) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) 8105 (8104 . 8105) (8102 . 8104) (8099 . 8102) (#("  " 0 2 (fontified t)) . 8099) (undo-tree-id10454 . -2) (undo-tree-id10455 . -2) 8101 (8098 . 8101) (t 26075 22283 27844 185000) 8096) nil (26075 22428 206899 653000) 0 nil])
([nil nil ((apply -9 10718 10905 undo--wrap-and-run-primitive-undo 10718 10905 ((10821 . 10824) (10736 . 10739) (10722 . 10725) 10718)) (t 26075 22428 231183 381000)) nil (26075 22606 654584 381000) 0 nil])
([nil nil ((apply -12 10437 10656 undo--wrap-and-run-primitive-undo 10437 10656 ((10549 . 10552) (10535 . 10538) (10455 . 10458) (10441 . 10444) 10437))) nil (26075 22606 654580 210000) 0 nil])
([nil nil ((apply 6 10744 10837 undo--wrap-and-run-primitive-undo 10744 10837 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -10830) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -10748) 10843)) (t 26075 22606 681190 585000)) nil (26075 22662 831272 935000) 0 nil])
([nil nil ((11340 . 11341) (11335 . 11340) (11332 . 11335) (t 26075 22662 864526 198000) 11326) nil (26075 22694 413928 413000) 0 nil])
([nil nil ((apply -3 10826 10914 undo--wrap-and-run-primitive-undo 10826 10914 ((10830 . 10833) 10837)) (t 26075 22694 441194 139000)) nil (26075 22858 558411 490000) 0 nil])
([nil nil ((#("  bnf_st.pop_back();
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 19 (fontified t face (rainbow-delimiters-depth-2-face)) 19 20 (fontified t) 20 21 (fontified t)) . 11345) (undo-tree-id10474 . -20) (undo-tree-id10475 . -19) (undo-tree-id10476 . -19) (undo-tree-id10477 . -21) (undo-tree-id10478 . -21) 11364 (t 26075 22752 517863 160000)) nil (26075 22917 792553 820000) 0 nil] [nil nil ((#("  bt=bnf_st[bnf_st.size()-1];
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-3-face)) 24 25 (fontified t face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 29 (fontified t) 29 30 (fontified t)) . 11427) (undo-tree-id10456 . -26) (undo-tree-id10457 . -29) (undo-tree-id10458 . -26) (undo-tree-id10459 . 3) (undo-tree-id10460 . -26) (undo-tree-id10461 . -26) (undo-tree-id10462 . -26) (undo-tree-id10463 . -26) (undo-tree-id10464 . -30) (undo-tree-id10465 . -30) 11453 (t 26075 22752 517863 160000)) ((11427 . 11457)) (26075 22857 640620 117000) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . 11453) (t 26075 22752 517863 160000)) ((11453 . 11454)) (26075 22838 233376 702000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -11365) (11344 . 11366) 11343) nil (26075 22917 792543 464000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11346 . 11347) (#("
" 0 1 (fontified nil)) . -11374) (11344 . 11375) 11336) ((#("
  bt=bnf_st[bnf_st.size()-1];
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil face (rainbow-delimiters-depth-2-face)) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil face (rainbow-delimiters-depth-3-face)) 25 26 (fontified nil face (rainbow-delimiters-depth-3-face)) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-2-face)) 29 30 (fontified nil) 30 31 (fontified nil)) . 11344) (undo-tree-id10466 . -1) (undo-tree-id10467 . -30) (undo-tree-id10468 . -3) (undo-tree-id10469 . -3) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -3) (11374 . 11375) (nil rear-nonsticky t 11346 . 11347)) (26075 22857 634376 276000) 0 nil])
nil
([nil nil ((apply 3 10826 10837 undo--wrap-and-run-primitive-undo 10826 10837 ((#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -10830) 10840))) nil (26075 22917 792539 312000) 0 nil])
nil
([nil nil ((11521 . 11522) (11518 . 11521) (#("p" 0 1 (fontified t)) . -11518) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) 11519 (11516 . 11519) (11511 . 11516) (t 26075 22917 837869 845000) 11510) nil (26075 22939 132392 697000) 0 nil])
([nil nil ((12457 . 12458) (12454 . 12457) (12452 . 12454) (12449 . 12452) (t 26075 22939 161204 45000) 12448) nil (26075 22976 340849 902000) 0 nil])
([nil nil ((11470 . 11477) (11469 . 11470) (11470 . 11471) (11467 . 11468) (nil syntax-table nil 11469 . 11470) (nil syntax-table (1) 11463 . 11464) (11465 . 11467) (#("s" 0 1 (fontified t face font-lock-string-face)) . -11465) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) 11466 (11464 . 11466) (11463 . 11465) (11462 . 11464) (11459 . 11462) (#("n" 0 1 (fontified t)) . -11459) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (#("g" 0 1 (fontified t)) . -11460) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) 11461 (11456 . 11461) (11453 . 11456) (t 26075 22976 414538 886000) 11452) nil (26075 23015 575912 848000) 0 nil])
([nil nil ((11446 . 11448) (#("s" 0 1 (fontified t)) . -11446) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) 11447 (11443 . 11447) (11441 . 11442) (#("u" 0 1 (fontified t)) . -11441) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) 11442 (11441 . 11442) (11440 . 11442) (11437 . 11440) (11436 . 11437) (11434 . 11435) (nil syntax-table nil 11437 . 11438) (nil syntax-table (1) 11430 . 11431) (11431 . 11434) (11430 . 11432) (11429 . 11431) (11427 . 11429) (#("g" 0 1 (fontified t)) . -11427) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) 11428 (11423 . 11428) (11422 . 11423) (t 26075 23015 601207 135000)) nil (26075 23097 44447 729000) 0 nil])
([nil nil ((11436 . 11437) (11431 . 11436) (t 26075 23097 67877 97000)) nil (26075 23113 406782 863000) 0 nil])
([nil nil ((11391 . 11393) (#("-" 0 1 (fontified t)) . -11391) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (#("-" 0 1 (fontified t)) . -11392) (undo-tree-id10504 . -1) 11393 (11387 . 11389) (11379 . 11387) (#("t" 0 1 (fontified t)) . -11379) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) 11380 (11379 . 11380) (11378 . 11379) (#("0" 0 1 (fontified t)) . -11378) (undo-tree-id10507 . -1) 11379 (#(">" 0 1 (fontified t)) . -11378) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (#("=" 0 1 (fontified t)) . -11379) (undo-tree-id10510 . -1) 11380 (11375 . 11376) (#("ret.size()-1" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t face (rainbow-delimiters-depth-3-face)) 10 11 (fontified t) 11 12 (fontified t)) . 11375) (undo-tree-id10511 . -11) (t 26075 23113 427877 757000)) nil (26075 23209 211130 322000) 0 nil])
([nil nil ((11420 . 11422) (11419 . 11420) (#("," 0 1 (fontified t)) . 11419) (undo-tree-id10501 . -1)) nil (26075 23209 211122 194000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-in-sws t c-is-sws t)) . -11420) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (#("/" 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11421) (undo-tree-id10500 . -1) 11422 (11425 . 11427) (11422 . 11425)) nil (26075 23209 211120 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12137 . 12138) (#("
" 0 1 (fontified nil)) . -12193) (12135 . 12194)) nil (26075 23209 211117 531000) 0 nil])
([nil nil ((12136 . 12140) (#("  " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -12136) (undo-tree-id10496 . -2) (undo-tree-id10497 . -2) 12138) nil (26075 23209 211116 463000) 0 nil])
([nil nil ((#("    for(int i=ret.size()-1;i>=0;i--) bnf_st.push_back(ret[i]);
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-4-face)) 23 24 (fontified t face (rainbow-delimiters-depth-4-face)) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-3-face)) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-3-face)) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-4-face)) 58 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-4-face)) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t) 62 63 (fontified t)) . 12196) (undo-tree-id10493 . -62) (undo-tree-id10494 . -3) (undo-tree-id10495 . -3) 12199) nil (26075 23209 211111 501000) 0 nil])
([nil nil ((8170 . 8171) (#("2" 0 1 (fontified t)) . 8170) (t 26075 23209 231214 946000)) nil (26075 23288 170725 23000) 0 nil])
([nil nil ((#(",a1" 0 1 (fontified t c-type c-not-decl) 1 2 (fontified t) 2 3 (fontified t)) . 8171) (undo-tree-id10512 . -2) (undo-tree-id10513 . -3)) nil (26075 23301 245549 5000) 0 nil])
([nil nil ((apply -3 10823 10911 undo--wrap-and-run-primitive-undo 10823 10911 ((10827 . 10830) 10834)) (t 26075 23288 211218 136000)) nil (26075 23306 735281 508000) 0 nil] [nil nil ((#(";" 0 1 (fontified t)) . 10832) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (t 26075 23288 211218 136000)) ((10832 . 10833)) (26075 23301 242762 377000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -11509) (11488 . 11510) 11466 (t 26075 23306 761218 885000)) nil (26075 23393 967882 101000) 0 nil])
nil
([nil nil ((9732 . 9735) (9731 . 9732) (t 26075 23394 97889 78000)) nil (26075 23477 156899 892000) 0 nil])
([nil nil ((8172 . 8174) (8171 . 8172) (8169 . 8171) (8168 . 8169) (#("m" 0 1 (fontified t)) . -8168) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) 8169 (8168 . 8169) (t 26075 23477 221225 781000)) nil (26075 23501 954003 471000) 0 nil])
([nil nil ((11723 . 11724) (11718 . 11723) (#("s" 0 1 (fontified t)) . -11718) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) 11719 (11718 . 11719) (11713 . 11718) (t 26075 23501 987893 446000) 11706) nil (26075 23559 47592 554000) 0 nil])
([nil nil ((12350 . 12351) (12345 . 12350) (12340 . 12345) (t 26075 23559 74562 414000) 12337) nil (26075 23591 593997 623000) 0 nil])
([nil nil ((apply -6 12146 12276 undo--wrap-and-run-primitive-undo 12146 12276 ((12185 . 12188) (12150 . 12153) 12238)) (t 26075 23591 624563 739000)) nil (26075 23763 273561 730000) 0 nil])
([nil nil ((12532 . 12533) (12527 . 12532) (12520 . 12527) (12461 . 12462) (12458 . 12461) (12456 . 12458) (12449 . 12456) (t 26075 23763 314570 687000) 12448) nil (26075 23816 617920 484000) 0 nil])
([nil nil ((10951 . 10953) (t 26075 23816 641239 518000) 10950) nil (26075 23872 465466 829000) 0 nil])
([nil nil ((10953 . 10962)) nil (26075 23872 465465 890000) 0 nil])
([nil nil ((10962 . 10964)) nil (26075 23872 465465 254000) 0 nil])
([nil nil ((10963 . 10967)) nil (26075 23872 465464 491000) 0 nil])
([nil nil ((10967 . 10977)) nil (26075 23874 142641 999000) 0 nil])
([nil nil ((10994 . 10995) (10990 . 10994) (10982 . 10983) (#("-" 0 1 (fontified t)) . -10982) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (#(">" 0 1 (fontified t)) . -10983) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) 10984 (10987 . 10991) (10984 . 10987) (10983 . 10984) (10982 . 10983) (#("." 0 1 (fontified t)) . -10982) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) 10983 (10982 . 10983) (10979 . 10981) (#("d" 0 1 (fontified t)) . -10978) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) 10979 (10978 . 10979) (10977 . 10979)) nil (26075 23923 877679 377000) 0 nil] [nil nil ((10977 . 10979)) ((#("\"\"" 0 2 (fontified t face font-lock-string-face)) . 10977) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1)) (26075 23874 139681 274000) 0 nil] [nil nil ((10977 . 10979)) ((#("[]" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face))) . 10977) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1)) (26075 23872 465459 794000) 0 nil])
([nil nil ((12359 . 12360) (12349 . 12358) (12348 . 12349) (12347 . 12348) (12343 . 12347) (#("J" 0 1 (fontified t)) . -12343) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) 12344 (12338 . 12344) (12337 . 12338) (12335 . 12336) (nil syntax-table nil 12337 . 12338) (nil syntax-table (1) 12331 . 12332) (12332 . 12335) (12331 . 12333) (12330 . 12332) (12327 . 12330) (#("m" 0 1 (fontified t)) . -12327) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) 12328 (12325 . 12328) (12324 . 12325) (12319 . 12324) (t 26075 23923 904577 184000) 12316) nil (26075 24134 679254 197000) 0 nil])
nil
nil
([nil nil ((12370 . 12371) (12366 . 12370) (12365 . 12366) (12360 . 12365) (t 26075 24134 704585 703000) 12359) nil (26075 24140 709243 61000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12364 . 12365) (#("
" 0 1 (fontified nil)) . -12401) (12360 . 12402) 12340 (t 26075 24140 734585 949000)) nil (26075 24190 134623 287000) 0 nil])
([nil nil ((12385 . 12386) (12384 . 12386) (12379 . 12384) (#("bt.is_ter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 12379) (undo-tree-id10568 . -8) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -9) (undo-tree-id10677 . -9)) nil (26075 24190 134618 82000) 0 nil])
([nil nil ((apply -3 12361 12415 undo--wrap-and-run-primitive-undo 12361 12415 ((12365 . 12368) 12401)) (t 26075 24190 161254 610000)) nil (26075 24268 832174 176000) 0 nil])
([nil nil ((apply 3 12361 12401 undo--wrap-and-run-primitive-undo 12361 12401 ((#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -12365) 12404)) (t 26075 24270 414591 185000)) nil (26075 24385 810959 660000) 0 nil] [nil nil ((12631 . 12632) (#("op_st.size()-1" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-6-face)) 11 12 (fontified t face (rainbow-delimiters-depth-6-face)) 12 13 (fontified t) 13 14 (fontified t)) . 12631) (undo-tree-id10678 . -13) (undo-tree-id10679 . -14) (undo-tree-id10680 . -14)) ((12631 . 12645) (#("0" 0 1 (fontified t)) . 12631) (t 26075 24249 344590 331000)) (26075 24249 316888 582000) 0 nil])
([nil nil ((#("->true_type" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 12387) (undo-tree-id10843 . -10)) nil (26075 24385 810958 650000) 0 nil])
nil
([nil nil ((#("->true_type" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 12632) (undo-tree-id10681 . -10) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -2) (undo-tree-id10710 . -2) (undo-tree-id10711 . -2) (undo-tree-id10712 . -2) (undo-tree-id10713 . -2) (undo-tree-id10714 . -2) (undo-tree-id10715 . -2) (undo-tree-id10716 . -2) (undo-tree-id10717 . -2) (undo-tree-id10718 . -2) (undo-tree-id10719 . -2) (undo-tree-id10720 . -2) (undo-tree-id10721 . -2) (undo-tree-id10722 . -2) (undo-tree-id10723 . -2) (undo-tree-id10724 . -2) (undo-tree-id10725 . -2) (undo-tree-id10726 . -2) (undo-tree-id10727 . -2) (undo-tree-id10728 . -2) (undo-tree-id10729 . -2) (undo-tree-id10730 . -2) (undo-tree-id10731 . -2) (undo-tree-id10732 . -2) (undo-tree-id10733 . -2) (undo-tree-id10734 . -2) (undo-tree-id10735 . -2) (undo-tree-id10736 . -2) (undo-tree-id10737 . -2) (undo-tree-id10738 . -2) (undo-tree-id10739 . -2) (undo-tree-id10740 . -2) (undo-tree-id10741 . -2) (undo-tree-id10742 . -2) (undo-tree-id10743 . -2) (undo-tree-id10744 . -2) (undo-tree-id10745 . -2) (undo-tree-id10746 . -2) (undo-tree-id10747 . -2) (undo-tree-id10748 . -2) (undo-tree-id10749 . -2) (undo-tree-id10750 . -2) (undo-tree-id10751 . -2) (undo-tree-id10752 . -2) (undo-tree-id10753 . -2) (undo-tree-id10754 . -2) (undo-tree-id10755 . -2) (undo-tree-id10756 . -2) (undo-tree-id10757 . -2) (undo-tree-id10758 . -2) (undo-tree-id10759 . -2) (undo-tree-id10760 . -2) (undo-tree-id10761 . -2) (undo-tree-id10762 . -2) (undo-tree-id10763 . -2) (undo-tree-id10764 . -2) (undo-tree-id10765 . -2) (undo-tree-id10766 . -2) (undo-tree-id10767 . -2) (undo-tree-id10768 . -2) (undo-tree-id10769 . -2) (undo-tree-id10770 . -2) (undo-tree-id10771 . -2) (undo-tree-id10772 . -2) (undo-tree-id10773 . -2) (undo-tree-id10774 . -2) (undo-tree-id10775 . -2) (undo-tree-id10776 . -2) (undo-tree-id10777 . -2) (undo-tree-id10778 . -2) (undo-tree-id10779 . -2) (undo-tree-id10780 . -2) (undo-tree-id10781 . -2) (undo-tree-id10782 . -2) (undo-tree-id10783 . -2) (undo-tree-id10784 . -2) (undo-tree-id10785 . -2) (undo-tree-id10786 . -2) (undo-tree-id10787 . -2) (undo-tree-id10788 . -2) (undo-tree-id10789 . -2) (undo-tree-id10790 . -2) (undo-tree-id10791 . -2) (undo-tree-id10792 . -2) (undo-tree-id10793 . -2) (undo-tree-id10794 . -2) (undo-tree-id10795 . -2) (undo-tree-id10796 . -2) (undo-tree-id10797 . -2) (undo-tree-id10798 . -2) (undo-tree-id10799 . -2) (undo-tree-id10800 . -2) (undo-tree-id10801 . -2) (undo-tree-id10802 . -2) (undo-tree-id10803 . -2) (undo-tree-id10804 . -2) (undo-tree-id10805 . -2) (undo-tree-id10806 . -2) (undo-tree-id10807 . -2) (undo-tree-id10808 . -2) (undo-tree-id10809 . -2) (undo-tree-id10810 . -2) (undo-tree-id10811 . -2) (undo-tree-id10812 . -2) (undo-tree-id10813 . -2) (undo-tree-id10814 . -2) (undo-tree-id10815 . -2) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -11)) nil (26075 24436 218810 607000) 0 nil])
([nil nil ((12374 . 12376) (12606 . 12608)) nil (26075 24444 668832 751000) 0 nil] [nil nil ((12113 . 12115) (12606 . 12608) (t 26075 24385 841262 522000)) ((#("ll" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 12606) (#("ll" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 12113) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (t 26075 24418 391263 842000)) (26075 24418 363770 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -12422) (12391 . 12423) 12375 (t 26075 24444 697931 577000)) nil (26075 24510 973695 361000) 0 nil])
nil
([nil nil ((#("[0]" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-4-face))) . 12417) (undo-tree-id11176 . -2) (undo-tree-id11177 . 3) (undo-tree-id11178 . -1) (undo-tree-id11179 . 1) (undo-tree-id11180 . -3)) nil (26075 24510 973694 525000) 0 nil])
([nil nil ((12417 . 12420)) nil (26075 24510 973691 435000) 0 nil])
([nil nil ((#("[0]" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-4-face))) . 12417) (undo-tree-id11170 . -2) (undo-tree-id11171 . 3) (undo-tree-id11172 . -1) (undo-tree-id11173 . 1) (undo-tree-id11174 . -3) (undo-tree-id11175 . -3)) nil (26075 24510 973690 194000) 0 nil])
([nil nil ((12418 . 12427) (#(" " 0 1 (fontified t)) . 12418) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) 12419 (12417 . 12419)) nil (26075 24510 973633 894000) 0 nil])
([nil nil ((#("[op_st.size()-1]" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-6-face)) 12 13 (fontified t face (rainbow-delimiters-depth-6-face)) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-5-face))) . 12658) (undo-tree-id10979 . -15) (undo-tree-id10980 . 16) (undo-tree-id10981 . -7) (undo-tree-id10982 . -7) (undo-tree-id10983 . -7) (undo-tree-id10984 . -7) (undo-tree-id10985 . -7) (undo-tree-id10986 . -7) (undo-tree-id10987 . -7) (undo-tree-id10988 . -7) (undo-tree-id10989 . -7) (undo-tree-id10990 . -7) (undo-tree-id10991 . -7) (undo-tree-id10992 . -7) (undo-tree-id10993 . -7) (undo-tree-id10994 . -7) (undo-tree-id10995 . -7) (undo-tree-id10996 . -7) (undo-tree-id10997 . -7) (undo-tree-id10998 . -7) (undo-tree-id10999 . -7) (undo-tree-id11000 . -7) (undo-tree-id11001 . -7) (undo-tree-id11002 . -7) (undo-tree-id11003 . -7) (undo-tree-id11004 . -7) (undo-tree-id11005 . -7) (undo-tree-id11006 . -7) (undo-tree-id11007 . -6) (undo-tree-id11008 . -6) (undo-tree-id11009 . -6) (undo-tree-id11010 . -6) (undo-tree-id11011 . -6) (undo-tree-id11012 . -6) (undo-tree-id11013 . -6) (undo-tree-id11014 . -6) (undo-tree-id11015 . -6) (undo-tree-id11016 . -6) (undo-tree-id11017 . -6) (undo-tree-id11018 . -6) (undo-tree-id11019 . -6) (undo-tree-id11020 . -6) (undo-tree-id11021 . -6) (undo-tree-id11022 . -6) (undo-tree-id11023 . -6) (undo-tree-id11024 . -6) (undo-tree-id11025 . -6) (undo-tree-id11026 . -6) (undo-tree-id11027 . -6) (undo-tree-id11028 . -6) (undo-tree-id11029 . -6) (undo-tree-id11030 . -6) (undo-tree-id11031 . -6) (undo-tree-id11032 . -6) (undo-tree-id11033 . -5) (undo-tree-id11034 . -5) (undo-tree-id11035 . -5) (undo-tree-id11036 . -5) (undo-tree-id11037 . -5) (undo-tree-id11038 . -5) (undo-tree-id11039 . -5) (undo-tree-id11040 . -5) (undo-tree-id11041 . -5) (undo-tree-id11042 . -5) (undo-tree-id11043 . -5) (undo-tree-id11044 . -5) (undo-tree-id11045 . -5) (undo-tree-id11046 . -5) (undo-tree-id11047 . -5) (undo-tree-id11048 . -5) (undo-tree-id11049 . -5) (undo-tree-id11050 . -5) (undo-tree-id11051 . -5) (undo-tree-id11052 . -5) (undo-tree-id11053 . -5) (undo-tree-id11054 . -5) (undo-tree-id11055 . -5) (undo-tree-id11056 . -5) (undo-tree-id11057 . -5) (undo-tree-id11058 . -5) (undo-tree-id11059 . -4) (undo-tree-id11060 . -4) (undo-tree-id11061 . -4) (undo-tree-id11062 . -4) (undo-tree-id11063 . -4) (undo-tree-id11064 . -4) (undo-tree-id11065 . -4) (undo-tree-id11066 . -4) (undo-tree-id11067 . -4) (undo-tree-id11068 . -4) (undo-tree-id11069 . -4) (undo-tree-id11070 . -4) (undo-tree-id11071 . -4) (undo-tree-id11072 . -4) (undo-tree-id11073 . -4) (undo-tree-id11074 . -4) (undo-tree-id11075 . -4) (undo-tree-id11076 . -4) (undo-tree-id11077 . -4) (undo-tree-id11078 . -4) (undo-tree-id11079 . -4) (undo-tree-id11080 . -4) (undo-tree-id11081 . -4) (undo-tree-id11082 . -4) (undo-tree-id11083 . -4) (undo-tree-id11084 . -4) (undo-tree-id11085 . -3) (undo-tree-id11086 . -3) (undo-tree-id11087 . -3) (undo-tree-id11088 . -3) (undo-tree-id11089 . -3) (undo-tree-id11090 . -3) (undo-tree-id11091 . -3) (undo-tree-id11092 . -3) (undo-tree-id11093 . -3) (undo-tree-id11094 . -3) (undo-tree-id11095 . -3) (undo-tree-id11096 . -3) (undo-tree-id11097 . -3) (undo-tree-id11098 . -3) (undo-tree-id11099 . -3) (undo-tree-id11100 . -3) (undo-tree-id11101 . -3) (undo-tree-id11102 . -3) (undo-tree-id11103 . -3) (undo-tree-id11104 . -3) (undo-tree-id11105 . -3) (undo-tree-id11106 . -3) (undo-tree-id11107 . -3) (undo-tree-id11108 . -3) (undo-tree-id11109 . -3) (undo-tree-id11110 . -3) (undo-tree-id11111 . -2) (undo-tree-id11112 . -2) (undo-tree-id11113 . -2) (undo-tree-id11114 . -2) (undo-tree-id11115 . -2) (undo-tree-id11116 . -2) (undo-tree-id11117 . -2) (undo-tree-id11118 . -2) (undo-tree-id11119 . -2) (undo-tree-id11120 . -2) (undo-tree-id11121 . -2) (undo-tree-id11122 . -2) (undo-tree-id11123 . -2) (undo-tree-id11124 . -2) (undo-tree-id11125 . -2) (undo-tree-id11126 . -2) (undo-tree-id11127 . -2) (undo-tree-id11128 . -2) (undo-tree-id11129 . -2) (undo-tree-id11130 . -2) (undo-tree-id11131 . -2) (undo-tree-id11132 . -2) (undo-tree-id11133 . -2) (undo-tree-id11134 . -2) (undo-tree-id11135 . -2) (undo-tree-id11136 . -2) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . 16) (undo-tree-id11164 . -1) (undo-tree-id11165 . 1) (undo-tree-id11166 . -16) (undo-tree-id11167 . -16)) nil (26075 24510 973626 414000) 0 nil])
([nil nil ((12660 . 12668) (#("w" 0 1 (fontified t)) . -12660) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) 12661 (12660 . 12661) (#("e" 0 1 (fontified t)) . -12660) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) 12661 (12660 . 12661) (#("e" 0 1 (fontified t)) . -12660) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (#("y" 0 1 (fontified t)) . -12661) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) 12662 (12658 . 12662)) nil (26075 24510 973391 604000) 0 nil])
([nil nil ((12659 . 12660) (12658 . 12659) (#("." 0 1 (fontified t)) . 12658) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (t 26075 24511 1267 604000)) nil (26075 24537 148077 861000) 0 nil])
([nil nil ((12659 . 12660) (12658 . 12660) (t 26075 24528 471268 304000)) nil (26075 24545 77854 821000) 0 nil] [nil nil ((12658 . 12660) (t 26075 24528 471268 304000)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t face (rainbow-delimiters-depth-5-face))) . 12658) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1)) (26075 24537 144698 382000) 0 nil])
([nil nil ((12421 . 12422) (12420 . 12421) (#("." 0 1 (fontified t)) . -12420) (undo-tree-id11213 . -1) 12421 (12418 . 12419) (12417 . 12419) (t 26075 24545 104602 316000)) nil (26075 24564 599653 193000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified nil)) . -11379) (11337 . 11380) (t 26075 24564 627936 444000)) nil (26075 24641 661324 247000) 0 nil])
([nil nil ((11343 . 11344) (11354 . 11356) (11349 . 11354) (#("r" 0 1 (fontified t)) . -11349) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) 11350 (11348 . 11350) (#("y" 0 1 (fontified t)) . -11348) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) 11349 (11343 . 11349) (#("v" 0 1 (fontified t)) . -11345) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) 11346 (11344 . 11346) (11342 . 11344) (11340 . 11342) (11337 . 11340) (#("  " 0 2 (fontified t)) . 11337) (undo-tree-id11220 . -2) (undo-tree-id11221 . -2) 11339 (11337 . 11339) (#(" " 0 1 (rear-nonsticky t fontified nil)) . 11337) (11336 . 11337) (#("

   " 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t)) . 11336) (undo-tree-id11222 . -1) (undo-tree-id11223 . -2) (undo-tree-id11224 . -5) (undo-tree-id11225 . -5) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -2) (undo-tree-id11229 . -2) (undo-tree-id11230 . -1) 11341) nil (26075 24641 661319 940000) 0 nil])
([nil nil ((11345 . 11346) (#("f" 0 1 (fontified t)) . -11345) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) 11346 (11340 . 11346) (11338 . 11340) (11338 . 11339) 11343 (t 26075 24641 691272 900000)) nil (26075 24661 301115 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11728 . 11729) (#("
" 0 1 (fontified nil)) . -11794) (11726 . 11795) 11719 (t 26075 24661 327940 357000)) nil (26075 24856 996300 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11659 . 11660) (#("
" 0 1 (fontified nil)) . -11716) (11657 . 11717) 11649) nil (26075 24866 292630 789000) 0 nil] [nil nil ((nil rear-nonsticky nil 11486 . 11487) (#("
" 0 1 (fontified nil)) . -11543) (11484 . 11544) 11481) ((#("
  if(!op_st.empty()) printf(\"%lld\\n\",op_st[0]->true_type);
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky nil) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil face (rainbow-delimiters-depth-2-face)) 6 7 (fontified nil face font-lock-negation-char-face) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil face (rainbow-delimiters-depth-3-face)) 19 20 (fontified nil face (rainbow-delimiters-depth-3-face)) 20 21 (fontified nil face (rainbow-delimiters-depth-2-face)) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-2-face)) 29 30 (fontified nil face font-lock-string-face) 30 31 (fontified nil face font-lock-string-face) 31 32 (fontified nil face font-lock-string-face) 32 33 (fontified nil face font-lock-string-face) 33 34 (fontified nil face font-lock-string-face) 34 35 (fontified nil face font-lock-string-face) 35 36 (fontified nil face font-lock-string-face) 36 37 (fontified nil face font-lock-string-face) 37 38 (fontified nil) 38 39 (fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil face (rainbow-delimiters-depth-3-face)) 44 45 (fontified nil) 45 46 (fontified nil face (rainbow-delimiters-depth-3-face)) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 53 (fontified nil) 53 54 (fontified nil) 54 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 58 (fontified nil face (rainbow-delimiters-depth-2-face)) 58 59 (fontified nil) 59 60 (fontified nil)) . 11484) (undo-tree-id11548 . -1) (undo-tree-id11549 . -59) (undo-tree-id11550 . -3) (undo-tree-id11551 . -3) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -3) (undo-tree-id11556 . -3) (undo-tree-id11557 . -3) (undo-tree-id11558 . -3) (undo-tree-id11559 . -3) (undo-tree-id11560 . -3) (undo-tree-id11561 . -3) (undo-tree-id11562 . -3) (undo-tree-id11563 . -3) (undo-tree-id11564 . -3) (undo-tree-id11565 . -3) (undo-tree-id11566 . -3) (undo-tree-id11567 . -3) (undo-tree-id11568 . -3) (undo-tree-id11569 . -3) (undo-tree-id11570 . -3) (undo-tree-id11571 . -3) (undo-tree-id11572 . -3) (undo-tree-id11573 . -3) (undo-tree-id11574 . -3) (undo-tree-id11575 . -3) (undo-tree-id11576 . -3) (undo-tree-id11577 . -3) (undo-tree-id11578 . -3) (undo-tree-id11579 . -3) (undo-tree-id11580 . -3) (undo-tree-id11581 . -3) (undo-tree-id11582 . -3) (undo-tree-id11583 . -3) (undo-tree-id11584 . -3) (undo-tree-id11585 . -3) (undo-tree-id11586 . -3) (undo-tree-id11587 . -3) (undo-tree-id11588 . -3) (undo-tree-id11589 . -3) (undo-tree-id11590 . -3) (undo-tree-id11591 . -3) (undo-tree-id11592 . -3) (undo-tree-id11593 . -3) (undo-tree-id11594 . -3) (undo-tree-id11595 . -3) (undo-tree-id11596 . -3) (undo-tree-id11597 . -3) (undo-tree-id11598 . -3) (undo-tree-id11599 . -3) (undo-tree-id11600 . -3) (undo-tree-id11601 . -3) (undo-tree-id11602 . -3) (undo-tree-id11603 . -3) (undo-tree-id11604 . -3) (undo-tree-id11605 . -3) (undo-tree-id11606 . -3) (undo-tree-id11607 . -3) (undo-tree-id11608 . -3) (undo-tree-id11609 . -3) (undo-tree-id11610 . -3) (undo-tree-id11611 . -3) (undo-tree-id11612 . -3) (undo-tree-id11613 . -3) (undo-tree-id11614 . -3) (undo-tree-id11615 . -3) (undo-tree-id11616 . -3) (undo-tree-id11617 . -3) (undo-tree-id11618 . -3) (undo-tree-id11619 . -3) (undo-tree-id11620 . -3) (undo-tree-id11621 . -3) (undo-tree-id11622 . -3) (undo-tree-id11623 . -3) (undo-tree-id11624 . -3) (undo-tree-id11625 . -3) (undo-tree-id11626 . -3) (undo-tree-id11627 . -3) (undo-tree-id11628 . -3) (undo-tree-id11629 . -3) (undo-tree-id11630 . -3) (undo-tree-id11631 . -3) (undo-tree-id11632 . -3) (undo-tree-id11633 . -3) (undo-tree-id11634 . -3) (undo-tree-id11635 . -3) (undo-tree-id11636 . -3) (undo-tree-id11637 . -3) (undo-tree-id11638 . -3) (undo-tree-id11639 . -3) (undo-tree-id11640 . -3) (undo-tree-id11641 . -3) (undo-tree-id11642 . -3) (undo-tree-id11643 . -3) (undo-tree-id11644 . -3) (undo-tree-id11645 . -3) (undo-tree-id11646 . -3) (undo-tree-id11647 . -3) (undo-tree-id11648 . -3) (undo-tree-id11649 . -3) (undo-tree-id11650 . -3) (undo-tree-id11651 . -3) (undo-tree-id11652 . -3) (undo-tree-id11653 . -3) (undo-tree-id11654 . -3) (undo-tree-id11655 . -3) (undo-tree-id11656 . -3) (undo-tree-id11657 . -3) (undo-tree-id11658 . -3) (undo-tree-id11659 . -3) (undo-tree-id11660 . -3) (undo-tree-id11661 . -3) (undo-tree-id11662 . -3) (undo-tree-id11663 . -3) (undo-tree-id11664 . -3) (undo-tree-id11665 . -3) (undo-tree-id11666 . -3) (undo-tree-id11667 . -3) (undo-tree-id11668 . -3) (undo-tree-id11669 . -3) (undo-tree-id11670 . -3) (undo-tree-id11671 . -3) (undo-tree-id11672 . -3) (undo-tree-id11673 . -3) (undo-tree-id11674 . -3) (undo-tree-id11675 . -3) (undo-tree-id11676 . -3) (undo-tree-id11677 . -3) (undo-tree-id11678 . -3) (undo-tree-id11679 . -3) (undo-tree-id11680 . -3) (undo-tree-id11681 . -3) (undo-tree-id11682 . -3) (undo-tree-id11683 . -3) (undo-tree-id11684 . -3) (undo-tree-id11685 . -3) (undo-tree-id11686 . -3) (undo-tree-id11687 . -3) (undo-tree-id11688 . -3) (undo-tree-id11689 . -3) (undo-tree-id11690 . -3) (undo-tree-id11691 . -3) (undo-tree-id11692 . -3) (undo-tree-id11693 . -3) (undo-tree-id11694 . -3) (undo-tree-id11695 . -3) (undo-tree-id11696 . -3) (undo-tree-id11697 . -3) (undo-tree-id11698 . -3) (undo-tree-id11699 . -3) (undo-tree-id11700 . -3) (undo-tree-id11701 . -3) (undo-tree-id11702 . -3) (undo-tree-id11703 . -3) (undo-tree-id11704 . -3) (undo-tree-id11705 . -3) (undo-tree-id11706 . -3) (undo-tree-id11707 . -3) (undo-tree-id11708 . -3) (undo-tree-id11709 . -3) (undo-tree-id11710 . -3) (undo-tree-id11711 . -3) (undo-tree-id11712 . -3) (undo-tree-id11713 . -3) (undo-tree-id11714 . -3) (undo-tree-id11715 . -3) (undo-tree-id11716 . -3) (undo-tree-id11717 . -3) (undo-tree-id11718 . -3) (undo-tree-id11719 . -3) (undo-tree-id11720 . -3) (undo-tree-id11721 . -3) (undo-tree-id11722 . -3) (undo-tree-id11723 . -3) (undo-tree-id11724 . -3) (undo-tree-id11725 . -3) (undo-tree-id11726 . -3) (undo-tree-id11727 . -3) (undo-tree-id11728 . -3) (undo-tree-id11729 . -3) (undo-tree-id11730 . -3) (undo-tree-id11731 . -3) (undo-tree-id11732 . -3) (undo-tree-id11733 . -3) (undo-tree-id11734 . -3) (undo-tree-id11735 . -3) (undo-tree-id11736 . -3) (undo-tree-id11737 . -3) (undo-tree-id11738 . -3) (undo-tree-id11739 . -3) (undo-tree-id11740 . -3) (undo-tree-id11741 . -3) (undo-tree-id11742 . -3) (11543 . 11544) (nil rear-nonsticky t 11486 . 11487) (t 26075 24854 27948 170000)) (26075 24853 972181 831000) 0 nil] [nil nil ((nil rear-nonsticky nil 11484 . 11485) (nil fontified nil 11484 . 11485) (11484 . 11485) 11483) ((#("o" 0 1 (fontified nil rear-nonsticky nil)) . 11484) (nil rear-nonsticky t 11484 . 11485)) (26075 24842 831744 38000) 0 nil] [nil nil ((nil rear-nonsticky nil 11484 . 11485) (nil fontified nil 11484 . 11485) (11484 . 11485) 11483) ((#("o" 0 1 (fontified nil rear-nonsticky nil)) . 11484) (nil rear-nonsticky t 11484 . 11485)) (26075 24841 392445 53000) 0 nil] [nil nil ((nil rear-nonsticky nil 11426 . 11427) (11424 . 11493) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . 11424) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) 11425 (t 26075 24801 331279 365000)) ((11424 . 11425) (#("
  debug;
  if(!op_st.empty()) printf(\"%lld\\n\",op_st[0]->true_type);
" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 12 (fontified t) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-2-face)) 15 16 (fontified t face font-lock-negation-char-face) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t face (rainbow-delimiters-depth-2-face)) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-3-face)) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-2-face)) 67 68 (fontified t) 68 69 (fontified t)) . 11424) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -68) (undo-tree-id11322 . -1) (undo-tree-id11323 . -68) (undo-tree-id11324 . -3) (undo-tree-id11325 . -3) (undo-tree-id11326 . -69) (undo-tree-id11327 . -69) (undo-tree-id11328 . -10) (undo-tree-id11329 . -10) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -3) (undo-tree-id11334 . -3) (undo-tree-id11335 . -3) (undo-tree-id11336 . -3) (undo-tree-id11337 . -3) (undo-tree-id11338 . -3) (undo-tree-id11339 . -3) (undo-tree-id11340 . -3) (undo-tree-id11341 . -3) (undo-tree-id11342 . -3) (undo-tree-id11343 . -3) (undo-tree-id11344 . -3) (undo-tree-id11345 . -3) (undo-tree-id11346 . -3) (undo-tree-id11347 . -3) (undo-tree-id11348 . -3) (undo-tree-id11349 . -3) (undo-tree-id11350 . -3) (undo-tree-id11351 . -3) (undo-tree-id11352 . -3) (undo-tree-id11353 . -3) (undo-tree-id11354 . -3) (undo-tree-id11355 . -3) (undo-tree-id11356 . -3) (undo-tree-id11357 . -3) (undo-tree-id11358 . -3) (undo-tree-id11359 . -3) (undo-tree-id11360 . -3) (undo-tree-id11361 . -3) (undo-tree-id11362 . -3) (undo-tree-id11363 . -3) (undo-tree-id11364 . -3) (undo-tree-id11365 . -3) (undo-tree-id11366 . -3) (undo-tree-id11367 . -3) (undo-tree-id11368 . -3) (undo-tree-id11369 . -3) (undo-tree-id11370 . -3) (undo-tree-id11371 . -3) (undo-tree-id11372 . -3) (undo-tree-id11373 . -3) (undo-tree-id11374 . -3) (undo-tree-id11375 . -3) (undo-tree-id11376 . -3) (undo-tree-id11377 . -3) (undo-tree-id11378 . -3) (undo-tree-id11379 . -3) (undo-tree-id11380 . -3) (undo-tree-id11381 . -3) (undo-tree-id11382 . -3) (undo-tree-id11383 . -3) (undo-tree-id11384 . -3) (undo-tree-id11385 . -3) (undo-tree-id11386 . -3) (undo-tree-id11387 . -3) (undo-tree-id11388 . -3) (undo-tree-id11389 . -3) (undo-tree-id11390 . -3) (undo-tree-id11391 . -3) (undo-tree-id11392 . -3) (undo-tree-id11393 . -3) (undo-tree-id11394 . -3) (undo-tree-id11395 . -3) (undo-tree-id11396 . -3) (undo-tree-id11397 . -3) (undo-tree-id11398 . -3) (undo-tree-id11399 . -3) (undo-tree-id11400 . -3) (undo-tree-id11401 . -3) (undo-tree-id11402 . -3) (undo-tree-id11403 . -3) (undo-tree-id11404 . -3) (undo-tree-id11405 . -3) (undo-tree-id11406 . -3) (undo-tree-id11407 . -3) (undo-tree-id11408 . -3) (undo-tree-id11409 . -3) (undo-tree-id11410 . -3) (undo-tree-id11411 . -3) (undo-tree-id11412 . -3) (undo-tree-id11413 . -3) (undo-tree-id11414 . -3) (undo-tree-id11415 . -3) (undo-tree-id11416 . -3) (undo-tree-id11417 . -3) (undo-tree-id11418 . -3) (undo-tree-id11419 . -3) (undo-tree-id11420 . -3) (undo-tree-id11421 . -3) (undo-tree-id11422 . -3) (undo-tree-id11423 . -3) (undo-tree-id11424 . -3) (undo-tree-id11425 . -3) (undo-tree-id11426 . -3) (undo-tree-id11427 . -3) (undo-tree-id11428 . -3) (undo-tree-id11429 . -3) (undo-tree-id11430 . -3) (undo-tree-id11431 . -3) (undo-tree-id11432 . -3) (undo-tree-id11433 . -3) (undo-tree-id11434 . -3) (undo-tree-id11435 . -3) (undo-tree-id11436 . -3) (undo-tree-id11437 . -3) (undo-tree-id11438 . -3) (undo-tree-id11439 . -3) (undo-tree-id11440 . -3) (undo-tree-id11441 . -3) (undo-tree-id11442 . -3) (undo-tree-id11443 . -3) (undo-tree-id11444 . -3) (undo-tree-id11445 . -3) (undo-tree-id11446 . -3) (undo-tree-id11447 . -3) (undo-tree-id11448 . -3) (undo-tree-id11449 . -3) (undo-tree-id11450 . -3) (undo-tree-id11451 . -3) (undo-tree-id11452 . -3) (undo-tree-id11453 . -3) (undo-tree-id11454 . -3) (undo-tree-id11455 . -3) (undo-tree-id11456 . -3) (undo-tree-id11457 . -3) (undo-tree-id11458 . -3) (undo-tree-id11459 . -3) (undo-tree-id11460 . -3) (undo-tree-id11461 . -3) (undo-tree-id11462 . -3) (undo-tree-id11463 . -3) (undo-tree-id11464 . -3) (undo-tree-id11465 . -3) (undo-tree-id11466 . -3) (undo-tree-id11467 . -3) (undo-tree-id11468 . -3) (undo-tree-id11469 . -3) (undo-tree-id11470 . -3) (undo-tree-id11471 . -3) (undo-tree-id11472 . -3) (undo-tree-id11473 . -3) (undo-tree-id11474 . -3) (undo-tree-id11475 . -3) (undo-tree-id11476 . -3) (undo-tree-id11477 . -3) (undo-tree-id11478 . -3) (undo-tree-id11479 . -3) (undo-tree-id11480 . -3) (undo-tree-id11481 . -3) (undo-tree-id11482 . -3) (undo-tree-id11483 . -3) (undo-tree-id11484 . -3) (undo-tree-id11485 . -3) (undo-tree-id11486 . -3) (undo-tree-id11487 . -3) (undo-tree-id11488 . -3) (undo-tree-id11489 . -3) (undo-tree-id11490 . -3) (undo-tree-id11491 . -3) (undo-tree-id11492 . -3) (undo-tree-id11493 . -3) (undo-tree-id11494 . -3) (undo-tree-id11495 . -3) (undo-tree-id11496 . -3) (undo-tree-id11497 . -3) (undo-tree-id11498 . -3) (undo-tree-id11499 . -3) (undo-tree-id11500 . -3) (undo-tree-id11501 . -3) (undo-tree-id11502 . -3) (undo-tree-id11503 . -3) (undo-tree-id11504 . -3) (undo-tree-id11505 . -3) (undo-tree-id11506 . -3) (undo-tree-id11507 . -3) (undo-tree-id11508 . -3) (undo-tree-id11509 . -3) (undo-tree-id11510 . -3) (undo-tree-id11511 . -3) (undo-tree-id11512 . -3) (undo-tree-id11513 . -3) (undo-tree-id11514 . -3) (undo-tree-id11515 . -3) (undo-tree-id11516 . -3) (undo-tree-id11517 . -3) (undo-tree-id11518 . -3) (undo-tree-id11519 . -3) (undo-tree-id11520 . -3) (undo-tree-id11521 . -3) (undo-tree-id11522 . -3) (undo-tree-id11523 . -3) (undo-tree-id11524 . -3) (undo-tree-id11525 . -3) (undo-tree-id11526 . -3) (undo-tree-id11527 . -3) (undo-tree-id11528 . -3) (undo-tree-id11529 . -3) (undo-tree-id11530 . -3) (undo-tree-id11531 . -3) (undo-tree-id11532 . -3) (undo-tree-id11533 . -3) (undo-tree-id11534 . -3) (undo-tree-id11535 . -3) (undo-tree-id11536 . -3) (undo-tree-id11537 . -3) (undo-tree-id11538 . -3) (undo-tree-id11539 . -3) (undo-tree-id11540 . -3) (undo-tree-id11541 . -3) (undo-tree-id11542 . -3) (undo-tree-id11543 . -3) (undo-tree-id11544 . -3) (undo-tree-id11545 . -3) (undo-tree-id11546 . -3) (undo-tree-id11547 . -3) (nil rear-nonsticky t 11426 . 11427) (t 26075 24824 614613 645000)) (26075 24824 585160 981000) 0 nil])
([nil nil ((11665 . 11666) (11660 . 11665) (11658 . 11660) (11658 . 11659) 11660 (t 26075 24866 344615 334000)) nil (26075 24871 832984 596000) 0 nil])
nil
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 11544 . 11545) (#("
" 0 1 (fontified nil)) . -11601) (11542 . 11602) 11505 (t 26075 24871 871282 223000)) nil (26075 24917 693990 620000) 0 nil])
([nil nil ((11550 . 11551) (11545 . 11550) (11543 . 11545) (11543 . 11544) 11545) nil (26075 24917 693986 706000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11456 . 11457) (#("
" 0 1 (fontified nil)) . -11512) (11454 . 11513) 11424 (t 26075 24917 727950 750000)) nil (26075 24953 855 98000) 0 nil])
([nil nil ((#("  for(int i=0;i<ret.size();i++) bnf_st.push_back(ret[i]);
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t c-type c-decl-id-start face font-lock-type-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-2-face)) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-3-face)) 55 56 (fontified t face (rainbow-delimiters-depth-2-face)) 56 57 (fontified t) 57 58 (fontified t)) . 11455) (undo-tree-id11743 . -57) (undo-tree-id11744 . -2) (undo-tree-id11745 . -2) (undo-tree-id11746 . -58) (undo-tree-id11747 . -58) 11457 (t 26075 24953 27952 181000)) nil (26075 25060 533699 276000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11456 . 11457) (#("
" 0 1 (fontified nil)) . -11513) (11454 . 11514) 11408) nil (26075 25060 533685 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11603 . 11604) (#("
" 0 1 (fontified nil)) . -11660) (11601 . 11661) 11546 (t 26075 25060 564623 220000)) nil (26075 25127 280897 870000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11545 . 11546) (#("
" 0 1 (fontified nil)) . -11602) (11543 . 11603) 11541 (t 26075 25079 364623 992000)) nil (26075 25137 86992 211000) 0 nil] [nil nil ((nil rear-nonsticky nil 11603 . 11604) (#("
" 0 1 (fontified nil)) . -11660) (11601 . 11661) 11562 (t 26075 25079 364623 992000)) ((#("
  if(!op_st.empty()) printf(\"%lld\\n\",op_st[0]->true_type);
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky nil) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil face (rainbow-delimiters-depth-2-face)) 6 7 (fontified nil face font-lock-negation-char-face) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil face (rainbow-delimiters-depth-3-face)) 19 20 (fontified nil face (rainbow-delimiters-depth-3-face)) 20 21 (fontified nil face (rainbow-delimiters-depth-2-face)) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-2-face)) 29 30 (fontified nil face font-lock-string-face) 30 31 (fontified nil face font-lock-string-face) 31 32 (fontified nil face font-lock-string-face) 32 33 (fontified nil face font-lock-string-face) 33 34 (fontified nil face font-lock-string-face) 34 35 (fontified nil face font-lock-string-face) 35 36 (fontified nil face font-lock-string-face) 36 37 (fontified nil face font-lock-string-face) 37 38 (fontified nil) 38 39 (fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil face (rainbow-delimiters-depth-3-face)) 44 45 (fontified nil) 45 46 (fontified nil face (rainbow-delimiters-depth-3-face)) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 53 (fontified nil) 53 54 (fontified nil) 54 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 58 (fontified nil face (rainbow-delimiters-depth-2-face)) 58 59 (fontified nil) 59 60 (fontified nil)) . 11601) (undo-tree-id11748 . -1) (undo-tree-id11749 . -59) (undo-tree-id11750 . -3) (undo-tree-id11751 . -3) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -3) (11660 . 11661) (nil rear-nonsticky t 11603 . 11604)) (26075 25127 273545 964000) 0 nil])
([nil nil ((11661 . 11662) (#("}" 0 1 (fontified nil)) . -11661) (11661 . 11662) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11636) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . 1) (undo-tree-id11841 . -1) 11637 (11635 . 11637) (t 26075 25137 111293 8000)) nil (26075 25235 877180 747000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11664 . 11665) (#("
" 0 1 (fontified nil)) . -11721) (11662 . 11722) 11660) nil (26075 25235 877176 779000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11661) (undo-tree-id11756 . 1) (undo-tree-id11757 . -1) (undo-tree-id11758 . 1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) 11662 (11721 . 11722) (#("}" 0 1 (fontified nil)) . -11721) (11721 . 11722)) nil (26075 25235 877171 785000) 0 nil])
([nil nil ((11724 . 11725) (11662 . 11666) (#("  " 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky t)) . 11662) (11721 . 11722) (11695 . 11698) (t 26075 25235 904630 335000)) nil (26075 25294 330401 542000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -10993) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) 10994 (10434 . 10435) (10433 . 10434) (#("." 0 1 (fontified t)) . -10433) (undo-tree-id11844 . -1) 10434 (#("&" 0 1 (fontified t)) . -10271) (undo-tree-id11845 . -1) 10272 (10232 . 10233) (8259 . 8260) (#("*" 0 1 (fontified t)) . -8259) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) 8260 (8259 . 8260) (7544 . 7545) (t 26075 25294 381299 370000)) nil (26075 25490 920787 523000) 0 nil])
([nil nil ((apply -3 11349 11460 undo--wrap-and-run-primitive-undo 11349 11460 ((11351 . 11354) 11408)) (t 26075 25492 97974 83000)) nil (26075 25585 857403 752000) 0 nil])
([nil nil ((apply -3 11460 11531 undo--wrap-and-run-primitive-undo 11460 11531 ((11462 . 11465) 11519))) nil (26075 25585 857403 212000) 0 nil])
([nil nil ((apply -3 11522 11555 undo--wrap-and-run-primitive-undo 11522 11555 ((11524 . 11527) 11531))) nil (26075 25585 857402 668000) 0 nil])
([nil nil ((apply -3 11555 11676 undo--wrap-and-run-primitive-undo 11555 11676 ((11557 . 11560) 11614))) nil (26075 25585 857402 137000) 0 nil])
([nil nil ((#("    if(!op_st.empty()) printf(\"%lld %d\\n\",op_st[0]->true_type,i);}
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t face font-lock-negation-char-face) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face)) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-3-face)) 64 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-2-face)) 66 67 (fontified t)) . 11676) (undo-tree-id11851 . -66) (undo-tree-id11852 . -13) (undo-tree-id11853 . -13) (undo-tree-id11854 . -67) (undo-tree-id11855 . -67) 11689) nil (26075 25585 857401 40000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 11649) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1)) nil (26075 25585 857396 533000) 0 nil])
([nil nil ((apply -9 11675 11849 undo--wrap-and-run-primitive-undo 11675 11849 ((11751 . 11754) (11739 . 11742) (11677 . 11680) 11802))) nil (26075 25585 857387 271000) 0 nil])
([nil nil ((apply -9 11900 12004 undo--wrap-and-run-primitive-undo 11900 12004 ((11943 . 11946) (11931 . 11934) (11902 . 11905) 11994))) nil (26075 25585 857382 360000) 0 nil])
([nil nil ((apply -6 12841 12932 undo--wrap-and-run-primitive-undo 12841 12932 ((12880 . 12883) (12846 . 12849) 12841)) (t 26075 25585 911311 218000)) nil (26075 25636 739480 837000) 0 nil])
([nil nil ((13150 . 13151) (#("0" 0 1 (fontified t)) . 13150)) nil (26075 25636 739480 293000) 0 nil])
([nil nil ((13150 . 13151) (#("u" 0 1 (fontified t)) . 13150) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1)) nil (26075 25636 739478 697000) 0 nil])
([nil nil ((13163 . 13164) (#("q" 0 1 (fontified t)) . -13163) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) 13164 (13162 . 13164) (13160 . 13162) (13159 . 13160) (13150 . 13159) (#("i" 0 1 (fontified t)) . -13150) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (#("o" 0 1 (fontified t)) . -13151) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) 13152 (13150 . 13152) (#("i" 0 1 (fontified t)) . 13150) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1)) nil (26075 25636 739451 113000) 0 nil])
([nil nil ((8179 . 8181) (8178 . 8179) (8176 . 8178) (8175 . 8176) (t 26075 25636 791313 282000)) nil (26075 25694 780727 488000) 0 nil])
([nil nil ((#("true_type)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face))) . 13173) (undo-tree-id12127 . -9) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) (undo-tree-id12185 . -1) (undo-tree-id12186 . -1) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1) (undo-tree-id12189 . -1) (undo-tree-id12190 . -1) (undo-tree-id12191 . -1) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -10) (t 26075 25694 811315 643000)) nil (26075 25733 664481 647000) 0 nil])
([nil nil ((13173 . 13176) (13173 . 13174) (#(")" 0 1 (fontified nil)) . -13173) (13173 . 13174)) nil (26075 25733 664416 687000) 0 nil])
([nil nil ((8177 . 8178) (#("2" 0 1 (fontified t)) . 8177) (undo-tree-id12210 . -1) (t 26075 25733 697983 885000)) nil (26075 25805 740902 365000) 0 nil])
([nil nil ((8122 . 8123) (#("2" 0 1 (fontified t)) . 8122) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (t 26075 25805 771320 141000)) nil (26075 25822 472030 476000) 0 nil])
([nil nil ((13007 . 13008) (13004 . 13007) (13002 . 13004) (12993 . 13002) (#("b" 0 1 (fontified nil)) . 12993) (12993 . 12994) (#("bnf_token" 0 9 (fontified nil)) . -12993) (12993 . 13002) (#("b" 0 1 (fontified t)) . -12993) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) 12994 (12993 . 12994) (#("t" 0 1 (fontified t)) . -12993) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (#("o" 0 1 (fontified t)) . -12994) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (#("k" 0 1 (fontified t)) . -12995) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (#("e" 0 1 (fontified t)) . -12996) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (#("n" 0 1 (fontified t)) . -12997) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) 12998 (12980 . 12998) (#("to" 0 2 (fontified nil)) . 12980) (12980 . 12982) (#("token_class::token" 0 18 (fontified nil)) . -12980) (12980 . 12998) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -12980) (undo-tree-id12412 . -2) (undo-tree-id12413 . -2) 12982 (12980 . 12982) (12973 . 12975) (#("    " 0 4 (fontified t)) . 12973) 12982 (12979 . 12982) (#("e" 0 1 (fontified t)) . -12979) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) 12980 (12977 . 12980) (12972 . 12977) (13272 . 13277) (13271 . 13272) (13268 . 13271) (13266 . 13268) (13248 . 13266) (#("to" 0 2 (fontified nil)) . 13248) (13248 . 13250) (#("token_class::token" 0 18 (fontified nil)) . -13248) (13248 . 13266) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -13248) (undo-tree-id12416 . -2) (undo-tree-id12417 . -2) 13250 (13248 . 13250) (13241 . 13243) (#("    " 0 4 (fontified t)) . 13241) 13250 (13245 . 13250) (13240 . 13245) (#("    " 0 4 (fontified t)) . 13240) (undo-tree-id12418 . -4) (undo-tree-id12419 . -4) 13244 (13239 . 13244) (t 26075 25822 501320 821000) 13234) nil (26075 26248 923921 110000) 0 nil])
([nil nil ((#("  case token_class::token::Lkh:
" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 18 (fontified t face font-lock-constant-face) 18 20 (fontified t) 20 25 (fontified t face font-lock-constant-face) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t c-type c-decl-end) 31 32 (fontified t)) . 13277) (undo-tree-id12394 . -31) (undo-tree-id12395 . 1) (undo-tree-id12396 . -30) (undo-tree-id12397 . -30) (undo-tree-id12398 . -32) (undo-tree-id12399 . -32) 13307) nil (26075 26248 923902 331000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12974 . 12975) (#("
" 0 1 (fontified nil)) . -13004) (12972 . 13005)) nil (26075 26248 923897 787000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 13309) (undo-tree-id12252 . -4) (undo-tree-id12253 . 5) (undo-tree-id12254 . -2) (undo-tree-id12255 . -2) (undo-tree-id12256 . -5) (undo-tree-id12257 . -5) (undo-tree-id12258 . -2) (undo-tree-id12259 . -2) (undo-tree-id12260 . -2) (undo-tree-id12261 . -2) (undo-tree-id12262 . -2) (undo-tree-id12263 . -2) (undo-tree-id12264 . -2) (undo-tree-id12265 . -2) (undo-tree-id12266 . -2) (undo-tree-id12267 . -2) (undo-tree-id12268 . -2) (undo-tree-id12269 . -2) (undo-tree-id12270 . -2) (undo-tree-id12271 . -2) (undo-tree-id12272 . -2) (undo-tree-id12273 . -2) (undo-tree-id12274 . -2) (undo-tree-id12275 . -2) (undo-tree-id12276 . -2) (undo-tree-id12277 . -2) (undo-tree-id12278 . -2) (undo-tree-id12279 . -2) (undo-tree-id12280 . -2) (undo-tree-id12281 . -2) (undo-tree-id12282 . -2) (undo-tree-id12283 . -2) (undo-tree-id12284 . -2) (undo-tree-id12285 . -2) (undo-tree-id12286 . -2) (undo-tree-id12287 . -2) (undo-tree-id12288 . -2) (undo-tree-id12289 . -2) (undo-tree-id12290 . -2) (undo-tree-id12291 . -2) (undo-tree-id12292 . -2) (undo-tree-id12293 . -2) (undo-tree-id12294 . -2) (undo-tree-id12295 . -2) (undo-tree-id12296 . -2) (undo-tree-id12297 . -2) (undo-tree-id12298 . -2) (undo-tree-id12299 . -2) (undo-tree-id12300 . -2) (undo-tree-id12301 . -2) (undo-tree-id12302 . -2) (undo-tree-id12303 . -2) (undo-tree-id12304 . -2) (undo-tree-id12305 . -2) (undo-tree-id12306 . -2) (undo-tree-id12307 . -2) (undo-tree-id12308 . -2) (undo-tree-id12309 . -2) (undo-tree-id12310 . -2) (undo-tree-id12311 . -2) (undo-tree-id12312 . -2) (undo-tree-id12313 . -2) (undo-tree-id12314 . -2) (undo-tree-id12315 . -2) (undo-tree-id12316 . -2) (undo-tree-id12317 . -2) (undo-tree-id12318 . -2) (undo-tree-id12319 . -2) (undo-tree-id12320 . -2) (undo-tree-id12321 . -2) (undo-tree-id12322 . -2) (undo-tree-id12323 . -2) (undo-tree-id12324 . -2) (undo-tree-id12325 . -2) (undo-tree-id12326 . -2) (undo-tree-id12327 . -2) (undo-tree-id12328 . -2) (undo-tree-id12329 . -2) (undo-tree-id12330 . -2) (undo-tree-id12331 . -2) (undo-tree-id12332 . -2) (undo-tree-id12333 . -2) (undo-tree-id12334 . -2) (undo-tree-id12335 . -2) (undo-tree-id12336 . -2) (undo-tree-id12337 . -2) (undo-tree-id12338 . -2) (undo-tree-id12339 . -2) (undo-tree-id12340 . -2) (undo-tree-id12341 . -2) (undo-tree-id12342 . -2) (undo-tree-id12343 . -2) (undo-tree-id12344 . -2) (undo-tree-id12345 . -2) (undo-tree-id12346 . -2) (undo-tree-id12347 . -2) (undo-tree-id12348 . -2) (undo-tree-id12349 . -2) (undo-tree-id12350 . -2) (undo-tree-id12351 . -2) (undo-tree-id12352 . -2) (undo-tree-id12353 . -2) (undo-tree-id12354 . -2) (undo-tree-id12355 . -2) (undo-tree-id12356 . -2) (undo-tree-id12357 . -2) (undo-tree-id12358 . -2) (undo-tree-id12359 . -2) (undo-tree-id12360 . -2) (undo-tree-id12361 . -2) (undo-tree-id12362 . -2) (undo-tree-id12363 . -2) (undo-tree-id12364 . -2) (undo-tree-id12365 . -2) (undo-tree-id12366 . -2) (undo-tree-id12367 . -2) (undo-tree-id12368 . -2) (undo-tree-id12369 . -2) (undo-tree-id12370 . -2) (undo-tree-id12371 . -2) (undo-tree-id12372 . -2) (undo-tree-id12373 . -2) (undo-tree-id12374 . -2) (undo-tree-id12375 . -2) (undo-tree-id12376 . -2) (undo-tree-id12377 . -2) (undo-tree-id12378 . -2) (undo-tree-id12379 . -2) (undo-tree-id12380 . -2) (undo-tree-id12381 . -2) (undo-tree-id12382 . -2) (undo-tree-id12383 . -2) (undo-tree-id12384 . -2) (undo-tree-id12385 . -2) (undo-tree-id12386 . -2) (undo-tree-id12387 . -2) (undo-tree-id12388 . -2) (undo-tree-id12389 . -2) (undo-tree-id12390 . -2) (undo-tree-id12391 . -2) (undo-tree-id12392 . -2) (undo-tree-id12393 . -5) 13311) nil (26075 26248 923892 845000) 0 nil])
([nil nil ((13031 . 13032) (#("," 0 1 (fontified t)) . -13030) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) 13031 (#("o" 0 1 (fontified t)) . -13031) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (#("p" 0 1 (fontified t)) . -13032) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (#("_" 0 1 (fontified t)) . -13033) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (#("s" 0 1 (fontified t)) . -13034) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (#("t" 0 1 (fontified t)) . -13035) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) 13036 (13031 . 13036) (13030 . 13031) (13024 . 13030) (13021 . 13022) (#("s" 0 1 (fontified t)) . -13021) (undo-tree-id12249 . -1) 13022 (13023 . 13025) (13018 . 13023) (#("J" 0 1 (fontified t)) . -13018) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) 13019 (13016 . 13019) (13009 . 13016) (13004 . 13009) 12975) nil (26075 26248 923678 555000) 0 nil])
([nil nil ((12993 . 12997) (t 26075 26248 964671 421000)) nil (26075 26271 348652 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8101 . 8102) (#("
" 0 1 (fontified nil)) . -8162) (8099 . 8163) 8048 (t 26075 26271 381338 996000)) nil (26075 26556 621393 742000) 0 nil])
([nil nil ((8122 . 8123) (#("4" 0 1 (fontified t face font-lock-variable-name-face)) . 8122)) nil (26075 26556 621392 332000) 0 nil])
([nil nil ((8125 . 8126) (#("4" 0 1 (fontified t)) . 8125)) nil (26075 26556 621391 186000) 0 nil])
([nil nil ((8125 . 8126) (#("6" 0 1 (fontified t)) . 8125)) nil (26075 26556 621389 992000) 0 nil])
([nil nil ((8122 . 8123) (#("6" 0 1 (fontified t face font-lock-variable-name-face)) . 8122)) nil (26075 26556 621389 10000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -8225) (8162 . 8226) 8122) nil (26075 26556 621388 224000) 0 nil])
([nil nil ((8185 . 8186) (#("8" 0 1 (fontified t face font-lock-variable-name-face)) . 8185)) nil (26075 26556 621387 302000) 0 nil])
([nil nil ((8188 . 8189) (#("8" 0 1 (fontified t)) . 8188)) nil (26075 26556 621386 507000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -8288) (8225 . 8289) 8188) nil (26075 26556 621385 420000) 0 nil])
([nil nil ((8252 . 8254) (#("q" 0 1 (fontified t)) . -8252) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) 8253 (8252 . 8253) (#("9" 0 1 (fontified t)) . -8252) (undo-tree-id12431 . -1) 8253 (8248 . 8250) (#("9" 0 1 (fontified t face font-lock-variable-name-face)) . 8248)) nil (26075 26556 621383 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8317 . 8318) (#("
" 0 1 (fontified nil)) . -8327) (8315 . 8328) 8314) nil (26075 26556 621379 769000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8329 . 8330) (#("
" 0 1 (fontified nil)) . -8339) (8327 . 8340) 8318) nil (26075 26556 621378 593000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8341 . 8342) (#("
" 0 1 (fontified nil)) . -8351) (8339 . 8352) 8330) nil (26075 26556 621377 90000) 0 nil])
([nil nil ((8319 . 8320) (#("4" 0 1 (fontified t)) . 8319)) nil (26075 26556 621376 57000) 0 nil])
([nil nil ((8331 . 8332) (#("4" 0 1 (fontified t)) . 8331)) nil (26075 26556 621375 109000) 0 nil])
([nil nil ((8343 . 8344) (#("4" 0 1 (fontified t)) . 8343)) nil (26075 26556 621374 16000) 0 nil])
([nil nil ((8301 . 8302) (#("2" 0 1 (fontified t)) . -8301) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) 8302 (8313 . 8314) (#("1" 0 1 (fontified t)) . -8313) (undo-tree-id12422 . -1) 8314 (8325 . 8326) (#("1" 0 1 (fontified t)) . -8325) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) 8326 (8337 . 8338) (#("1" 0 1 (fontified t)) . -8337) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) 8338 (8343 . 8345) (#("2" 0 1 (fontified t)) . -8343) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) 8344) nil (26075 26556 621370 53000) 0 nil])
([nil nil ((8426 . 8428) (8425 . 8426) (8423 . 8425) (8422 . 8423) (8420 . 8422) (8419 . 8420) (8417 . 8419) (8416 . 8417) (#("m" 0 1 (fontified t)) . -8416) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) 8417 (8415 . 8417) (8414 . 8415) (8413 . 8414) (8411 . 8413) (8410 . 8411) (8406 . 8407) (#("4" 0 1 (fontified t)) . -8406) (undo-tree-id12434 . -1) 8407 (8399 . 8401) (#("2" 0 1 (fontified t)) . 8399) (t 26075 26556 644683 824000)) nil (26075 26589 778586 934000) 0 nil])
([nil nil ((12875 . 12878) (#("e" 0 1 (fontified t)) . 12875) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (#("true_typ" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 12875) (undo-tree-id12438 . -7) (undo-tree-id12439 . -8) (undo-tree-id12440 . -8) (undo-tree-id12441 . -8) (undo-tree-id12442 . -8) (undo-tree-id12443 . -8) (undo-tree-id12444 . -8) (undo-tree-id12445 . -8) (undo-tree-id12446 . -8) (undo-tree-id12447 . -8) (undo-tree-id12448 . -8) (undo-tree-id12449 . -8) (undo-tree-id12450 . -8) (undo-tree-id12451 . -8) (undo-tree-id12452 . -8) (undo-tree-id12453 . -8) (undo-tree-id12454 . -8) (undo-tree-id12455 . -8) (undo-tree-id12456 . -8) (undo-tree-id12457 . -8) (undo-tree-id12458 . -8) (undo-tree-id12459 . -8) (undo-tree-id12460 . -8) (undo-tree-id12461 . -8) (undo-tree-id12462 . -8) (undo-tree-id12463 . -8) (undo-tree-id12464 . -8) (undo-tree-id12465 . -8) (undo-tree-id12466 . -8) (undo-tree-id12467 . -8) (undo-tree-id12468 . -8) (undo-tree-id12469 . -8) (undo-tree-id12470 . -8) (undo-tree-id12471 . -8) (undo-tree-id12472 . -8) (undo-tree-id12473 . -8) (undo-tree-id12474 . -8) (undo-tree-id12475 . -8) (undo-tree-id12476 . -8) (undo-tree-id12477 . -8) (undo-tree-id12478 . -8) (undo-tree-id12479 . -8) (undo-tree-id12480 . -8) (undo-tree-id12481 . -8) (undo-tree-id12482 . -8) (undo-tree-id12483 . -8) (undo-tree-id12484 . -8) (undo-tree-id12485 . -8) (undo-tree-id12486 . -8) (undo-tree-id12487 . -8) (undo-tree-id12488 . -8) (undo-tree-id12489 . -8) (undo-tree-id12490 . -8) (undo-tree-id12491 . -8) (undo-tree-id12492 . -8) (undo-tree-id12493 . -8) (undo-tree-id12494 . -8) (undo-tree-id12495 . -8) (undo-tree-id12496 . -8) (undo-tree-id12497 . -8) (undo-tree-id12498 . -8) (undo-tree-id12499 . -8) (undo-tree-id12500 . -8) (undo-tree-id12501 . -8) (undo-tree-id12502 . -8) (undo-tree-id12503 . -8) (undo-tree-id12504 . -8) (undo-tree-id12505 . -8) (undo-tree-id12506 . -8) (undo-tree-id12507 . -8) (undo-tree-id12508 . -8) (undo-tree-id12509 . -8) (undo-tree-id12510 . -8) (undo-tree-id12511 . -8) (undo-tree-id12512 . -8) (undo-tree-id12513 . -8) (undo-tree-id12514 . -8) (undo-tree-id12515 . -8) (undo-tree-id12516 . -8) (undo-tree-id12517 . -8) (undo-tree-id12518 . -8) (undo-tree-id12519 . -8) (undo-tree-id12520 . -8) (undo-tree-id12521 . -8) (undo-tree-id12522 . -8) (undo-tree-id12523 . -8) (undo-tree-id12524 . -8) (undo-tree-id12525 . -8) (undo-tree-id12526 . -8) (undo-tree-id12527 . -8) (undo-tree-id12528 . -8) (undo-tree-id12529 . -8) (undo-tree-id12530 . -8) (undo-tree-id12531 . -8) (undo-tree-id12532 . -8) (undo-tree-id12533 . -8) (undo-tree-id12534 . -8) (undo-tree-id12535 . -8) (undo-tree-id12536 . -8) (undo-tree-id12537 . -8) (undo-tree-id12538 . -8) (undo-tree-id12539 . -8) (undo-tree-id12540 . -8) (undo-tree-id12541 . -8) (undo-tree-id12542 . -8) (undo-tree-id12543 . -8) (undo-tree-id12544 . -8) (undo-tree-id12545 . -8) (undo-tree-id12546 . -8) (undo-tree-id12547 . -8) (undo-tree-id12548 . -8) (undo-tree-id12549 . -8) (undo-tree-id12550 . -8) (undo-tree-id12551 . -8) (undo-tree-id12552 . -8) (undo-tree-id12553 . -8) (undo-tree-id12554 . -8) (undo-tree-id12555 . -8) (undo-tree-id12556 . -8) (undo-tree-id12557 . -8) (undo-tree-id12558 . -8) (undo-tree-id12559 . -8) (undo-tree-id12560 . -8) (undo-tree-id12561 . -8) (undo-tree-id12562 . -8) (undo-tree-id12563 . -8) (undo-tree-id12564 . -8) (undo-tree-id12565 . -8) (undo-tree-id12566 . -8) (undo-tree-id12567 . -8) (undo-tree-id12568 . -8) (undo-tree-id12569 . -8) (undo-tree-id12570 . -8) (undo-tree-id12571 . -8) (undo-tree-id12572 . -8) (undo-tree-id12573 . -8) (undo-tree-id12574 . -8) (undo-tree-id12575 . -8) (undo-tree-id12576 . -8) (undo-tree-id12577 . -8) (undo-tree-id12578 . -8) (undo-tree-id12579 . -8) (undo-tree-id12580 . -8) (undo-tree-id12581 . -8) (undo-tree-id12582 . -8) (undo-tree-id12583 . -8) (undo-tree-id12584 . -8) (undo-tree-id12585 . -8) (undo-tree-id12586 . -8) (undo-tree-id12587 . -8) (undo-tree-id12588 . -8) (undo-tree-id12589 . -8) (undo-tree-id12590 . -8) (undo-tree-id12591 . -8) (undo-tree-id12592 . -8) (undo-tree-id12593 . -8) (undo-tree-id12594 . -8) (undo-tree-id12595 . -8) (undo-tree-id12596 . -8) (undo-tree-id12597 . -8) (undo-tree-id12598 . -8) (undo-tree-id12599 . -8) (undo-tree-id12600 . -8) (undo-tree-id12601 . -8) (undo-tree-id12602 . -8) (undo-tree-id12603 . -8) (undo-tree-id12604 . -8) (undo-tree-id12605 . -8) (undo-tree-id12606 . -8) (undo-tree-id12607 . -8) (undo-tree-id12608 . -8) (undo-tree-id12609 . -8) (undo-tree-id12610 . -8) (undo-tree-id12611 . -8) (undo-tree-id12612 . -8) (undo-tree-id12613 . -8) (undo-tree-id12614 . -8) (undo-tree-id12615 . -8) (undo-tree-id12616 . -8) (undo-tree-id12617 . -8) (undo-tree-id12618 . -8) (undo-tree-id12619 . -8) (undo-tree-id12620 . -8) (undo-tree-id12621 . -8) (undo-tree-id12622 . -8) (undo-tree-id12623 . -8) (undo-tree-id12624 . -8) (undo-tree-id12625 . -8) (undo-tree-id12626 . -8) (undo-tree-id12627 . -8) (undo-tree-id12628 . -8) (undo-tree-id12629 . -8) (undo-tree-id12630 . -8) (undo-tree-id12631 . -8) (undo-tree-id12632 . -8) (undo-tree-id12633 . -8) (undo-tree-id12634 . -8) (undo-tree-id12635 . -8) (undo-tree-id12636 . -8) (undo-tree-id12637 . -8) (undo-tree-id12638 . -8) (undo-tree-id12639 . -8) (undo-tree-id12640 . -8) (undo-tree-id12641 . -8) (undo-tree-id12642 . -8) (undo-tree-id12643 . -8) (undo-tree-id12644 . -8) (undo-tree-id12645 . -8) (undo-tree-id12646 . -8) (undo-tree-id12647 . -8) (undo-tree-id12648 . -8) (undo-tree-id12649 . -8) (undo-tree-id12650 . -8) (undo-tree-id12651 . -8) (undo-tree-id12652 . -8) (undo-tree-id12653 . -8) (undo-tree-id12654 . -8) (undo-tree-id12655 . -8) (undo-tree-id12656 . -8) (undo-tree-id12657 . -8) (undo-tree-id12658 . -8) (undo-tree-id12659 . -8) (undo-tree-id12660 . -8) (undo-tree-id12661 . -8) (undo-tree-id12662 . -8) (undo-tree-id12663 . -8) (undo-tree-id12664 . -8) (undo-tree-id12665 . -8) (undo-tree-id12666 . -8) (undo-tree-id12667 . -8) (undo-tree-id12668 . -8) (undo-tree-id12669 . -8) (undo-tree-id12670 . -8) (undo-tree-id12671 . -8) (undo-tree-id12672 . -8) (undo-tree-id12673 . -8) (undo-tree-id12674 . -8) (undo-tree-id12675 . -8) (undo-tree-id12676 . -8) (undo-tree-id12677 . -8) (undo-tree-id12678 . -8) (undo-tree-id12679 . -8) (undo-tree-id12680 . -8) (undo-tree-id12681 . -8) (undo-tree-id12682 . -8) (undo-tree-id12683 . -8) (undo-tree-id12684 . -8) (undo-tree-id12685 . -8) (undo-tree-id12686 . -8) (undo-tree-id12687 . -8) (undo-tree-id12688 . -8) (undo-tree-id12689 . -8) (undo-tree-id12690 . -8) (undo-tree-id12691 . -8) (undo-tree-id12692 . -8) (undo-tree-id12693 . -8) (undo-tree-id12694 . -8) (undo-tree-id12695 . -8) (undo-tree-id12696 . -8) (undo-tree-id12697 . -8) (undo-tree-id12698 . -8) (undo-tree-id12699 . -8) (undo-tree-id12700 . -8) (undo-tree-id12701 . -8) (undo-tree-id12702 . -8) (undo-tree-id12703 . -8) (undo-tree-id12704 . -8) (undo-tree-id12705 . -8) (undo-tree-id12706 . -8) (undo-tree-id12707 . -8) (undo-tree-id12708 . -8) (undo-tree-id12709 . -8) (undo-tree-id12710 . -8) (undo-tree-id12711 . -8) (undo-tree-id12712 . -8) (undo-tree-id12713 . -8) (undo-tree-id12714 . -8) (undo-tree-id12715 . -8) (undo-tree-id12716 . -8) (undo-tree-id12717 . -8) (undo-tree-id12718 . -8) (undo-tree-id12719 . -8) (undo-tree-id12720 . -8) (undo-tree-id12721 . -8) (undo-tree-id12722 . -8) (undo-tree-id12723 . -8) (undo-tree-id12724 . -8) (undo-tree-id12725 . -8) (undo-tree-id12726 . -8) (undo-tree-id12727 . -8) (undo-tree-id12728 . -8) (undo-tree-id12729 . -8) (undo-tree-id12730 . -8) (undo-tree-id12731 . -8) (undo-tree-id12732 . -8) (undo-tree-id12733 . -8) (undo-tree-id12734 . -8) (undo-tree-id12735 . -8) (undo-tree-id12736 . -8) (undo-tree-id12737 . -8) (undo-tree-id12738 . -8) (undo-tree-id12739 . -8) (undo-tree-id12740 . -8) (undo-tree-id12741 . -8) (undo-tree-id12742 . -8) (undo-tree-id12743 . -8) (undo-tree-id12744 . -8) (undo-tree-id12745 . -8) (undo-tree-id12746 . -8) (undo-tree-id12747 . -8) (undo-tree-id12748 . -8) (undo-tree-id12749 . -8) (undo-tree-id12750 . -8) (undo-tree-id12751 . -8) (undo-tree-id12752 . -8) (undo-tree-id12753 . -8) (undo-tree-id12754 . -8) (undo-tree-id12755 . -8) (undo-tree-id12756 . -8) (undo-tree-id12757 . -8) (undo-tree-id12758 . -8) (undo-tree-id12759 . -8) (undo-tree-id12760 . -8) (undo-tree-id12761 . -8) (undo-tree-id12762 . -8) (undo-tree-id12763 . -8) (undo-tree-id12764 . -8) (undo-tree-id12765 . -8) (undo-tree-id12766 . -8) (undo-tree-id12767 . -8) (undo-tree-id12768 . -8) (undo-tree-id12769 . -8) (undo-tree-id12770 . -8) (undo-tree-id12771 . -8) (undo-tree-id12772 . -8) (undo-tree-id12773 . -8) (undo-tree-id12774 . -8) (undo-tree-id12775 . -8) (undo-tree-id12776 . -8) (undo-tree-id12777 . -8) (undo-tree-id12778 . -8) (undo-tree-id12779 . -8) (undo-tree-id12780 . -8) (undo-tree-id12781 . -8) (undo-tree-id12782 . -8) (undo-tree-id12783 . -8) (undo-tree-id12784 . -8) (undo-tree-id12785 . -8) (undo-tree-id12786 . -8) (undo-tree-id12787 . -8) (undo-tree-id12788 . -8) (undo-tree-id12789 . -8) (undo-tree-id12790 . -8) (undo-tree-id12791 . -8) (undo-tree-id12792 . -8) 12883 (t 26075 26589 804685 159000)) nil (26075 26720 33551 843000) 0 nil])
([nil nil ((12416 . 12418) (#("_" 0 1 (fontified t)) . -12416) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (#("_" 0 1 (fontified t)) . -12417) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) 12418 (12416 . 12418) (#("+" 0 1 (fontified t)) . 12417) (#("s" 0 1 (fontified t)) . -12417) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) 12418 (12417 . 12418) (#("+" 0 1 (fontified t)) . 12417) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (t 26075 26720 61357 78000)) nil (26075 26815 704994 643000) 0 nil])
([nil nil ((12880 . 12887) (t 26075 26815 731360 932000) 12853) nil (26075 26868 853000 121000) 0 nil])
([nil nil ((12887 . 12893)) nil (26075 26868 861213 36000) 0 nil])
([nil nil ((12910 . 12911) (12906 . 12909) (12905 . 12906) (12903 . 12904) (nil syntax-table nil 12905 . 12906) (nil syntax-table (1) 12894 . 12895) (12896 . 12903) (#("y" 0 1 (fontified t face font-lock-string-face)) . -12896) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) 12897 (12895 . 12897) (12894 . 12896) (nil face font-lock-type-face 12893 . 12895) (nil fontified t 12893 . 12895) (12893 . 12895)) nil (26075 26887 646278 179000) 0 nil] [nil nil ((nil face font-lock-type-face 12893 . 12895) (nil fontified t 12893 . 12895) (12893 . 12895)) ((#("[]" 0 1 (fontified nil face font-lock-type-face) 1 2 (fontified nil face font-lock-type-face)) . 12893) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (nil fontified nil 12894 . 12895) (nil fontified nil 12893 . 12894) (nil face (rainbow-delimiters-depth-4-face) 12894 . 12895) (nil face (rainbow-delimiters-depth-4-face) 12893 . 12894)) (26075 26868 852994 972000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13556 . 13557) (#("
" 0 1 (fontified nil)) . -13581) (13550 . 13582) 13526 (t 26075 26887 674697 154000)) nil (26075 26900 388884 610000) 0 nil])
nil
([nil nil ((8301 . 8302) (#("5" 0 1 (fontified t)) . 8301) (t 26075 26900 424697 670000)) nil (26075 26927 844540 167000) 0 nil])
([nil nil ((8313 . 8314) (#("4" 0 1 (fontified t)) . 8313)) nil (26075 26927 844538 376000) 0 nil])
([nil nil ((8337 . 8338) (#("2" 0 1 (fontified t)) . 8337)) nil (26075 26927 844536 909000) 0 nil])
([nil nil ((8350 . 8351) (#("1" 0 1 (fontified t)) . 8350)) nil (26075 26927 844532 592000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8400) (undo-tree-id12997 . -1) 8401 (8396 . 8397) (#("1" 0 1 (fontified t)) . -8396) (undo-tree-id12998 . -1) 8397 (8403 . 8404) (#("1" 0 1 (fontified t)) . -8403) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) 8404 (8408 . 8409) (#("j" 0 1 (fontified t)) . -8408) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) 8409 (8408 . 8409) (8407 . 8408) (#("}" 0 1 (fontified nil)) . -8407) (8407 . 8408) (8405 . 8407) (8405 . 8407) (t 26075 26927 874698 765000)) nil (26075 28789 26205 723000) 0 nil])
([nil nil ((8402 . 8403) (#("5" 0 1 (fontified t)) . 8402) (undo-tree-id13003 . -1) (t 26075 28789 51439 956000)) nil (26075 28804 901034 785000) 0 nil])
([nil nil ((13359 . 13360) (13354 . 13359) (13349 . 13354) (t 26075 28804 941440 594000) 13348) nil (26075 28832 477866 849000) 0 nil])
([nil nil ((13295 . 13296) (13290 . 13295) (13285 . 13290) (t 26075 28832 504775 36000) 13259) nil (26075 28884 408380 49000) 0 nil])
([nil nil ((apply 6 10799 10892 undo--wrap-and-run-primitive-undo 10799 10892 ((#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -10814) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -10803) 10898)) (t 26075 28884 434777 127000)) nil (26075 28934 465687 900000) 0 nil])
([nil nil ((apply -6 10799 10924 undo--wrap-and-run-primitive-undo 10799 10924 ((10817 . 10820) (10803 . 10806) 10799)) (t 26075 28934 491445 798000)) nil (26075 29080 79139 265000) 0 nil])
([nil nil ((apply 3 11094 11105 undo--wrap-and-run-primitive-undo 11094 11105 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11098) 11108)) (t 26075 29080 108118 305000)) nil (26075 29102 118887 572000) 0 nil])
([nil nil ((13294 . 13298) (13294 . 13295) 13303 (t 26075 29102 148119 189000)) nil (26075 29287 552276 506000) 0 nil])
([nil nil ((13298 . 13300)) nil (26075 29287 552275 870000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -13298) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (#("r" 0 1 (fontified t)) . -13299) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) 13300) nil (26075 29287 552274 689000) 0 nil])
([nil nil ((13298 . 13301)) nil (26075 29287 555805 204000) 0 nil])
([nil nil ((13369 . 13370) (13363 . 13368) (13361 . 13362) (13360 . 13362) (13354 . 13360) (13353 . 13354) (#("g" 0 1 (fontified t face font-lock-string-face)) . -13352) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) 13353 (13351 . 13353) (nil syntax-table nil 13353 . 13354) (nil syntax-table (1) 13338 . 13339) (13348 . 13351) (13347 . 13348) (13346 . 13347) (nil syntax-table nil 13348 . 13349) (nil syntax-table (1) 13338 . 13339) (13339 . 13346) (13338 . 13340) (13337 . 13339) (13331 . 13337) (13330 . 13331) (13326 . 13329) (13325 . 13326) (13323 . 13325) (#("r" 0 1 (fontified t)) . -13323) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) 13324 (13312 . 13324) (13311 . 13312) (13310 . 13311) (13309 . 13310) (13307 . 13309) (13302 . 13307) (13301 . 13303)) nil (26075 29339 864182 190000) 0 nil] [nil nil ((13301 . 13303)) ((#("[]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-3-face))) . 13301) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1)) (26075 29287 552263 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10605 . 10606) (#("
" 0 1 (fontified nil)) . -10683) (10601 . 10684) 10600 (t 26075 29339 891461 993000)) nil (26075 29431 580870 655000) 0 nil])
nil
([nil nil ((10609 . 10610) (10604 . 10609) (10602 . 10604) (10602 . 10605) (#("  " 0 2 (fontified t)) . 10602) (undo-tree-id13015 . -2) (undo-tree-id13016 . -2) 10604 (10682 . 10684) (#("    " 0 4 (fontified t)) . 10682) (undo-tree-id13017 . -2) (undo-tree-id13018 . -2) 10684 (10602 . 10604) (#("    " 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -10602) (undo-tree-id13019 . -4) (undo-tree-id13020 . -4) 10606) nil (26075 29431 580866 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11694 . 11695) (#("
" 0 1 (fontified nil)) . -11767) (11690 . 11768) 11687 (t 26075 29431 608132 335000)) nil (26075 29484 314634 540000) 0 nil])
([nil nil ((11691 . 11693) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -11691) (undo-tree-id13021 . -4) (undo-tree-id13022 . -4) (undo-tree-id13023 . -4) (undo-tree-id13024 . -4) (undo-tree-id13025 . -4) (undo-tree-id13026 . -4) (undo-tree-id13027 . -4) (undo-tree-id13028 . -4) (undo-tree-id13029 . -4) (undo-tree-id13030 . -4) (undo-tree-id13031 . -4) (undo-tree-id13032 . -4) (undo-tree-id13033 . -4) (undo-tree-id13034 . -4) (undo-tree-id13035 . -4) (undo-tree-id13036 . -4) (undo-tree-id13037 . -4) (undo-tree-id13038 . -4) (undo-tree-id13039 . -4) (undo-tree-id13040 . -4) (undo-tree-id13041 . -4) (undo-tree-id13042 . -4) (undo-tree-id13043 . -4) (undo-tree-id13044 . -4) (undo-tree-id13045 . -4) (undo-tree-id13046 . -4) (undo-tree-id13047 . -4) (undo-tree-id13048 . -4) (undo-tree-id13049 . -4) (undo-tree-id13050 . -4) (undo-tree-id13051 . -4) (undo-tree-id13052 . -4) (undo-tree-id13053 . -4) (undo-tree-id13054 . -4) (undo-tree-id13055 . -4) (undo-tree-id13056 . -4) (undo-tree-id13057 . -4) (undo-tree-id13058 . -4) (undo-tree-id13059 . -4) (undo-tree-id13060 . -4) (undo-tree-id13061 . -4) (undo-tree-id13062 . -4) (undo-tree-id13063 . -4) (undo-tree-id13064 . -4) (undo-tree-id13065 . -4) (undo-tree-id13066 . -4) (undo-tree-id13067 . -4) (undo-tree-id13068 . -4) (undo-tree-id13069 . -4) (undo-tree-id13070 . -4) (undo-tree-id13071 . -4) (undo-tree-id13072 . -4) (undo-tree-id13073 . -4) (undo-tree-id13074 . -4) (undo-tree-id13075 . -4) (undo-tree-id13076 . -4) (undo-tree-id13077 . -4) (undo-tree-id13078 . -4) (undo-tree-id13079 . -4) (undo-tree-id13080 . -4) (undo-tree-id13081 . -4) (undo-tree-id13082 . -4) (undo-tree-id13083 . -4) (undo-tree-id13084 . -4) (undo-tree-id13085 . -4) (undo-tree-id13086 . -4) (undo-tree-id13087 . -4) (undo-tree-id13088 . -4) (undo-tree-id13089 . -4) (undo-tree-id13090 . -4) (undo-tree-id13091 . -4) (undo-tree-id13092 . -4) (undo-tree-id13093 . -4) (undo-tree-id13094 . -4) (undo-tree-id13095 . -4) (undo-tree-id13096 . -4) (undo-tree-id13097 . -4) (undo-tree-id13098 . -4) (undo-tree-id13099 . -4) (undo-tree-id13100 . -4) (undo-tree-id13101 . -4) (undo-tree-id13102 . -4) (undo-tree-id13103 . -4) (undo-tree-id13104 . -4) (undo-tree-id13105 . -4) (undo-tree-id13106 . -4) (undo-tree-id13107 . -4) (undo-tree-id13108 . -4) (undo-tree-id13109 . -4) (undo-tree-id13110 . -4) (undo-tree-id13111 . -4) (undo-tree-id13112 . -4) (undo-tree-id13113 . -4) (undo-tree-id13114 . -4) (undo-tree-id13115 . -4) (undo-tree-id13116 . -4) (undo-tree-id13117 . -4) (undo-tree-id13118 . -4) (undo-tree-id13119 . -4) (undo-tree-id13120 . -4) (undo-tree-id13121 . -4) (undo-tree-id13122 . -4) (undo-tree-id13123 . -4) (undo-tree-id13124 . -4) (undo-tree-id13125 . -4) (undo-tree-id13126 . -4) (undo-tree-id13127 . -4) (undo-tree-id13128 . -4) (undo-tree-id13129 . -4) (undo-tree-id13130 . -4) (undo-tree-id13131 . -4) (undo-tree-id13132 . -4) (undo-tree-id13133 . -4) (undo-tree-id13134 . -4) (undo-tree-id13135 . -4) (undo-tree-id13136 . -4) (undo-tree-id13137 . -4) (undo-tree-id13138 . -4) (undo-tree-id13139 . -4) (undo-tree-id13140 . -4) (undo-tree-id13141 . -4) (undo-tree-id13142 . -4) (undo-tree-id13143 . -4) (undo-tree-id13144 . -4) (undo-tree-id13145 . -4) (undo-tree-id13146 . -4) (undo-tree-id13147 . -4) (undo-tree-id13148 . -4) (undo-tree-id13149 . -4) (undo-tree-id13150 . -4) (undo-tree-id13151 . -4) (undo-tree-id13152 . -4) (undo-tree-id13153 . -4) (undo-tree-id13154 . -4) (undo-tree-id13155 . -4) (undo-tree-id13156 . -4) (undo-tree-id13157 . -4) (undo-tree-id13158 . -4) (undo-tree-id13159 . -4) (undo-tree-id13160 . -4) (undo-tree-id13161 . -4) (undo-tree-id13162 . -4) (undo-tree-id13163 . -4) (undo-tree-id13164 . -4) (undo-tree-id13165 . -4) (undo-tree-id13166 . -4) (undo-tree-id13167 . -4) (undo-tree-id13168 . -4) (undo-tree-id13169 . -4) (undo-tree-id13170 . -4) (undo-tree-id13171 . -4) 11695) nil (26075 29484 314628 161000) 0 nil])
([nil nil ((#("    debug;
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 12478) (undo-tree-id13172 . -10) (undo-tree-id13173 . -10) (undo-tree-id13174 . -9) (undo-tree-id13175 . -9) (undo-tree-id13176 . -11) (undo-tree-id13177 . -11) 12487 (t 26075 29484 361467 777000)) nil (26075 29521 74372 310000) 0 nil])
([nil nil ((#("  for(int i=0;i<bnf_st.size();i++) printf(\"tttttt\\t,%d\\n\",bnf_st[i].stat);
" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t c-type c-decl-id-start face font-lock-type-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t face font-lock-string-face) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-3-face)) 65 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-3-face)) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t) 74 75 (fontified t)) . 11691) (undo-tree-id13178 . -73) (undo-tree-id13179 . -74) (undo-tree-id13180 . 73) (undo-tree-id13181 . -74) (undo-tree-id13182 . -73) (undo-tree-id13183 . -75) (undo-tree-id13184 . -75) 11764 (t 26075 29521 118135 911000)) nil (26075 29690 835137 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12272 . 12273) (#("
" 0 1 (fontified nil)) . -12345) (12270 . 12346) 12260) nil (26075 29690 835125 872000) 0 nil])
([nil nil ((apply 3 12346 12355 undo--wrap-and-run-primitive-undo 12346 12355 ((#("// " 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -12348) 12358))) nil (26075 29690 835121 666000) 0 nil])
([nil nil ((10034 . 10038) (t 26075 29690 884809 367000) 10008) nil (26075 30253 30699 74000) 0 nil])
([nil nil ((10038 . 10040)) nil (26075 30253 30698 559000) 0 nil])
([nil nil ((10039 . 10041)) nil (26075 30253 30698 112000) 0 nil])
([nil nil ((nil fontified nil 10039 . 10057) (nil face (rainbow-delimiters-depth-5-face) 10039 . 10057) (10039 . 10057) (#("to" 0 2 (fontified nil)) . 10039) (nil fontified nil 10039 . 10041) (nil face (rainbow-delimiters-depth-5-face) 10039 . 10041) (10039 . 10041) (#("token_class::token" 0 18 (fontified nil)) . -10039) (nil fontified nil 10039 . 10057) (nil face (rainbow-delimiters-depth-5-face) 10039 . 10057) (10039 . 10057) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -10039) (undo-tree-id13187 . -2) (undo-tree-id13188 . -2) 10041) nil (26075 30253 30697 166000) 0 nil])
([nil nil ((10057 . 10059)) nil (26075 30253 30694 622000) 0 nil])
([nil nil ((10059 . 10064)) nil (26075 30253 30694 272000) 0 nil])
([nil nil ((10064 . 10065)) nil (26075 30253 30693 640000) 0 nil])
([nil nil ((10065 . 10067)) nil (26075 30253 30693 287000) 0 nil])
([nil nil ((10066 . 10069)) nil (26075 30253 30692 944000) 0 nil])
([nil nil ((10069 . 10070)) nil (26075 30253 30692 567000) 0 nil])
([nil nil ((10070 . 10073)) nil (26075 30253 30691 824000) 0 nil])
([nil nil ((10075 . 10076)) nil (26075 30253 30691 120000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -10059) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) 10060) nil (26075 30253 30689 559000) 0 nil])
([nil nil ((10059 . 10060)) nil (26075 30253 30680 742000) 0 nil])
([nil nil ((10038 . 10040)) nil (26075 30253 30675 959000) 0 nil])
([nil nil ((10046 . 10047) (10041 . 10044) (10040 . 10041) (10037 . 10040) (10036 . 10038) (9932 . 9934) (#("R" 0 1 (fontified t)) . -9932) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (#("k" 0 1 (fontified t)) . -9933) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (#("h" 0 1 (fontified t)) . -9934) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) 9935 (10036 . 10037) (10031 . 10036) (10029 . 10031) (nil fontified nil 10011 . 10029) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10029) (10011 . 10029) (#("to" 0 2 (fontified nil)) . 10011) (nil fontified nil 10011 . 10013) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10013) (10011 . 10013) (#("token_class::token" 0 18 (fontified nil)) . -10011) (nil fontified nil 10011 . 10029) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10029) (10011 . 10029) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -10011) (undo-tree-id13195 . -2) (undo-tree-id13196 . -2) 10013 (10011 . 10013) (10010 . 10012) (10006 . 10010) (10045 . 10046) (10040 . 10041) (10039 . 10040) (10037 . 10039) (10036 . 10038) (10035 . 10036) (10031 . 10035) (10029 . 10031) (nil fontified nil 10011 . 10029) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10029) (10011 . 10029) (#("to" 0 2 (fontified nil)) . 10011) (nil fontified nil 10011 . 10013) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10013) (10011 . 10013) (#("token_class::token" 0 18 (fontified nil)) . -10011) (nil fontified nil 10011 . 10029) (nil face (rainbow-delimiters-depth-5-face) 10011 . 10029) (10011 . 10029) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -10011) (undo-tree-id13197 . -2) (undo-tree-id13198 . -2) 10013 (10011 . 10013) (10007 . 10010) (#("       " 0 7 (fontified nil)) . 10007) (undo-tree-id13199 . -7) (undo-tree-id13200 . -7) (10014 . 10016) (10006 . 10014) (10005 . 10006) (10000 . 10003) (9999 . 10000) (9998 . 9999) (#("e" 0 1 (fontified t)) . -9998) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) 9999 (9998 . 9999) (#("R" 0 1 (fontified t)) . -9998) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) 9999 (9998 . 9999) (9997 . 9998) (9994 . 9997) (9993 . 9995) (9992 . 9993) (9987 . 9992) (9985 . 9987) (nil fontified nil 9967 . 9985) (nil face (rainbow-delimiters-depth-5-face) 9967 . 9985) (9967 . 9985) (#("to" 0 2 (fontified nil)) . 9967) (nil fontified nil 9967 . 9969) (nil face (rainbow-delimiters-depth-5-face) 9967 . 9969) (9967 . 9969) (#("token_class::token" 0 18 (fontified nil)) . -9967) (nil fontified nil 9967 . 9985) (nil face (rainbow-delimiters-depth-5-face) 9967 . 9985) (9967 . 9985) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -9967) (undo-tree-id13205 . -2) (undo-tree-id13206 . -2) 9969 (9967 . 9969) (9966 . 9968) (9965 . 9967) (9964 . 9965) (9962 . 9964) (9961 . 9963) (9955 . 9961) (t 26075 30253 64831 856000) 9938) nil (26075 31021 466593 444000) 0 nil])
([nil nil ((10039 . 10040) (10036 . 10037) (10034 . 10036) (10033 . 10035) (10032 . 10033) (10026 . 10032) (10025 . 10026) (10023 . 10025) (nil fontified nil 10005 . 10023) (nil face (rainbow-delimiters-depth-5-face) 10005 . 10023) (10005 . 10023) (#("to" 0 2 (fontified nil)) . 10005) (nil fontified nil 10005 . 10007) (nil face (rainbow-delimiters-depth-5-face) 10005 . 10007) (10005 . 10007) (#("token_class::token" 0 18 (fontified nil)) . -10005) (nil fontified nil 10005 . 10023) (nil face (rainbow-delimiters-depth-5-face) 10005 . 10023) (10005 . 10023) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -10005) (undo-tree-id13233 . -2) (undo-tree-id13234 . -2) 10007 (10005 . 10007) (10004 . 10006) (10000 . 10004) (#("E" 0 1 (fontified t)) . -9930) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (#("," 0 1 (fontified t c-type c-not-decl)) . -9931) (undo-tree-id13237 . -1) 9932 (#("," 0 1 (fontified t c-type c-not-decl)) . -9999) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (#("R" 0 1 (fontified t)) . -10000) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (#("k" 0 1 (fontified t)) . -10001) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (#("h" 0 1 (fontified t)) . -10002) (undo-tree-id13244 . -1) 10003 (9998 . 9999) (t 26075 31021 524862 564000)) nil (26075 31276 283442 586000) 0 nil])
([nil nil ((#("	  {token_class::token::Inter_t,{ID,}},
" 0 3 (fontified t) 3 4 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-5-face)) 4 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 22 (fontified t face font-lock-constant-face) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t c-type c-not-decl) 32 33 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-6-face)) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t c-type c-not-decl) 36 37 (fontified t face (rainbow-delimiters-depth-6-face)) 37 38 (fontified t face (rainbow-delimiters-depth-5-face)) 38 39 (fontified t) 39 40 (fontified t)) . 10001) (undo-tree-id13226 . -39) (undo-tree-id13227 . 4) (undo-tree-id13228 . -35) (undo-tree-id13229 . -35) (undo-tree-id13230 . -40) (undo-tree-id13231 . -40) (undo-tree-id13232 . 4) 10036) nil (26075 31276 283431 3000) 0 nil])
([nil nil ((9952 . 9958) 9931) nil (26075 31276 283005 515000) 0 nil])
([nil nil ((9958 . 9960)) nil (26075 31276 283005 60000) 0 nil])
([nil nil ((9959 . 9960)) nil (26075 31276 283004 805000) 0 nil])
([nil nil ((9960 . 9961)) nil (26075 31276 283004 488000) 0 nil])
([nil nil ((9962 . 9964) (9961 . 9963)) nil (26075 31276 283004 133000) 0 nil])
([nil nil ((9963 . 9965)) nil (26075 31276 283003 764000) 0 nil])
([nil nil ((nil fontified nil 9963 . 9981) (nil face (rainbow-delimiters-depth-5-face) 9963 . 9981) (9963 . 9981) (#("to" 0 2 (fontified nil)) . 9963) (nil fontified nil 9963 . 9965) (nil face (rainbow-delimiters-depth-5-face) 9963 . 9965) (9963 . 9965) (#("token_class::token" 0 18 (fontified nil)) . -9963) (nil fontified nil 9963 . 9981) (nil face (rainbow-delimiters-depth-5-face) 9963 . 9981) (9963 . 9981) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -9963) (undo-tree-id13224 . -2) (undo-tree-id13225 . -2) 9965) nil (26075 31276 283002 735000) 0 nil])
([nil nil ((9981 . 9983)) nil (26075 31276 283000 320000) 0 nil])
([nil nil ((9983 . 9990)) nil (26075 31276 283000 51000) 0 nil])
([nil nil ((9990 . 9991)) nil (26075 31276 282999 698000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -9989) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (#("," 0 1 (fontified t c-type c-not-decl)) . -9990) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) 9991) nil (26075 31276 282998 919000) 0 nil])
([nil nil ((9989 . 9990)) nil (26075 31276 282996 20000) 0 nil])
([nil nil ((9990 . 9991)) nil (26075 31276 282995 643000) 0 nil])
([nil nil ((9991 . 9993)) nil (26075 31276 282995 310000) 0 nil])
([nil nil ((9992 . 9994)) nil (26075 31276 282994 980000) 0 nil])
([nil nil ((9994 . 9995)) nil (26075 31276 282994 535000) 0 nil])
([nil nil ((9995 . 9997)) nil (26075 31276 282994 6000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -9930) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (#("1" 0 1 (fontified t)) . -9931) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) 9932) nil (26075 31276 282993 237000) 0 nil])
([nil nil ((9930 . 9931)) nil (26075 31276 282989 820000) 0 nil])
([nil nil ((10000 . 10001)) nil (26075 31276 282989 403000) 0 nil])
([nil nil ((9999 . 10005)) nil (26075 31278 75455 321000) 0 nil])
([nil nil ((10029 . 10034) (10022 . 10023) (#("L" 0 1 (fontified t)) . -10022) (undo-tree-id13825 . -1) 10023 (10028 . 10030) (10027 . 10028) (10023 . 10027) (10022 . 10023) (10020 . 10022) (nil fontified nil 10002 . 10020) (nil face (rainbow-delimiters-depth-5-face) 10002 . 10020) (10002 . 10020) (#("to" 0 2 (fontified nil)) . 10002) (nil fontified nil 10002 . 10004) (nil face (rainbow-delimiters-depth-5-face) 10002 . 10004) (10002 . 10004) (#("token_class::token" 0 18 (fontified nil)) . -10002) (nil fontified nil 10002 . 10020) (nil face (rainbow-delimiters-depth-5-face) 10002 . 10020) (10002 . 10020) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -10002) (undo-tree-id13826 . -2) (undo-tree-id13827 . -2) 10004 (10002 . 10004) (9999 . 10001) (#("       " 0 7 (fontified nil)) . 9999) (undo-tree-id13828 . -7) (undo-tree-id13829 . -7) (10006 . 10008) (9998 . 10006) (#("
     " 0 1 (fontified t) 1 6 (fontified t)) . 9999) (undo-tree-id13830 . -6) (undo-tree-id13831 . -6) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) 10005) nil (26075 31326 705638 124000) 0 nil] [nil nil ((10000 . 10006) (#("     " 0 5 (fontified nil)) . 10000) (undo-tree-id13214 . -5) (undo-tree-id13215 . -5) (10005 . 10007)) ((#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-4-face))) . 10005) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . 1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (10000 . 10005) (#("      " 0 6 (fontified t)) . 10000)) (26075 31277 119398 425000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -10032) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) 10033 (#("t" 0 1 (fontified t)) . 10033) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1)) nil (26075 31326 705619 615000) 0 nil])
([nil nil ((10007 . 10010)) ((#("too" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 10007) (undo-tree-id13245 . -3) (undo-tree-id13246 . -3) (undo-tree-id13247 . -3) (undo-tree-id13248 . -3) (undo-tree-id13249 . -3) (undo-tree-id13250 . -3) (undo-tree-id13251 . -3) (undo-tree-id13252 . -3) (undo-tree-id13253 . -3) (undo-tree-id13254 . -3) (undo-tree-id13255 . -3) (undo-tree-id13256 . -3) (undo-tree-id13257 . -3) (undo-tree-id13258 . -3) (undo-tree-id13259 . -3) (undo-tree-id13260 . -3) (undo-tree-id13261 . -3) (undo-tree-id13262 . -3) (undo-tree-id13263 . -3) (undo-tree-id13264 . -3) (undo-tree-id13265 . -3) (undo-tree-id13266 . -3) (undo-tree-id13267 . -3) (undo-tree-id13268 . -3) (undo-tree-id13269 . -3) (undo-tree-id13270 . -3) (undo-tree-id13271 . -3) (undo-tree-id13272 . -3) (undo-tree-id13273 . -3) (undo-tree-id13274 . -3) (undo-tree-id13275 . -3) (undo-tree-id13276 . -3) (undo-tree-id13277 . -3) (undo-tree-id13278 . -3) (undo-tree-id13279 . -3) (undo-tree-id13280 . -3) (undo-tree-id13281 . -3) (undo-tree-id13282 . -3) (undo-tree-id13283 . -3) (undo-tree-id13284 . -3) (undo-tree-id13285 . -3) (undo-tree-id13286 . -3) (undo-tree-id13287 . -3) (undo-tree-id13288 . -3) (undo-tree-id13289 . -3) (undo-tree-id13290 . -3) (undo-tree-id13291 . -3) (undo-tree-id13292 . -3) (undo-tree-id13293 . -3) (undo-tree-id13294 . -3) (undo-tree-id13295 . -3) (undo-tree-id13296 . -3) (undo-tree-id13297 . -3) (undo-tree-id13298 . -3) (undo-tree-id13299 . -3) (undo-tree-id13300 . -3) (undo-tree-id13301 . -3) (undo-tree-id13302 . -3) (undo-tree-id13303 . -3) (undo-tree-id13304 . -3) (undo-tree-id13305 . -3) (undo-tree-id13306 . -3) (undo-tree-id13307 . -3) (undo-tree-id13308 . -3) (undo-tree-id13309 . -3) (undo-tree-id13310 . -3) (undo-tree-id13311 . -3) (undo-tree-id13312 . -3) (undo-tree-id13313 . -3) (undo-tree-id13314 . -3) (undo-tree-id13315 . -3) (undo-tree-id13316 . -3) (undo-tree-id13317 . -3) (undo-tree-id13318 . -3) (undo-tree-id13319 . -3) (undo-tree-id13320 . -3) (undo-tree-id13321 . -3) (undo-tree-id13322 . -3) (undo-tree-id13323 . -3) (undo-tree-id13324 . -3) (undo-tree-id13325 . -3) (undo-tree-id13326 . -3) (undo-tree-id13327 . -3) (undo-tree-id13328 . -3) (undo-tree-id13329 . -3) (undo-tree-id13330 . -3) (undo-tree-id13331 . -3) (undo-tree-id13332 . -3) (undo-tree-id13333 . -3) (undo-tree-id13334 . -3) (undo-tree-id13335 . -3) (undo-tree-id13336 . -3) (undo-tree-id13337 . -3) (undo-tree-id13338 . -3) (undo-tree-id13339 . -3) (undo-tree-id13340 . -3) (undo-tree-id13341 . -3) (undo-tree-id13342 . -3) (undo-tree-id13343 . -3) (undo-tree-id13344 . -3) (undo-tree-id13345 . -3) (undo-tree-id13346 . -3) (undo-tree-id13347 . -3) (undo-tree-id13348 . -3) (undo-tree-id13349 . -3) (undo-tree-id13350 . -3) (undo-tree-id13351 . -3) (undo-tree-id13352 . -3) (undo-tree-id13353 . -3) (undo-tree-id13354 . -3) (undo-tree-id13355 . -3) (undo-tree-id13356 . -3) (undo-tree-id13357 . -3) (undo-tree-id13358 . -3) (undo-tree-id13359 . -3) (undo-tree-id13360 . -3) (undo-tree-id13361 . -3) (undo-tree-id13362 . -3) (undo-tree-id13363 . -3) (undo-tree-id13364 . -3) (undo-tree-id13365 . -3) (undo-tree-id13366 . -3) (undo-tree-id13367 . -3) (undo-tree-id13368 . -3) (undo-tree-id13369 . -3) (undo-tree-id13370 . -3) (undo-tree-id13371 . -3) (undo-tree-id13372 . -3) (undo-tree-id13373 . -3) (undo-tree-id13374 . -3) (undo-tree-id13375 . -3) (undo-tree-id13376 . -3) (undo-tree-id13377 . -3) (undo-tree-id13378 . -3) (undo-tree-id13379 . -3) (undo-tree-id13380 . -3) (undo-tree-id13381 . -3) (undo-tree-id13382 . -3) (undo-tree-id13383 . -3) (undo-tree-id13384 . -3) (undo-tree-id13385 . -3) (undo-tree-id13386 . -3) (undo-tree-id13387 . -3) (undo-tree-id13388 . -3) (undo-tree-id13389 . -3) (undo-tree-id13390 . -3) (undo-tree-id13391 . -3) (undo-tree-id13392 . -3) (undo-tree-id13393 . -3) (undo-tree-id13394 . -3) (undo-tree-id13395 . -3) (undo-tree-id13396 . -3) (undo-tree-id13397 . -3) (undo-tree-id13398 . -3) (undo-tree-id13399 . -3) (undo-tree-id13400 . -3) (undo-tree-id13401 . -3) (undo-tree-id13402 . -3) (undo-tree-id13403 . -3) (undo-tree-id13404 . -3) (undo-tree-id13405 . -3) (undo-tree-id13406 . -3) (undo-tree-id13407 . -3) (undo-tree-id13408 . -3) (undo-tree-id13409 . -3) (undo-tree-id13410 . -3) (undo-tree-id13411 . -3) (undo-tree-id13412 . -3) (undo-tree-id13413 . -3) (undo-tree-id13414 . -3) (undo-tree-id13415 . -3) (undo-tree-id13416 . -3) (undo-tree-id13417 . -3) (undo-tree-id13418 . -3) (undo-tree-id13419 . -3) (undo-tree-id13420 . -3) (undo-tree-id13421 . -3) (undo-tree-id13422 . -3) (undo-tree-id13423 . -3) (undo-tree-id13424 . -3) (undo-tree-id13425 . -3) (undo-tree-id13426 . -3) (undo-tree-id13427 . -3) (undo-tree-id13428 . -3) (undo-tree-id13429 . -3) (undo-tree-id13430 . -3) (undo-tree-id13431 . -3) (undo-tree-id13432 . -3) (undo-tree-id13433 . -3) (undo-tree-id13434 . -3) (undo-tree-id13435 . -3)) (26075 31276 288533 658000) 0 nil])
([nil nil ((9998 . 9999) (t 26075 31326 738208 115000)) nil (26075 31331 720829 571000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10007) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (#("o" 0 1 (fontified t)) . -10008) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (#("o" 0 1 (fontified t)) . -10009) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) 10010) ((10007 . 10010)) (26075 31276 282983 183000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . 10081) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (t 26075 31331 754874 982000)) nil (26075 31351 713345 152000) 0 nil])
nil
([nil nil ((10081 . 10082) (#("1" 0 1 (fontified t)) . 10081) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1)) nil (26075 31351 713297 455000) 0 nil])
([nil nil ((#("Ter," 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t c-type c-not-decl)) . 10117) (undo-tree-id13941 . -3) (undo-tree-id13942 . -4) (undo-tree-id13943 . -4) (undo-tree-id13944 . -4) (undo-tree-id13945 . -4) (undo-tree-id13946 . -4) (undo-tree-id13947 . -4) (undo-tree-id13948 . -4) (undo-tree-id13949 . -4) (undo-tree-id13950 . -4) (undo-tree-id13951 . -4) (undo-tree-id13952 . -4) (undo-tree-id13953 . -4) (undo-tree-id13954 . -4) (undo-tree-id13955 . -4) (undo-tree-id13956 . -4) (undo-tree-id13957 . -4) (undo-tree-id13958 . -4) (undo-tree-id13959 . -4) (undo-tree-id13960 . -4) (undo-tree-id13961 . -4) (undo-tree-id13962 . -4) (undo-tree-id13963 . -4) (undo-tree-id13964 . -4) (undo-tree-id13965 . -4) (undo-tree-id13966 . -4) (undo-tree-id13967 . -4) (undo-tree-id13968 . -3) (undo-tree-id13969 . -3) (undo-tree-id13970 . -3) (undo-tree-id13971 . -3) (undo-tree-id13972 . -3) (undo-tree-id13973 . -3) (undo-tree-id13974 . -3) (undo-tree-id13975 . -3) (undo-tree-id13976 . -3) (undo-tree-id13977 . -3) (undo-tree-id13978 . -3) (undo-tree-id13979 . -3) (undo-tree-id13980 . -3) (undo-tree-id13981 . -3) (undo-tree-id13982 . -3) (undo-tree-id13983 . -3) (undo-tree-id13984 . -3) (undo-tree-id13985 . -3) (undo-tree-id13986 . -3) (undo-tree-id13987 . -3) (undo-tree-id13988 . -3) (undo-tree-id13989 . -3) (undo-tree-id13990 . -3) (undo-tree-id13991 . -3) (undo-tree-id13992 . -3) (undo-tree-id13993 . -3) (undo-tree-id13994 . -2) (undo-tree-id13995 . -2) (undo-tree-id13996 . -2) (undo-tree-id13997 . -2) (undo-tree-id13998 . -2) (undo-tree-id13999 . -2) (undo-tree-id14000 . -2) (undo-tree-id14001 . -2) (undo-tree-id14002 . -2) (undo-tree-id14003 . -2) (undo-tree-id14004 . -2) (undo-tree-id14005 . -2) (undo-tree-id14006 . -2) (undo-tree-id14007 . -2) (undo-tree-id14008 . -2) (undo-tree-id14009 . -2) (undo-tree-id14010 . -2) (undo-tree-id14011 . -2) (undo-tree-id14012 . -2) (undo-tree-id14013 . -2) (undo-tree-id14014 . -2) (undo-tree-id14015 . -2) (undo-tree-id14016 . -2) (undo-tree-id14017 . -2) (undo-tree-id14018 . -2) (undo-tree-id14019 . -2) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -4) (t 26075 31351 741542 446000)) nil (26075 31378 561326 286000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 8398) (t 26075 31378 591543 522000)) nil (26075 31486 149001 164000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 8398)) nil (26075 31486 148999 955000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 8398)) nil (26075 31486 148995 862000) 0 nil])
([nil nil ((8405 . 8406) (8404 . 8405) (8403 . 8404) (8401 . 8403) (8400 . 8401) (8398 . 8400) (8398 . 8399) (t 26075 31486 178214 501000)) nil (26075 31503 395555 247000) 0 nil])
([nil nil ((10165 . 10168) (10164 . 10165) (t 26075 31503 421548 526000)) nil (26075 31652 881259 548000) 0 nil])
([nil nil ((8409 . 8410) (t 26075 31652 911554 516000)) nil (26075 31720 762604 392000) 0 nil])
([nil nil ((8410 . 8412)) nil (26075 31720 762603 810000) 0 nil])
([nil nil ((8412 . 8413)) nil (26075 31720 762603 432000) 0 nil])
([nil nil ((8413 . 8415)) nil (26075 31720 762602 924000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -8414) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) 8415) nil (26075 31720 762601 859000) 0 nil])
([nil nil ((8414 . 8415)) nil (26075 31720 762592 60000) 0 nil])
([nil nil ((8414 . 8415) (#("1" 0 1 (fontified t)) . 8414) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (t 26075 31720 788223 907000)) nil (26075 31735 640803 604000) 0 nil])
([nil nil ((8414 . 8415) (#("9" 0 1 (fontified t)) . 8414) (t 26075 31735 678224 501000)) nil (26075 31759 744354 58000) 0 nil])
([nil nil ((8411 . 8412) (#("4" 0 1 (fontified t)) . 8411)) nil (26075 31759 744353 54000) 0 nil])
([nil nil ((8402 . 8403) (#("2" 0 1 (fontified t)) . 8402) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1)) nil (26075 31759 744346 717000) 0 nil])
([nil nil ((13811 . 13816) (#(" " 0 1 (fontified t)) . 13795) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . 1) 13796 (13791 . 13795) (#("r" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -13791) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (#("e" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -13792) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (#("t" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -13793) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (#("u" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -13794) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (#("r" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -13795) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -13796) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) 13797 (t 26075 31759 784892 133000)) nil (26075 31919 209828 114000) 0 nil])
([nil nil ((8411 . 8412) (#("2" 0 1 (fontified t)) . 8411) (t 26075 31919 234898 529000)) nil (26075 32037 119398 313000) 0 nil])
([nil nil ((8412 . 8413) (#("}" 0 1 (fontified nil)) . -8412) (8412 . 8413) (t 26075 32037 144903 245000)) nil (26075 32049 960834 576000) 0 nil])
([nil nil ((8413 . 8414)) nil (26075 32049 960833 742000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-id-start)) . -8413) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) 8414) nil (26075 32049 960832 596000) 0 nil])
([nil nil ((8413 . 8414)) nil (26075 32049 960825 976000) 0 nil])
([nil nil ((8414 . 8416)) nil (26075 32049 960822 668000) 0 nil])
([nil nil ((8411 . 8412) (#("2" 0 1 (fontified t)) . -8411) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) 8412 (8411 . 8412) (#("0" 0 1 (fontified t)) . -8411) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -8412) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . 1) (undo-tree-id14330 . -1) (#(";" 0 1 (fontified t)) . -8413) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (#("/" 0 1 (fontified t)) . -8414) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -8415) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) 8416 (t 26075 32049 994903 761000)) nil (26075 32069 82454 681000) 0 nil])
([nil nil ((13841 . 13842) (13835 . 13840) (13834 . 13835) (13831 . 13834) (13830 . 13832) (13825 . 13830) (13816 . 13825) (13811 . 13816) (t 26075 32069 111571 191000) 13810) nil (26075 32146 258052 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14129 . 14130) (nil fontified nil 13894 . 14130) (13894 . 14130) 13893 (t 26075 32146 308240 945000)) nil (26075 32226 812030 413000) 0 nil])
([nil nil ((14148 . 14149) (14142 . 14148) (14135 . 14142) (14130 . 14135) (14130 . 14135) 14130) nil (26075 32226 812026 586000) 0 nil])
([nil nil ((8415 . 8416) (t 26075 32226 844910 847000)) nil (26075 32292 429119 608000) 0 nil])
([nil nil ((8416 . 8418)) nil (26075 32292 429118 962000) 0 nil])
([nil nil ((8418 . 8419)) nil (26075 32292 429118 383000) 0 nil])
([nil nil ((8419 . 8421)) nil (26075 32292 429115 354000) 0 nil])
([nil nil ((8410 . 8412) (8409 . 8410) (8404 . 8406) (8403 . 8404) (t 26075 32292 471580 141000)) nil (26075 32338 683388 920000) 0 nil])
([nil nil ((8414 . 8416) (8413 . 8414) (8410 . 8413) (8409 . 8410) (t 26075 32338 721581 991000)) nil (26075 32358 708753 382000) 0 nil])
([nil nil ((8657 . 8660) (8656 . 8657) (11795 . 11796) (7567 . 7568) (t 26075 32358 801582 793000)) nil (26075 32523 123204 554000) 0 nil])
([nil nil ((8659 . 8660) (t 26075 32523 148256 31000)) nil (26075 32684 999316 514000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8659) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (undo-tree-id14373 . -1) (undo-tree-id14374 . -1) (undo-tree-id14375 . -1) (undo-tree-id14376 . -1) (undo-tree-id14377 . -1) (undo-tree-id14378 . -1) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) (undo-tree-id14385 . -1) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) 8660) nil (26075 32684 999314 296000) 0 nil])
([nil nil ((8660 . 8662)) nil (26075 32684 999271 49000) 0 nil])
([nil nil ((apply -201 8570 11945 undo--wrap-and-run-primitive-undo 8570 11945 ((11939 . 11942) (11924 . 11927) (11908 . 11911) (11823 . 11826) (11777 . 11780) (11751 . 11754) (11740 . 11743) (11663 . 11666) (11649 . 11652) (11564 . 11567) (11547 . 11550) (11470 . 11473) (11441 . 11444) (11353 . 11356) (11336 . 11339) (11253 . 11256) (11236 . 11239) (11161 . 11164) (11152 . 11155) (11135 . 11138) (11123 . 11126) (11040 . 11043) (11028 . 11031) (10967 . 10970) (10955 . 10958) (10924 . 10927) (10883 . 10886) (10853 . 10856) (10804 . 10807) (10752 . 10755) (10698 . 10701) (10643 . 10646) (10588 . 10591) (10533 . 10536) (10490 . 10493) (10422 . 10425) (10375 . 10378) (10293 . 10296) (10246 . 10249) (10205 . 10208) (10155 . 10158) (10113 . 10116) (10062 . 10065) (10003 . 10006) (9955 . 9958) (9912 . 9915) (9862 . 9865) (9816 . 9819) (9769 . 9772) (9640 . 9643) (9572 . 9575) (9503 . 9506) (9434 . 9437) (9365 . 9368) (9298 . 9301) (9233 . 9236) (9168 . 9171) (9101 . 9104) (9034 . 9037) (8969 . 8972) (8902 . 8905) (8835 . 8838) (8770 . 8773) (8719 . 8722) (8672 . 8675) (8667 . 8670) (8570 . 8573))) (t 26075 32685 31595 845000)) nil (26075 32714 60622 924000) 0 nil])
([nil nil ((apply 201 8570 11743 undo--wrap-and-run-primitive-undo 8570 11743 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11741) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11729) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11716) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11634) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11591) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11568) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11560) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11486) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -11475) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11393) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11379) (#("// " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11305) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11279) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11194) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11180) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11100) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11086) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11014) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -11008) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10994) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10985) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10905) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10896) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10838) (#("// " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10829) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10801) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10763) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10736) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10690) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10641) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10590) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10538) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10486) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10434) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10394) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10329) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10285) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10206) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10162) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10124) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10077) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -10038) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9990) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9934) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9889) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9849) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9802) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9759) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9715) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9589) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9524) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9458) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9392) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9326) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9262) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9200) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9138) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9074) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -9010) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8948) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8884) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8820) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8758) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8710) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8666) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8664) (#("// " 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -8570) 11944)) (t 26075 32714 91597 8000)) nil (26075 32899 375817 374000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -8660) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) (undo-tree-id14408 . -1) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -1) (undo-tree-id14412 . -1) (undo-tree-id14413 . -1) (undo-tree-id14414 . -1) (undo-tree-id14415 . -1) (undo-tree-id14416 . -1) (undo-tree-id14417 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) (undo-tree-id14423 . -1) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (undo-tree-id14438 . -1) (undo-tree-id14439 . -1) (undo-tree-id14440 . -1) (undo-tree-id14441 . -1) (undo-tree-id14442 . -1) (undo-tree-id14443 . -1) (undo-tree-id14444 . -1) (undo-tree-id14445 . -1) (undo-tree-id14446 . -1) (undo-tree-id14447 . -1) (undo-tree-id14448 . -1) (undo-tree-id14449 . -1) (undo-tree-id14450 . -1) (undo-tree-id14451 . -1) (undo-tree-id14452 . -1) (undo-tree-id14453 . -1) (undo-tree-id14454 . -1) (undo-tree-id14455 . -1) (undo-tree-id14456 . -1) (undo-tree-id14457 . -1) (undo-tree-id14458 . -1) (undo-tree-id14459 . -1) (undo-tree-id14460 . -1) (undo-tree-id14461 . -1) (undo-tree-id14462 . -1) (undo-tree-id14463 . -1) (undo-tree-id14464 . -1) (undo-tree-id14465 . -1) (undo-tree-id14466 . -1) (undo-tree-id14467 . -1) (undo-tree-id14468 . -1) (undo-tree-id14469 . -1) (undo-tree-id14470 . -1) (undo-tree-id14471 . -1) (undo-tree-id14472 . -1) (undo-tree-id14473 . -1) (undo-tree-id14474 . -1) (undo-tree-id14475 . -1) (undo-tree-id14476 . -1) (undo-tree-id14477 . -1) (undo-tree-id14478 . -1) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) (undo-tree-id14541 . -1) (undo-tree-id14542 . -1) (undo-tree-id14543 . -1) (undo-tree-id14544 . -1) (undo-tree-id14545 . -1) (undo-tree-id14546 . -1) (undo-tree-id14547 . -1) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (undo-tree-id14550 . -1) (undo-tree-id14551 . -1) (undo-tree-id14552 . -1) (undo-tree-id14553 . -1) (undo-tree-id14554 . -1) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (undo-tree-id14557 . -1) (undo-tree-id14558 . -1) (undo-tree-id14559 . -1) (undo-tree-id14560 . -1) (undo-tree-id14561 . -1) (undo-tree-id14562 . -1) (undo-tree-id14563 . -1) (undo-tree-id14564 . -1) (undo-tree-id14565 . -1) (undo-tree-id14566 . -1) (undo-tree-id14567 . -1) (undo-tree-id14568 . -1) (undo-tree-id14569 . -1) (undo-tree-id14570 . -1) (undo-tree-id14571 . -1) (undo-tree-id14572 . -1) (undo-tree-id14573 . -1) (undo-tree-id14574 . -1) (undo-tree-id14575 . -1) (undo-tree-id14576 . -1) (undo-tree-id14577 . -1) (undo-tree-id14578 . -1) (undo-tree-id14579 . -1) (undo-tree-id14580 . -1) (undo-tree-id14581 . -1) (undo-tree-id14582 . -1) (undo-tree-id14583 . -1) (undo-tree-id14584 . -1) (undo-tree-id14585 . -1) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) (undo-tree-id14629 . -1) (undo-tree-id14630 . -1) (undo-tree-id14631 . -1) (undo-tree-id14632 . -1) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (undo-tree-id14690 . -1) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (undo-tree-id14709 . -1) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (undo-tree-id14714 . -1) (undo-tree-id14715 . -1) (undo-tree-id14716 . -1) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (#("i" 0 1 (fontified t)) . -8661) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (undo-tree-id15061 . -1) (undo-tree-id15062 . -1) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) (undo-tree-id15075 . -1) (undo-tree-id15076 . -1) (undo-tree-id15077 . -1) (undo-tree-id15078 . -1) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) (undo-tree-id15085 . -1) (undo-tree-id15086 . -1) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (#("n" 0 1 (fontified t)) . -8662) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) (undo-tree-id15210 . -1) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -8663) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) 8664 (#(" " 0 1 (fontified t)) . 8664) (undo-tree-id15220 . -1) (undo-tree-id15221 . -1) 8665 (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -8665) (undo-tree-id15222 . -1) 8666 (8631 . 8634) (#("u" 0 1 (fontified t)) . -8631) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) 8632 (8631 . 8632) (8631 . 8632)) nil (26075 32899 375795 351000) 0 nil])
([nil current ((12069 . 12070) (12069 . 12070) (#("m" 0 1 (fontified t)) . -12069) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) 12070 (12069 . 12070) (t 26075 32899 458271 119000)) nil (26075 33086 7450 33000) 0 nil])
nil

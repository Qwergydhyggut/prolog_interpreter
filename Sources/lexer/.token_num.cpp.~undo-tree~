(undo-tree-save-format-version . 1)
"2028f1787f5e0c019ebf0f56e1fc5b74f9b3c52d"
[nil nil nil nil (26067 16927 688040 388000) 0 nil]
([nil nil ((1 . 2) (t 26067 16805 139983 275000)) nil (26067 16927 688039 697000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 2) nil (26067 16927 688039 11000) 0 nil])
([nil nil ((1 . 2)) nil (26067 16927 688037 936000) 0 nil])
([nil nil ((2 . 4)) nil (26067 16927 688037 591000) 0 nil])
([nil nil ((apply yas--snippet-revive 2 12 #s(yas--snippet nil nil #s(yas--exit 11 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11 nil) 3 nil nil nil nil)) (2 . 12) (#("include \"$0\"" 0 12 (fontified nil)) . 2) (undo-tree-id8 . -12) (2 . 14) (#("i" 0 1 (fontified nil)) . 2) (undo-tree-id9 . -1) (2 . 3) (#("include \"header\"" 0 16 (fontified nil)) . -2) (undo-tree-id10 . -16) (2 . 18) (#("in" 0 1 (face font-lock-preprocessor-face fontified t) 1 2 (face font-lock-preprocessor-face fontified t)) . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) 4) nil (26067 16927 688036 639000) 0 nil])
([nil nil ((11 . 16)) nil (26067 16927 688033 128000) 0 nil])
([nil nil ((16 . 17)) nil (26067 16927 688032 804000) 0 nil])
([nil nil ((17 . 23)) nil (26067 16927 688032 516000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -21) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -22) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 23) nil (26067 16927 688031 952000) 0 nil])
([nil nil ((21 . 22)) nil (26067 16927 688029 960000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face fontified t)) . -20) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -21) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 22) nil (26067 16927 688029 123000) 0 nil])
([nil nil ((20 . 23)) nil (26067 16927 688005 113000) 0 nil])
([nil nil ((23 . 28)) nil (26067 16927 688004 670000) 0 nil])
([nil nil ((29 . 30) 28) nil (26067 16927 688001 780000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face c-in-sws t fontified t)) . -27) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 28 (t 26067 16927 699980 768000)) nil (26067 16945 937972 2000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face c-in-sws t fontified t)) . -26) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 27) nil (26067 16945 937968 131000) 0 nil])
([nil nil ((26 . 28) (t 26067 16945 949980 400000)) nil (26067 16950 513063 216000) 0 nil])
([nil nil ((31 . 31) (31 . 32) (30 . 30) (30 . 31) (t 26067 16950 549980 308000)) nil (26067 17047 51427 173000) 0 nil])
([nil nil ((32 . 38)) nil (26067 17047 51426 595000) 0 nil])
([nil nil ((1 . 1) (1 . 2)) nil (26067 17047 51426 193000) 0 nil])
([nil nil ((1 . 2)) nil (26067 17047 51425 663000) 0 nil])
([nil nil ((2 . 4)) nil (26067 17047 51425 240000) 0 nil])
([nil nil ((apply yas--snippet-revive 2 12 #s(yas--snippet nil nil #s(yas--exit 11 nil) 4 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11 nil) 4 nil nil nil nil)) (2 . 12) (#("include \"$0\"" 0 12 (fontified nil c-in-sws t)) . 2) (undo-tree-id49 . -12) (2 . 14) (#("i" 0 1 (fontified nil c-in-sws t)) . 2) (undo-tree-id50 . -1) (2 . 3) (#("include \"header\"" 0 16 (fontified nil c-in-sws t)) . -2) (undo-tree-id51 . -16) (2 . 18) (#("in" 0 1 (face font-lock-preprocessor-face c-in-sws t fontified t) 1 2 (face font-lock-preprocessor-face c-in-sws t fontified t)) . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) 4) nil (26067 17047 51424 286000) 0 nil])
([nil nil ((11 . 15)) nil (26067 17047 51419 232000) 0 nil])
([nil nil ((11 . 17) (nil syntax-table nil 11 . 12) (nil syntax-table (1) 10 . 11) (#("d\"" 0 1 (fontified nil c-in-sws t) 1 2 (c-in-sws t face font-lock-string-face fontified nil)) . 11) (undo-tree-id46 . -2) (11 . 12) (#("debug/" 0 6 (fontified nil c-in-sws t)) . -11) (11 . 17) (#("debu" 0 1 (face font-lock-string-face c-in-sws t fontified t) 1 2 (face font-lock-string-face c-in-sws t fontified t) 2 3 (face font-lock-string-face c-in-sws t fontified t) 3 4 (face font-lock-string-face c-in-sws t fontified t)) . -11) (undo-tree-id47 . -4) (undo-tree-id48 . -4) 15) nil (26067 17047 51418 267000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -16) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (nil syntax-table nil 17 . 18) (nil syntax-table (1) 10 . 11)) nil (26067 17047 51415 983000) 0 nil])
([nil nil ((16 . 17) (nil syntax-table nil 16 . 17) (nil syntax-table (1) 10 . 11) (#("\"" 0 1 (c-in-sws t face font-lock-string-face fontified nil)) . -16) (undo-tree-id43 . -1) (16 . 17) (nil syntax-table nil 16 . 17) (nil syntax-table (1) 10 . 11)) nil (26067 17047 51414 292000) 0 nil])
([nil nil ((47 . 47) (47 . 48)) nil (26067 17047 51412 992000) 0 nil])
([nil nil ((47 . 48)) nil (26067 17047 51412 446000) 0 nil])
([nil nil ((#("@" 0 1 (c-is-sws t fontified t)) . -47) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 48) nil (26067 17047 51411 655000) 0 nil])
([nil nil ((47 . 48)) nil (26067 17047 51409 944000) 0 nil])
([nil nil ((48 . 50)) nil (26067 17047 51409 601000) 0 nil])
([nil nil ((apply yas--snippet-revive 48 58 #s(yas--snippet nil nil #s(yas--exit 57 nil) 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 57 nil) 5 nil nil nil nil)) (48 . 58) (#("include \"$0\"" 0 12 (fontified nil)) . 48) (undo-tree-id35 . -12) (48 . 60) (#("i" 0 1 (fontified nil c-in-sws t)) . 48) (undo-tree-id36 . -1) (48 . 49) (#("include \"header\"" 0 16 (fontified nil)) . -48) (undo-tree-id37 . -16) (48 . 64) (#("in" 0 1 (face font-lock-preprocessor-face c-in-sws t fontified t) 1 2 (face font-lock-preprocessor-face c-in-sws t fontified t)) . -48) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) 50) nil (26067 17047 51408 594000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -56) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (nil syntax-table nil 57 . 58) (nil syntax-table (1) 56 . 57) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 57) (undo-tree-id34 . -1)) nil (26067 17047 51404 281000) 0 nil])
([nil nil ((56 . 58)) nil (26067 17047 51401 873000) 0 nil])
([nil nil ((57 . 60)) nil (26067 17047 51401 396000) 0 nil])
([nil nil ((57 . 66) (#("i>" 0 1 (fontified nil c-in-sws t) 1 2 (c-in-sws t face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified nil)) . 57) (undo-tree-id29 . -2) (57 . 58) (#("iostream>" 0 9 (fontified nil c-in-sws t)) . -57) (57 . 66) (#("ios" 0 1 (face font-lock-string-face c-in-sws t fontified t) 1 2 (face font-lock-string-face c-in-sws t fontified t) 2 3 (face font-lock-string-face c-in-sws t fontified t)) . -57) (undo-tree-id30 . -3) (undo-tree-id31 . -3) 60) nil (26067 17047 51400 302000) 0 nil])
([nil nil ((75 . 78)) nil (26067 17047 51398 139000) 0 nil])
([nil nil ((75 . 84) (#("n" 0 1 (fontified nil)) . 75) (75 . 76) (#("namespace" 0 9 (fontified nil)) . -75) (75 . 84) (#("nam" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t)) . -75) (undo-tree-id27 . -3) (undo-tree-id28 . -3) 78) nil (26067 17047 51397 440000) 0 nil])
([nil nil ((84 . 87)) nil (26067 17047 51395 556000) 0 nil])
([nil nil ((85 . 88) (#("s" 0 1 (fontified nil)) . 85) (85 . 86) (#("std" 0 3 (fontified nil)) . -85) (85 . 88) (#("st" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . -85) (undo-tree-id25 . -2) (undo-tree-id26 . -2) 87) nil (26067 17047 51394 215000) 0 nil])
([nil nil ((88 . 89)) nil (26067 17047 51392 236000) 0 nil])
([nil nil ((89 . 89) (89 . 90)) nil (26067 17047 51391 781000) 0 nil])
([nil nil ((90 . 91)) nil (26067 17047 51391 53000) 0 nil])
([nil nil ((apply yas--snippet-revive 90 107 #s(yas--snippet nil nil #s(yas--exit 106 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 106 nil) 6 nil nil nil nil)) (90 . 107) (#("using namespace $0;" 0 19 (fontified nil)) . 90) (90 . 109) (#("u" 0 1 (fontified nil)) . 90) (90 . 91) (#("using namespace identifier;" 0 27 (fontified nil)) . -90) (90 . 117) (#("u" 0 1 (fontified t)) . -90) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 91) nil (26067 17047 51390 42000) 0 nil])
([nil nil ((106 . 108)) nil (26067 17047 51388 41000) 0 nil])
([nil nil ((106 . 115) (#("to" 0 2 (fontified nil)) . 106) (106 . 108) (#("token_num" 0 9 (fontified nil)) . -106) (106 . 115) (#("to" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . -106) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) 108) nil (26067 17047 51386 482000) 0 nil])
([nil nil ((116 . 117) 115) nil (26067 17047 51373 742000) 0 nil])
([nil nil ((117 . 117) (117 . 118) (116 . 116) (116 . 117) (t 26067 17047 59978 334000)) nil (26067 17145 220226 86000) 0 nil])
([nil nil ((118 . 121)) nil (26067 17145 220225 314000) 0 nil])
([nil nil ((118 . 127) (#("to" 0 2 (fontified nil)) . 118) (118 . 120) (#("token_num" 0 9 (fontified nil)) . -118) (118 . 127) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -118) (undo-tree-id55 . -3) (undo-tree-id56 . -3) 121) nil (26067 17145 220224 393000) 0 nil])
([nil nil ((127 . 129)) nil (26067 17145 220214 822000) 0 nil])
([nil nil ((129 . 138) (#("token_num" 0 9 (fontified nil)) . -129) (129 . 138)) nil (26067 17145 220214 90000) 0 nil])
([nil nil ((138 . 140)) nil (26067 17145 220212 961000) 0 nil])
([nil nil ((16 . 18)) nil (26067 17155 295562 48000) 0 nil])
([nil nil ((143 . 145) (t 26067 17145 236643 1000)) nil (26067 17168 699959 631000) 0 nil] [nil nil ((143 . 145) (t 26067 17145 236643 1000)) ((#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 143) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) (26067 17155 294256 295000) 0 nil])
([nil nil ((145 . 147) (144 . 146)) nil (26067 17168 699959 108000) 0 nil])
nil
([nil nil ((144 . 147)) nil (26067 17168 699958 578000) 0 nil])
([nil nil ((144 . 147)) nil (26067 17168 699958 189000) 0 nil])
([nil nil ((147 . 148)) nil (26067 17168 699957 387000) 0 nil])
([nil nil ((156 . 157) 148) nil (26067 17168 699953 631000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -147) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 148 (t 26067 17168 703309 188000)) nil (26067 17293 51736 868000) 0 nil])
([nil nil ((147 . 149)) nil (26067 17293 51727 186000) 0 nil])
([nil nil ((149 . 155)) nil (26067 17293 51725 444000) 0 nil])
([nil nil ((155 . 156)) nil (26067 17293 51716 832000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -154) (undo-tree-id76 . -1) 155 (t 26067 17293 59973 325000)) nil (26067 17367 110883 525000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 153) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 154) nil (26067 17367 110881 127000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -147) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (fontified t)) . -148) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("t" 0 1 (fontified t)) . -149) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("u" 0 1 (fontified t)) . -150) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("r" 0 1 (fontified t)) . -151) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -152) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 153) nil (26067 17367 110876 7000) 0 nil])
([nil nil ((147 . 152)) nil (26067 17367 110859 3000) 0 nil])
([nil nil ((20 . 22) (t 26067 17367 116638 483000)) nil (26067 17456 285141 371000) 0 nil])
([nil nil ((#("/" 0 1 (c-is-sws t fontified t)) . -20) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -21) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 22 (t 26067 17456 293303 337000)) nil (26067 17462 37813 84000) 0 nil])
([nil nil ((162 . 163) (t 26067 17462 56636 554000) 162) nil (26067 17743 975854 807000) 0 nil])
([nil nil ((163 . 165)) nil (26067 17743 975854 140000) 0 nil])
([nil nil ((163 . 172) (#("to" 0 2 (fontified nil)) . 163) (163 . 165) (#("token_num" 0 9 (fontified nil)) . -163) (163 . 172) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -163) (undo-tree-id81 . -2) (undo-tree-id82 . -2) 165) nil (26067 17743 975852 821000) 0 nil])
([nil nil ((172 . 174)) nil (26067 17743 975844 182000) 0 nil])
([nil nil ((174 . 183) (#("token_num" 0 9 (fontified nil)) . -174) (174 . 183)) nil (26067 17743 975843 535000) 0 nil])
([nil nil ((174 . 175)) nil (26067 17743 975842 727000) 0 nil])
([nil nil ((184 . 186)) nil (26067 17743 975842 266000) 0 nil])
([nil nil ((187 . 191) (186 . 186) (186 . 187)) nil (26067 17743 975841 666000) 0 nil])
([nil nil ((187 . 189)) nil (26067 17743 975840 711000) 0 nil])
([nil nil ((189 . 191) (188 . 190)) nil (26067 17743 975840 249000) 0 nil])
([nil nil ((188 . 191)) nil (26067 17743 975839 676000) 0 nil])
([nil nil ((188 . 191)) nil (26067 17743 975839 352000) 0 nil])
([nil nil ((191 . 196)) nil (26067 17743 975838 999000) 0 nil])
([nil nil ((196 . 197)) nil (26067 17743 975838 287000) 0 nil])
([nil nil ((209 . 210) 197) nil (26067 17743 975834 238000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -210) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 211 (210 . 211) (t 26067 17743 993297 501000)) nil (26067 17813 788408 104000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4288 . 4289) (nil fontified nil 4288 . 4289) (nil fontified nil 4116 . 4288) (nil fontified nil 4115 . 4116) (nil fontified nil 390 . 4115) (nil fontified nil 388 . 390) (nil fontified nil 366 . 388) (nil fontified nil 365 . 366) (nil fontified nil 347 . 365) (nil fontified nil 346 . 347) (nil fontified nil 329 . 346) (nil fontified nil 328 . 329) (nil fontified nil 309 . 328) (nil fontified nil 308 . 309) (nil fontified nil 288 . 308) (nil fontified nil 287 . 288) (nil fontified nil 267 . 287) (nil fontified nil 266 . 267) (nil fontified nil 248 . 266) (nil fontified nil 247 . 248) (nil fontified nil 230 . 247) (nil fontified nil 229 . 230) (nil fontified nil 211 . 229) (nil fontified nil 210 . 211) (210 . 4289)) nil (26067 17813 788400 287000) 0 nil])
([nil nil ((apply -261 660 4376 undo--wrap-and-run-primitive-undo 660 4376 ((4370 . 4373) (4339 . 4342) (4324 . 4327) (4319 . 4322) (4261 . 4264) (4255 . 4258) (4221 . 4224) (4206 . 4209) (4167 . 4170) (4152 . 4155) (4147 . 4150) (4101 . 4104) (4095 . 4098) (4059 . 4062) (4027 . 4030) (4012 . 4015) (3987 . 3990) (3972 . 3975) (3950 . 3953) (3925 . 3928) (3920 . 3923) (3866 . 3869) (3860 . 3863) (3822 . 3825) (3807 . 3810) (3754 . 3757) (3739 . 3742) (3734 . 3737) (3661 . 3664) (3503 . 3506) (3479 . 3482) (3473 . 3476) (3435 . 3438) (3419 . 3422) (3407 . 3410) (3338 . 3341) (3296 . 3299) (3263 . 3266) (3175 . 3178) (3134 . 3137) (3102 . 3105) (3087 . 3090) (3008 . 3011) (2993 . 2996) (2912 . 2915) (2772 . 2775) (2727 . 2730) (2699 . 2702) (2662 . 2665) (2601 . 2604) (2586 . 2589) (2566 . 2569) (2513 . 2516) (2455 . 2458) (2450 . 2453) (2382 . 2385) (2376 . 2379) (2346 . 2349) (2256 . 2259) (2240 . 2243) (2102 . 2105) (2082 . 2085) (1984 . 1987) (1866 . 1869) (1794 . 1797) (1776 . 1779) (1501 . 1504) (1496 . 1499) (1443 . 1446) (1437 . 1440) (1336 . 1339) (1311 . 1314) (1306 . 1309) (1265 . 1268) (1255 . 1258) (1203 . 1206) (1097 . 1100) (1066 . 1069) (1040 . 1043) (1020 . 1023) (997 . 1000) (919 . 922) (814 . 817) (765 . 768) (720 . 723) (715 . 718) (660 . 663)))) nil (26067 17813 788394 768000) 0 nil])
([nil nil ((#("using namespace token_num;

token_num::token_num()
{
  debug;
  
  
}

token_num::~token_num()
{
  debug;
  
  
}    
#include \"debug.h\"
#include <cstdio>
#include \"lexer.h\"
#include <algorithm>
#include <exception>
#include <iostream>
#include <memory>
#include <ostream>
#include <type_traits>
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 25 (face font-lock-constant-face fontified t) 25 26 (c-type c-decl-id-start fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 37 (face font-lock-constant-face fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 48 (face font-lock-function-name-face fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (fontified t) 53 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 64 (fontified t) 64 65 (fontified t) 65 68 (fontified t) 68 69 (c-type c-decl-id-start face (rainbow-delimiters-depth-1-face) fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 80 (face font-lock-constant-face fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 92 (face font-lock-function-name-face fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-1-face) fontified t) 96 97 (fontified t) 97 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 108 (fontified t) 108 109 (fontified t) 109 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 117 (fontified t) 117 118 (fontified t) 118 119 (face font-lock-preprocessor-face fontified t c-is-sws t) 119 126 (face font-lock-preprocessor-face fontified t) 126 127 (fontified t) 127 136 (face font-lock-string-face fontified t) 136 137 (fontified t) 137 138 (face font-lock-preprocessor-face fontified t c-is-sws t) 138 145 (face font-lock-preprocessor-face fontified t) 145 146 (fontified t) 146 147 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 147 153 (face font-lock-string-face fontified t) 153 154 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 154 155 (fontified t) 155 156 (face font-lock-preprocessor-face fontified t c-is-sws t) 156 163 (face font-lock-preprocessor-face fontified t) 163 164 (fontified t) 164 173 (face font-lock-string-face fontified t) 173 174 (fontified t) 174 175 (face font-lock-preprocessor-face fontified t c-is-sws t) 175 182 (face font-lock-preprocessor-face fontified t) 182 183 (fontified t) 183 184 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 184 193 (face font-lock-string-face fontified t) 193 194 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 194 195 (fontified t) 195 196 (face font-lock-preprocessor-face fontified t c-is-sws t) 196 203 (face font-lock-preprocessor-face fontified t) 203 204 (fontified t) 204 205 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 205 214 (face font-lock-string-face fontified t) 214 215 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 215 216 (fontified t) 216 217 (face font-lock-preprocessor-face fontified t c-is-sws t) 217 224 (face font-lock-preprocessor-face fontified t) 224 225 (fontified t) 225 226 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 226 234 (face font-lock-string-face fontified t) 234 235 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 235 236 (fontified t) 236 237 (face font-lock-preprocessor-face fontified t c-is-sws t) 237 244 (face font-lock-preprocessor-face fontified t) 244 245 (fontified t) 245 246 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 246 252 (face font-lock-string-face fontified t) 252 253 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 253 254 (fontified t) 254 255 (face font-lock-preprocessor-face fontified t c-is-sws t) 255 262 (face font-lock-preprocessor-face fontified t) 262 263 (fontified t) 263 264 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 264 271 (face font-lock-string-face fontified t) 271 272 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 272 273 (fontified t) 273 274 (face font-lock-preprocessor-face fontified t c-is-sws t) 274 281 (face font-lock-preprocessor-face fontified t) 281 282 (fontified t) 282 283 (syntax-table (4 . 62) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 283 294 (face font-lock-string-face fontified t) 294 295 (syntax-table (5 . 60) face (rainbow-delimiters-depth-1-face font-lock-string-face) fontified t) 295 296 (fontified t)) . 92) (undo-tree-id230 . -118) (undo-tree-id231 . -136) (undo-tree-id232 . -195) (undo-tree-id233 . -195) (undo-tree-id234 . -31) (undo-tree-id235 . -31) (undo-tree-id236 . -295) (undo-tree-id237 . -295) (undo-tree-id238 . -111) (undo-tree-id239 . -111) (undo-tree-id240 . -68) (undo-tree-id241 . -295) (undo-tree-id242 . -118) (undo-tree-id243 . -118) (undo-tree-id244 . -137) (undo-tree-id245 . -137) (undo-tree-id246 . -273) (undo-tree-id247 . -273) (undo-tree-id248 . -62) (undo-tree-id249 . -62) (undo-tree-id250 . -106) (undo-tree-id251 . -106) (undo-tree-id252 . -216) (undo-tree-id253 . -216) (undo-tree-id254 . -174) (undo-tree-id255 . -174) (undo-tree-id256 . -68) (undo-tree-id257 . -68) (undo-tree-id258 . -28) (undo-tree-id259 . -28) (undo-tree-id260 . -155) (undo-tree-id261 . -155) (undo-tree-id262 . -65) (undo-tree-id263 . -65) (undo-tree-id264 . -296) (undo-tree-id265 . -296) (undo-tree-id266 . -112) (undo-tree-id267 . -112) (undo-tree-id268 . -27) (undo-tree-id269 . -27) (undo-tree-id270 . -71) (undo-tree-id271 . -71) (undo-tree-id272 . -51) (undo-tree-id273 . -51) (undo-tree-id274 . -53) (undo-tree-id275 . -53) (undo-tree-id276 . -109) (undo-tree-id277 . -109) (undo-tree-id278 . -95) (undo-tree-id279 . -95) (undo-tree-id280 . -97) (undo-tree-id281 . -97) (undo-tree-id282 . -236) (undo-tree-id283 . -236) (undo-tree-id284 . -254) (undo-tree-id285 . -254) (undo-tree-id286 . -70) (undo-tree-id287 . -70) (undo-tree-id288 . -295) (undo-tree-id289 . -295) (t 26067 17813 806629 418000)) nil (26067 17836 621394 879000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 92) (undo-tree-id227 . 1) (undo-tree-id228 . -1) (undo-tree-id229 . -1)) nil (26067 17836 621349 691000) 0 nil])
([nil nil ((#("using namespace std;
" 0 1 (face font-lock-keyword-face fontified t c-is-sws t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 19 (face font-lock-constant-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 71) (undo-tree-id85 . -21) (undo-tree-id86 . -21) (undo-tree-id87 . -21) (undo-tree-id88 . -21) (undo-tree-id89 . -21) (undo-tree-id90 . -21) (undo-tree-id91 . -21) (undo-tree-id92 . -21) (undo-tree-id93 . -21) (undo-tree-id94 . -21) (undo-tree-id95 . -21) (undo-tree-id96 . -20) (undo-tree-id97 . -21) (undo-tree-id98 . -21) (undo-tree-id99 . -21) (undo-tree-id100 . -21) (undo-tree-id101 . -21) (undo-tree-id102 . -21) (undo-tree-id103 . -21) (undo-tree-id104 . -21) (undo-tree-id105 . -21) (undo-tree-id106 . -21) (undo-tree-id107 . -21) (undo-tree-id108 . -21) (undo-tree-id109 . -21) (undo-tree-id110 . -21) (undo-tree-id111 . -21) (undo-tree-id112 . -21) (undo-tree-id113 . -21) (undo-tree-id114 . -21) (undo-tree-id115 . -21) (undo-tree-id116 . -21) (undo-tree-id117 . -21) (undo-tree-id118 . -21) (undo-tree-id119 . -21) (undo-tree-id120 . -21) (undo-tree-id121 . -21) (undo-tree-id122 . -21) (undo-tree-id123 . -21) (undo-tree-id124 . -21) (undo-tree-id125 . -21) (undo-tree-id126 . -21) (undo-tree-id127 . -21) (undo-tree-id128 . -21) (undo-tree-id129 . -21) (undo-tree-id130 . -21) (undo-tree-id131 . -21) (undo-tree-id132 . -21) (undo-tree-id133 . -21) (undo-tree-id134 . -21) (undo-tree-id135 . -21) (undo-tree-id136 . -21) (undo-tree-id137 . -21) (undo-tree-id138 . -21) (undo-tree-id139 . -21) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -21) (undo-tree-id145 . -21) (undo-tree-id146 . -21) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -21) (undo-tree-id151 . -21) (undo-tree-id152 . -21) (undo-tree-id153 . -21) (undo-tree-id154 . -21) (undo-tree-id155 . -21) (undo-tree-id156 . -21) (undo-tree-id157 . -21) (undo-tree-id158 . -21) (undo-tree-id159 . -21) (undo-tree-id160 . -21) (undo-tree-id161 . -21) (undo-tree-id162 . -21) (undo-tree-id163 . -21) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) (undo-tree-id167 . -21) (undo-tree-id168 . -21) (undo-tree-id169 . -21) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (undo-tree-id175 . -21) (undo-tree-id176 . -21) (undo-tree-id177 . -21) (undo-tree-id178 . -21) (undo-tree-id179 . -21) (undo-tree-id180 . -21) (undo-tree-id181 . -21) (undo-tree-id182 . -21) (undo-tree-id183 . -21) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -21) (undo-tree-id188 . -21) (undo-tree-id189 . -21) (undo-tree-id190 . -21) (undo-tree-id191 . -21) (undo-tree-id192 . -21) (undo-tree-id193 . -21) (undo-tree-id194 . -21) (undo-tree-id195 . -21) (undo-tree-id196 . -21) (undo-tree-id197 . -21) (undo-tree-id198 . -21) (undo-tree-id199 . -21) (undo-tree-id200 . -21) (undo-tree-id201 . -21) (undo-tree-id202 . -21) (undo-tree-id203 . -21) (undo-tree-id204 . -21) (undo-tree-id205 . -21) (undo-tree-id206 . -21) (undo-tree-id207 . -21) (undo-tree-id208 . -21) (undo-tree-id209 . -21) (undo-tree-id210 . -21) (undo-tree-id211 . -21) (undo-tree-id212 . -21) (undo-tree-id213 . -21) (undo-tree-id214 . -21) (undo-tree-id215 . -21) (undo-tree-id216 . -21) (undo-tree-id217 . -21) (undo-tree-id218 . -21) (undo-tree-id219 . -21) (undo-tree-id220 . -21) (undo-tree-id221 . -21) (undo-tree-id222 . -21) (undo-tree-id223 . -21) (undo-tree-id224 . -16) (undo-tree-id225 . -19) (undo-tree-id226 . -21)) nil (26067 17836 621340 812000) 0 nil])
([nil nil ((#(" printf(\"lll%s\\n\",__FILE__);
  this->last_node=this->this_node=this->first_node=new lexer_read::lexer_node(0);
  this->ter_save=0;
" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 17 (face font-lock-string-face fontified t) 17 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 31 (fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 47 (fontified t) 47 51 (face font-lock-keyword-face fontified t) 51 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 80 (fontified t) 80 83 (face font-lock-keyword-face fontified t) 83 84 (fontified t) 84 94 (face font-lock-constant-face fontified t) 94 96 (fontified t) 96 106 (face font-lock-type-face fontified t) 106 107 (face (rainbow-delimiters-depth-2-face) fontified t) 107 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-2-face) fontified t) 109 113 (fontified t) 113 117 (face font-lock-keyword-face fontified t) 117 131 (fontified t)) . 149) (undo-tree-id296 . -111) (undo-tree-id297 . -111) (undo-tree-id298 . -130) (undo-tree-id299 . -130) (undo-tree-id300 . -130) (undo-tree-id301 . -29) (undo-tree-id302 . -29) (undo-tree-id303 . -131) (undo-tree-id304 . -131) (undo-tree-id305 . -130) (undo-tree-id306 . -131) (undo-tree-id307 . -131) (t 26067 17836 643295 621000)) nil (26067 17924 12360 701000) 0 nil])
([nil nil ((148 . 150) (148 . 149)) nil (26067 17924 12352 704000) 0 nil])
([nil nil ((150 . 155)) nil (26067 17924 12351 712000) 0 nil])
([nil nil ((155 . 156)) nil (26067 17924 12350 913000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -154) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(";" 0 1 (fontified t)) . -155) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 156) nil (26067 17924 12349 898000) 0 nil])
([nil nil ((154 . 156)) nil (26067 17924 12346 760000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -155) (undo-tree-id290 . -1) (undo-tree-id291 . -1) 156) nil (26067 17924 12345 434000) 0 nil])
([nil nil ((155 . 156)) nil (26067 17924 12332 160000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -88) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("x" 0 1 (face font-lock-constant-face fontified t)) . -89) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -90) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -91) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("_" 0 1 (face font-lock-constant-face fontified t)) . -92) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("m" 0 1 (face font-lock-constant-face fontified t)) . -93) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -94) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -95) (undo-tree-id329 . -1) (undo-tree-id330 . -1) 96 (t 26067 17924 29960 514000)) nil (26067 18019 177029 145000) 0 nil])
([nil nil ((87 . 88)) nil (26067 18019 177014 801000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id311 . -1) (undo-tree-id312 . -1) 88) nil (26067 18019 177014 28000) 0 nil])
([nil nil ((87 . 89)) nil (26067 18019 177011 491000) 0 nil])
([nil nil ((87 . 96) (#("t" 0 1 (fontified nil)) . 87) (87 . 88) (#("token_num" 0 9 (fontified nil)) . -87) (87 . 96) (#("to" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) 89) nil (26067 18161 143134 265000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -184) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -185) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -186) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -187) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) 188 (t 26067 18163 246622 325000)) nil (26067 18192 514517 843000) 0 nil] [nil nil ((#("l" 0 1 (face font-lock-function-name-face fontified t)) . -178) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -179) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -180) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -181) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -182) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -183) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -184) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -185) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -186) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -187) (undo-tree-id446 . -1) 188 (t 26067 18019 199958 587000)) ((178 . 188)) (26067 18160 704307 602000) 0 nil])
([nil nil ((184 . 187)) nil (26067 18192 514499 505000) 0 nil])
([nil nil ((178 . 180)) ((#("to" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t)) . 178) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -2) (undo-tree-id1132 . -2) (undo-tree-id1133 . -2) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (undo-tree-id1136 . -2) (undo-tree-id1137 . -2) (undo-tree-id1138 . -2) (undo-tree-id1139 . -2) (undo-tree-id1140 . -2) (undo-tree-id1141 . -2) (undo-tree-id1142 . -2) (undo-tree-id1143 . -2) (undo-tree-id1144 . -2) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) (undo-tree-id1164 . -2) (undo-tree-id1165 . -2) (undo-tree-id1166 . -2) (undo-tree-id1167 . -2) (undo-tree-id1168 . -2) (undo-tree-id1169 . -2) (undo-tree-id1170 . -2) (undo-tree-id1171 . -2) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2)) (26067 18160 344403 760000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-constant-face fontified t)) . -171) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -172) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -173) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -174) (undo-tree-id1208 . -1) 175 (t 26067 18192 526621 726000)) nil (26067 18207 74069 128000) 0 nil])
([nil nil ((178 . 187) (#("to" 0 2 (fontified nil)) . 178) (178 . 180) (#("token_num" 0 9 (fontified nil)) . -178) (178 . 187) (#("to" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t)) . -178) (undo-tree-id426 . -2) (undo-tree-id427 . -2) 180) ((178 . 180) (#("token_num" 0 9 (fontified nil)) . 178) (178 . 187) (#("to" 0 2 (fontified nil)) . 178) (178 . 180) (#("token_num" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t) 3 4 (face font-lock-function-name-face fontified t) 4 5 (face font-lock-function-name-face fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face font-lock-function-name-face fontified t)) . 178)) (26067 18159 686516 930000) 0 nil])
([nil nil ((171 . 174)) nil (26067 18207 74063 787000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . -165) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -166) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("x" 0 1 (face font-lock-constant-face fontified t)) . -167) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -168) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -169) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("_" 0 1 (face font-lock-constant-face fontified t)) . -170) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -171) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -172) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -173) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -174) (undo-tree-id425 . -1) 175) ((165 . 175)) (26067 18159 280719 783000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-constant-face fontified t)) . -127) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -128) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -129) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -130) (undo-tree-id1201 . -1) 131) nil (26067 18207 74062 302000) 0 nil])
([nil nil ((165 . 167)) ((#("to" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . 165) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -2) (undo-tree-id1054 . -2) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -2) (undo-tree-id1059 . -2) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) (undo-tree-id1062 . -2) (undo-tree-id1063 . -2) (undo-tree-id1064 . -2) (undo-tree-id1065 . -2) (undo-tree-id1066 . -2) (undo-tree-id1067 . -2) (undo-tree-id1068 . -2) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2)) (26067 18158 880330 570000) 0 nil])
([nil nil ((127 . 129)) nil (26067 18207 74056 757000) 0 nil])
([nil nil ((165 . 174) (#("to" 0 2 (fontified nil)) . 165) (165 . 167) (#("token_num" 0 9 (fontified nil)) . -165) (165 . 174) (#("to" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . -165) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id334 . -2) (undo-tree-id336 . -2) (undo-tree-id338 . -2) (undo-tree-id340 . -2) (undo-tree-id342 . -2) (undo-tree-id344 . -2) (undo-tree-id346 . -2) (undo-tree-id348 . -2) (undo-tree-id350 . -2) (undo-tree-id352 . -2) (undo-tree-id354 . -2) (undo-tree-id356 . -2) (undo-tree-id358 . -2) (undo-tree-id360 . -2) (undo-tree-id362 . -2) (undo-tree-id364 . -2) (undo-tree-id366 . -2) (undo-tree-id368 . -2) (undo-tree-id370 . -2) (undo-tree-id372 . -2) (undo-tree-id374 . -2) (undo-tree-id376 . -2) (undo-tree-id378 . -2) (undo-tree-id380 . -2) (undo-tree-id382 . -2) (undo-tree-id384 . -2) (undo-tree-id386 . -2) (undo-tree-id388 . -2) (undo-tree-id390 . -2) (undo-tree-id392 . -2) (undo-tree-id394 . -2) (undo-tree-id396 . -2) (undo-tree-id398 . -2) (undo-tree-id400 . -2) (undo-tree-id402 . -2) (undo-tree-id404 . -2) (undo-tree-id406 . -2) 167) ((165 . 167) (#("token_num" 0 9 (fontified nil)) . 165) (165 . 174) (#("to" 0 2 (fontified nil)) . 165) (165 . 167) (#("token_num" 0 9 (face font-lock-constant-face fontified t)) . 165) (undo-tree-id649 . -9) (undo-tree-id650 . -9) (undo-tree-id651 . -9) (undo-tree-id652 . -9) (undo-tree-id653 . -9) (undo-tree-id654 . -9) (undo-tree-id655 . -9) (undo-tree-id656 . -9) (undo-tree-id657 . -9) (undo-tree-id658 . -9) (undo-tree-id659 . -9) (undo-tree-id660 . -9) (undo-tree-id661 . -9) (undo-tree-id662 . -9) (undo-tree-id663 . -9) (undo-tree-id664 . -9) (undo-tree-id665 . -9) (undo-tree-id666 . -9) (undo-tree-id667 . -9) (undo-tree-id668 . -9) (undo-tree-id669 . -9) (undo-tree-id670 . -9) (undo-tree-id671 . -9) (undo-tree-id672 . -9) (undo-tree-id673 . -9) (undo-tree-id674 . -9) (undo-tree-id675 . -9) (undo-tree-id676 . -9) (undo-tree-id677 . -9) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -9) (undo-tree-id681 . -9) (undo-tree-id682 . -9) (undo-tree-id683 . -9) (undo-tree-id684 . -9) (undo-tree-id685 . -9) (undo-tree-id686 . -9) (undo-tree-id687 . -9) (undo-tree-id688 . -9) (undo-tree-id689 . -9) (undo-tree-id690 . -9) (undo-tree-id691 . -9) (undo-tree-id692 . -9) (undo-tree-id693 . -9) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -9) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -9) (undo-tree-id700 . -9) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . -9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9) (undo-tree-id707 . -9) (undo-tree-id708 . -9) (undo-tree-id709 . -9) (undo-tree-id710 . -9) (undo-tree-id711 . -9) (undo-tree-id712 . -9) (undo-tree-id713 . -9) (undo-tree-id714 . -9) (undo-tree-id715 . -9) (undo-tree-id716 . -9) (undo-tree-id717 . -9) (undo-tree-id718 . -9) (undo-tree-id719 . -9) (undo-tree-id720 . -9) (undo-tree-id721 . -9) (undo-tree-id722 . -9) (undo-tree-id723 . -9) (undo-tree-id724 . -9) (undo-tree-id725 . -9) (undo-tree-id726 . -9) (undo-tree-id727 . -9) (undo-tree-id728 . -9) (undo-tree-id729 . -9) (undo-tree-id730 . -9) (undo-tree-id731 . -9) (undo-tree-id732 . -9) (undo-tree-id733 . -9) (undo-tree-id734 . -9) (undo-tree-id735 . -9) (undo-tree-id736 . -9) (undo-tree-id737 . -9) (undo-tree-id738 . -9) (undo-tree-id739 . -9) (undo-tree-id740 . -9) (undo-tree-id741 . -9) (undo-tree-id742 . -9) (undo-tree-id743 . -9) (undo-tree-id744 . -9) (undo-tree-id745 . -9) (undo-tree-id746 . -9) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) (undo-tree-id755 . -9) (undo-tree-id756 . -9) (undo-tree-id757 . -9) (undo-tree-id758 . -9) (undo-tree-id759 . -9) (undo-tree-id760 . -9) (undo-tree-id761 . -9) (undo-tree-id762 . -9) (undo-tree-id763 . -9) (undo-tree-id764 . -9) (undo-tree-id765 . -9) (undo-tree-id766 . -9) (undo-tree-id767 . -9) (undo-tree-id768 . -9) (undo-tree-id769 . -9) (undo-tree-id770 . -9) (undo-tree-id771 . -9) (undo-tree-id772 . -9) (undo-tree-id773 . -9) (undo-tree-id774 . -9) (undo-tree-id775 . -9) (undo-tree-id776 . -9) (undo-tree-id777 . -9) (undo-tree-id778 . -9) (undo-tree-id779 . -9) (undo-tree-id780 . -9) (undo-tree-id781 . -9) (undo-tree-id782 . -9) (undo-tree-id783 . -9) (undo-tree-id784 . -9) (undo-tree-id785 . -9) (undo-tree-id786 . -9) (undo-tree-id787 . -9) (undo-tree-id788 . -9) (undo-tree-id789 . -9) (undo-tree-id790 . -9) (undo-tree-id791 . -9) (undo-tree-id792 . -9) (undo-tree-id793 . -9) (undo-tree-id794 . -9) (undo-tree-id795 . -9) (undo-tree-id796 . -9) (undo-tree-id797 . -9) (undo-tree-id798 . -9) (undo-tree-id799 . -9) (undo-tree-id800 . -9) (undo-tree-id801 . -9) (undo-tree-id802 . -9) (undo-tree-id803 . -9) (undo-tree-id804 . -9) (undo-tree-id805 . -9) (undo-tree-id806 . -9) (undo-tree-id807 . -9) (undo-tree-id808 . -9) (undo-tree-id809 . -9) (undo-tree-id810 . -9) (undo-tree-id811 . -9) (undo-tree-id812 . -9) (undo-tree-id813 . -9) (undo-tree-id814 . -9) (undo-tree-id815 . -9) (undo-tree-id816 . -9) (undo-tree-id817 . -9) (undo-tree-id818 . -9) (undo-tree-id819 . -9) (undo-tree-id820 . -9) (undo-tree-id821 . -9) (undo-tree-id822 . -9) (undo-tree-id823 . -9) (undo-tree-id824 . -9) (undo-tree-id825 . -9) (undo-tree-id826 . -9) (undo-tree-id827 . -9) (undo-tree-id828 . -9) (undo-tree-id829 . -9) (undo-tree-id830 . -9) (undo-tree-id831 . -9) (undo-tree-id832 . -9) (undo-tree-id833 . -9) (undo-tree-id834 . -9) (undo-tree-id835 . -9) (undo-tree-id836 . -9) (undo-tree-id837 . -9) (undo-tree-id838 . -9) (undo-tree-id839 . -9) (undo-tree-id840 . -9) (undo-tree-id841 . -9) (undo-tree-id842 . -9) (undo-tree-id843 . -9) (undo-tree-id844 . -9) (undo-tree-id845 . -9) (undo-tree-id846 . -9) (undo-tree-id847 . -9) (undo-tree-id848 . -9) (undo-tree-id849 . -9) (undo-tree-id850 . -9) (undo-tree-id851 . -9) (undo-tree-id852 . -9) (undo-tree-id853 . -9) (undo-tree-id854 . -9) (undo-tree-id855 . -9) (undo-tree-id856 . -9) (undo-tree-id857 . -9) (undo-tree-id858 . -9) (undo-tree-id859 . -9) (undo-tree-id860 . -9) (undo-tree-id861 . -9) (undo-tree-id862 . -9) (undo-tree-id863 . -9) (undo-tree-id864 . -9) (undo-tree-id865 . -9) (undo-tree-id866 . -9) (undo-tree-id867 . -9) (undo-tree-id868 . -9) (undo-tree-id869 . -9) (undo-tree-id870 . -9) (undo-tree-id871 . -9) (undo-tree-id872 . -9) (undo-tree-id873 . -9) (undo-tree-id874 . -9) (undo-tree-id875 . -9) (undo-tree-id876 . -9) (undo-tree-id877 . -9) (undo-tree-id878 . -9) (undo-tree-id879 . -9) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) (undo-tree-id888 . -9) (undo-tree-id889 . -9) (undo-tree-id890 . -9) (undo-tree-id891 . -9) (undo-tree-id892 . -9) (undo-tree-id893 . -9) (undo-tree-id894 . -9) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (undo-tree-id897 . -9) (undo-tree-id898 . -9) (undo-tree-id899 . -9) (undo-tree-id900 . -9) (undo-tree-id901 . -9) (undo-tree-id902 . -9) (undo-tree-id903 . -9) (undo-tree-id904 . -9) (undo-tree-id905 . -9) (undo-tree-id906 . -9) (undo-tree-id907 . -9) (undo-tree-id908 . -9) (undo-tree-id909 . -9) (undo-tree-id910 . -9) (undo-tree-id911 . -9) (undo-tree-id912 . -9) (undo-tree-id913 . -9) (undo-tree-id914 . -9) (undo-tree-id915 . -9) (undo-tree-id916 . -9) (undo-tree-id917 . -9) (undo-tree-id918 . -9) (undo-tree-id919 . -9) (undo-tree-id920 . -9) (undo-tree-id921 . -9) (undo-tree-id922 . -9) (undo-tree-id923 . -9) (undo-tree-id924 . -9) (undo-tree-id925 . -9) (undo-tree-id926 . -9) (undo-tree-id927 . -9) (undo-tree-id928 . -9) (undo-tree-id929 . -9) (undo-tree-id930 . -9) (undo-tree-id931 . -9) (undo-tree-id932 . -9) (undo-tree-id933 . -9) (undo-tree-id934 . -9) (undo-tree-id935 . -9) (undo-tree-id936 . -9) (undo-tree-id937 . -9) (undo-tree-id938 . -9) (undo-tree-id939 . -9) (undo-tree-id940 . -9) (undo-tree-id941 . -9) (undo-tree-id942 . -9) (undo-tree-id943 . -9) (undo-tree-id944 . -9) (undo-tree-id945 . -9) (undo-tree-id946 . -9) (undo-tree-id947 . -9) (undo-tree-id948 . -9) (undo-tree-id949 . -9) (undo-tree-id950 . -9) (undo-tree-id951 . -9) (undo-tree-id952 . -9) (undo-tree-id953 . -9) (undo-tree-id954 . -9) (undo-tree-id955 . -9) (undo-tree-id956 . -9) (undo-tree-id957 . -9) (undo-tree-id958 . -9) (undo-tree-id959 . -9) (undo-tree-id960 . -9) (undo-tree-id961 . -9) (undo-tree-id962 . -9) (undo-tree-id963 . -9) (undo-tree-id964 . -9) (undo-tree-id965 . -9) (undo-tree-id966 . -9) (undo-tree-id967 . -9) (undo-tree-id968 . -9) (undo-tree-id969 . -9) (undo-tree-id970 . -9) (undo-tree-id971 . -9) (undo-tree-id972 . -9) (undo-tree-id973 . -9) (undo-tree-id974 . -9) (undo-tree-id975 . -9) (undo-tree-id976 . -9) (undo-tree-id977 . -9) (undo-tree-id978 . -9) (undo-tree-id979 . -9) (undo-tree-id980 . -9) (undo-tree-id981 . -9) (undo-tree-id982 . -9) (undo-tree-id983 . -9) (undo-tree-id984 . -9) (undo-tree-id985 . -9) (undo-tree-id986 . -9) (undo-tree-id987 . -9) (undo-tree-id988 . -9) (undo-tree-id989 . -9) (undo-tree-id990 . -9) (undo-tree-id991 . -9) (undo-tree-id992 . -9) (undo-tree-id993 . -9) (undo-tree-id994 . -9) (undo-tree-id995 . -9) (undo-tree-id996 . -9) (undo-tree-id997 . -9) (undo-tree-id998 . -9) (undo-tree-id999 . -9) (undo-tree-id1000 . -9) (undo-tree-id1001 . -9) (undo-tree-id1002 . -9) (undo-tree-id1003 . -9) (undo-tree-id1004 . -9) (undo-tree-id1005 . -9) (undo-tree-id1006 . -9) (undo-tree-id1007 . -9) (undo-tree-id1008 . -9) (undo-tree-id1009 . -9) (undo-tree-id1010 . -9) (undo-tree-id1011 . -9) (undo-tree-id1012 . -9) (undo-tree-id1013 . -9) (undo-tree-id1014 . -9) (undo-tree-id1015 . -9) (undo-tree-id1016 . -9) (undo-tree-id1017 . -9) (undo-tree-id1018 . -9) (undo-tree-id1019 . -9) (undo-tree-id1020 . -9) (undo-tree-id1021 . -9) (undo-tree-id1022 . -9) (undo-tree-id1023 . -9) (t 26067 18135 13289 566000)) (26067 18133 701621 639000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-constant-face fontified t)) . -128) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) 129) nil (26067 18207 74055 903000) 0 nil])
([nil nil ((174 . 177) (t 26067 18059 686624 430000)) ((#("lll" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t)) . 174) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3)) (26067 18132 200590 185000) 0 nil])
([nil nil ((128 . 130)) nil (26067 18207 74053 658000) 0 nil])
([nil nil ((165 . 188) (#("token_numll" 0 11 (fontified nil)) . 165) (165 . 176) (#("token_num::token_numlll" 0 23 (fontified nil)) . -165) (165 . 188) (#("token_numlll" 0 9 (face font-lock-constant-face fontified t) 9 10 (face font-lock-constant-face fontified t) 10 11 (face font-lock-constant-face fontified t) 11 12 (face font-lock-constant-face fontified t)) . -165) (undo-tree-id471 . -12) (undo-tree-id472 . -12) 177) ((165 . 177) (#("token_num::token_numlll" 0 23 (fontified nil)) . 165) (165 . 188) (#("token_numll" 0 11 (fontified nil)) . 165) (165 . 176) (#("token_num::token_numlll" 0 9 (face font-lock-constant-face fontified t) 9 11 (fontified t) 11 23 (face font-lock-constant-face fontified t)) . 165) (undo-tree-id498 . 14) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -9) (undo-tree-id507 . -9) (undo-tree-id508 . -9) (undo-tree-id509 . -9) (undo-tree-id510 . -9) (undo-tree-id511 . -9) (undo-tree-id512 . -9) (undo-tree-id513 . -9) (undo-tree-id514 . -9) (undo-tree-id515 . -9) (undo-tree-id516 . -9) (undo-tree-id517 . -9) (undo-tree-id518 . -9) (undo-tree-id519 . -9) (undo-tree-id520 . -9) (undo-tree-id521 . -9) (undo-tree-id522 . -9) (undo-tree-id523 . -9) (undo-tree-id524 . -9) (undo-tree-id525 . -9) (undo-tree-id526 . -9) (undo-tree-id527 . -9) (undo-tree-id528 . -9) (undo-tree-id529 . -9) (undo-tree-id530 . -9) (undo-tree-id531 . -9) (undo-tree-id532 . -9) (undo-tree-id533 . -9) (undo-tree-id534 . -9) (undo-tree-id535 . -9) (undo-tree-id536 . -9) (undo-tree-id537 . -9) (undo-tree-id538 . -9) (undo-tree-id539 . -9) (undo-tree-id540 . -9) (undo-tree-id541 . -9) (undo-tree-id542 . -9) (undo-tree-id543 . -9) (undo-tree-id544 . -9) (undo-tree-id545 . -9) (undo-tree-id546 . -9) (undo-tree-id547 . -9) (undo-tree-id548 . -9) (undo-tree-id549 . -9) (undo-tree-id550 . -9) (undo-tree-id551 . -9) (undo-tree-id552 . -9) (undo-tree-id553 . -9) (undo-tree-id554 . -9) (undo-tree-id555 . -9) (undo-tree-id556 . -9) (undo-tree-id557 . -9) (undo-tree-id558 . -9) (undo-tree-id559 . -9) (undo-tree-id560 . -9) (undo-tree-id561 . -9) (undo-tree-id562 . -9) (undo-tree-id563 . -9) (undo-tree-id564 . -9) (undo-tree-id565 . -9) (undo-tree-id566 . -9) (undo-tree-id567 . -9) (undo-tree-id568 . -9) (undo-tree-id569 . -9) (undo-tree-id570 . -9) (undo-tree-id571 . -9) (undo-tree-id572 . -9) (undo-tree-id573 . -9) (undo-tree-id574 . -9) (undo-tree-id575 . -9) (undo-tree-id576 . -9) (undo-tree-id577 . -9) (undo-tree-id578 . -9) (undo-tree-id579 . -9) (undo-tree-id580 . -9) (undo-tree-id581 . -9) (undo-tree-id582 . -9) (undo-tree-id583 . -9) (undo-tree-id584 . -9) (undo-tree-id585 . -9) (undo-tree-id586 . -9) (undo-tree-id587 . -9) (undo-tree-id588 . -9) (undo-tree-id589 . -9) (undo-tree-id590 . -9) (undo-tree-id591 . -9) (undo-tree-id592 . -9) (undo-tree-id593 . -9) (undo-tree-id594 . -9) (undo-tree-id595 . -9) (undo-tree-id596 . -9) (undo-tree-id597 . -9) (undo-tree-id598 . -9) (undo-tree-id599 . -9) (undo-tree-id600 . -9) (undo-tree-id601 . -9) (undo-tree-id602 . -9) (undo-tree-id603 . -9) (undo-tree-id604 . -9) (undo-tree-id605 . -9) (undo-tree-id606 . -9) (undo-tree-id607 . -9) (undo-tree-id608 . -9) (undo-tree-id609 . -9) (undo-tree-id610 . -9) (undo-tree-id611 . -9) (undo-tree-id612 . -9) (undo-tree-id613 . -9) (undo-tree-id614 . -9) (undo-tree-id615 . -9) (undo-tree-id616 . -9) (undo-tree-id617 . -9) (undo-tree-id618 . -9) (undo-tree-id619 . -9) (undo-tree-id620 . -9)) (26067 18131 236789 566000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -140) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -141) (undo-tree-id1192 . -1) 142) nil (26067 18207 74051 950000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -188) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#(":" 0 1 (fontified t)) . -189) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("~" 0 1 (fontified t)) . -190) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -191) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -192) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -193) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -194) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -195) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -196) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -197) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -198) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -199) (undo-tree-id470 . -1) 200) ((188 . 200)) (26067 18130 768819 926000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -138) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) 139) nil (26067 18207 74046 402000) 0 nil])
([nil nil ((174 . 177) (t 26067 18101 399956 913000)) ((#("lll" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t)) . 174) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (t 26067 18120 779956 516000)) (26067 18120 765618 783000) 0 nil])
([nil nil ((138 . 141)) nil (26067 18207 74035 605000) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -133) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -134) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -135) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -136) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) 137 (t 26067 18207 83288 97000)) nil (26067 18285 372687 54000) 0 nil])
([nil nil ((133 . 135)) nil (26067 18285 372676 412000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-constant-face fontified t)) . -122) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (#("x" 0 1 (face font-lock-constant-face fontified t)) . -123) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -124) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -125) (undo-tree-id1231 . -1) 126) nil (26067 18285 372674 654000) 0 nil])
([nil nil ((122 . 124)) nil (26067 18285 372666 417000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-constant-face fontified t)) . -160) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("x" 0 1 (face font-lock-constant-face fontified t)) . -161) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -162) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -163) (undo-tree-id1224 . -1) 164) nil (26067 18285 372664 423000) 0 nil])
([nil nil ((160 . 162)) nil (26067 18285 372656 672000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -170) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -171) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -172) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -173) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) 174) nil (26067 18285 372653 929000) 0 nil])
([nil nil ((170 . 172)) nil (26067 18285 372633 128000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-function-name-face fontified t)) . -130) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) 131 (t 26067 18285 386619 826000)) nil (26067 18304 266028 677000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . -121) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 122) nil (26067 18304 266012 93000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-constant-face fontified t)) . -157) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) 158) nil (26067 18304 265995 382000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-function-name-face fontified t)) . -166) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) 167) nil (26067 18304 265975 491000) 0 nil])
([nil nil ((168 . 170) (t 26067 18304 279952 775000)) nil (26067 18354 470359 122000) 0 nil])
([nil nil ((159 . 161)) nil (26067 18354 470355 449000) 0 nil])
([nil nil ((123 . 125) (t 26067 18354 479951 752000)) nil (26067 18366 582388 77000) 0 nil])
([nil nil ((133 . 135)) nil (26067 18366 582379 75000) 0 nil])
([nil nil ((135 . 136) (t 26067 18366 593284 842000)) nil (26067 18401 831400 992000) 0 nil])
([nil nil ((125 . 126)) nil (26067 18401 831400 209000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-constant-face fontified t)) . -125) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) 126) nil (26067 18401 831398 849000) 0 nil])
([nil nil ((125 . 126)) nil (26067 18401 831378 490000) 0 nil])
([nil nil ((167 . 168)) nil (26067 18401 831377 862000) 0 nil])
([nil nil ((179 . 180)) nil (26067 18401 831373 967000) 0 nil])
([nil nil ((96 . 97) (t 26067 18401 839950 791000)) nil (26067 18444 754313 436000) 0 nil])
([nil nil ((97 . 99)) nil (26067 18493 980432 868000) 0 nil])
([nil nil ((#("// lexer_read::lexer_node::lexer_node(lexer_node *ptr)
// {
//  // printf(\"ttt%d\\n\",this->next_node[2]);
//  // std::cout<<this->next_node[0]<<std::endl;
//  // std::for_each(this->next_node, this->next_node+100, [](auto &node){std::cout<<node<<std::endl;});
//   for_each(this->next_node, this->next_node+256, [](auto &node){node=0;});
//   this->terminal=0;
//   this->count=0;
//   this->prev_node=ptr;
//   //this->str=new string();
//   // std::for_each(this->next_node, this->next_node+100, [](auto &node){std::cout<<node<<std::endl;});
//   // printf(\"ttt%d\\n\",this->next_node[2]);
  
  
// }    

// lexer_read::lexer_node::~lexer_node()
// {
//   // printf(\"ttt\\n\");
//   for_each(this->next_node, this->next_node+100, [](auto &node){node?delete node:[](){}();});

  
// }

// token_class::token lexer_read::operator()(char c)
// {
//   // if(!(c-' ')) return !(this->this_node-this->first_node)||this->this_node-this->first_node&&this->this_node->get_terminal()?(this->this_node=this->first_node,this->last_node->get_token()):(this->this_node=this->first_node,this->last_node->set_node(++this->ter_save));
//   if(!(c-' '))
//     if(!(this->this_node-this->first_node)) return this->null_token;
//     else if(this->this_node->get_terminal()) return this->this_node=this->first_node,this->last_node->get_token();
//     else return this->this_node=this->first_node,this->last_node->set_node(++this->ter_save);

//   // debug;
    
//   this->last_node=this->this_node=(this->this_node->get_next_node(c)?this->this_node->get_next_node(c):this->this_node->add_node(c));

//   // debug;

//   // return (this->this_node->get_terminal()?this->this_node->get_token():null_token);
//   return null_token;
  
  
// }

// lexer_read::lexer_node *lexer_read::lexer_node::add_node(char c)
// {
//   this->next_node[c]=new lexer_read::lexer_node(this);
//   //this->next_node[c].prev_node=this->this_node;
//   this->count++;
//   // debug;
//   if(this->prev_node)this->next_node[c]->str=this->str+c;
//   else this->next_node[c]->str=c;
//   // cout<<(int)c<<endl;
//   // cout<<this->next_node[c]->str<<endl;
//   // for_each(&(this->next_node[c]->next_node[0]), &(this->next_node[c]->next_node[256]), [](auto* &i){printf(\"%lld \\t\",(long int)i);});
//   // for(int i=0;i<256;i++) printf(\"%ld\\t\",this->next_node[c]->next_node[i]);
//   // debug;
//   // printf(\"%ld\\t%ld\\n\",this->next_node[c],this->next_node[c]->next_node);
//   // debug;
//     // int* i[100]; // 指针数组

//     // // 使用 std::for_each 将所有元素指向空指针
//     // std::for_each(std::begin(i), std::end(i), [](int* &ptr) { ptr = nullptr; });

//     // // 输出指针数组中的值，验证是否指向空指针
//     // for (int j = 0; j < 100; ++j) {
//     //     std::cout << \"i[\" << j << \"] = \" << i[j] << std::endl;
//     // }
//   // debug;

//   return this->next_node[c];
  
  
// }

// static int mdzztest;
// token_class::token lexer_read::lexer_node::set_node(int ter){this->set_terminal(ter)/*,this->token=(token_class::token*)++mdzztest*/;return this->token;}

// lexer_read::lexer_node *lexer_read::lexer_node::get_next_node(char c)
// {
//   // debug;
//   //printf(\"%ld\\t%ld\\n\",this,this->next_node[c]);
//   // debug;
//   return this->next_node[c];
  
  
// }

// void lexer_read::lexer_node::set_terminal(int ter)
// {
//   this->terminal=ter;
//   //this->token=0;
//   // debug;
//   // cout<<this->str;
//   // debug;
//   this->token.token_exp=ter;
//   this->token.str=this->str;

  
// }

// int lexer_read::lexer_node::get_terminal()
// {
//   // debug;
//   // printf(\"%d\\n\",this->terminal);
//   // debug;
//   return this->terminal;
  
  
// }

// token_class::token lexer_read::lexer_node::get_token()
// {
//   // debug;
//   return this->token;
  
  
// }

// class lexer_mod::lexer_read
// {
//   public lexer_read()
//   {
//     printf(\"lll%s\\n\",__FILE__);
    
//   }
  
// };
// void test()
// {
//   printf(\"lll\\n\");
  
// }
" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 13 (face font-lock-comment-face fontified t c-in-sws t) 13 15 (face font-lock-comment-face fontified t c-in-sws t) 15 25 (face font-lock-comment-face fontified t c-in-sws t) 25 27 (face font-lock-comment-face fontified t c-in-sws t) 27 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 48 (face font-lock-comment-face fontified t c-in-sws t) 48 50 (face font-lock-comment-face fontified t c-in-sws t) 50 53 (face font-lock-comment-face fontified t c-in-sws t) 53 54 (face font-lock-comment-face fontified t c-in-sws t) 54 55 (face font-lock-comment-face fontified t c-in-sws t) 55 58 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face font-lock-comment-face fontified t c-in-sws t) 60 63 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 63 64 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 64 65 (face font-lock-comment-face fontified t c-in-sws t) 65 67 (face font-lock-comment-face fontified t c-in-sws t) 67 105 (face font-lock-comment-face fontified t c-in-sws t) 105 106 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 106 108 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 108 109 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 109 112 (face font-lock-comment-face fontified t c-in-sws t) 112 154 (face font-lock-comment-face fontified t c-in-sws t) 154 157 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 157 158 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 158 161 (face font-lock-comment-face fontified t c-in-sws t) 161 259 (face font-lock-comment-face fontified t c-in-sws t) 259 260 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 260 262 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 262 264 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 264 265 (face font-lock-comment-face fontified t c-in-sws t) 265 272 (face font-lock-comment-face fontified t c-in-sws t) 272 273 (face font-lock-comment-face fontified t c-in-sws t) 273 277 (face font-lock-comment-face fontified t c-in-sws t) 277 290 (face font-lock-comment-face fontified t c-in-sws t) 290 294 (face font-lock-comment-face fontified t c-in-sws t) 294 311 (face font-lock-comment-face fontified t c-in-sws t) 311 312 (face font-lock-comment-face fontified t c-in-sws t) 312 313 (face font-lock-comment-face fontified t c-in-sws t) 313 314 (face font-lock-comment-face fontified t c-in-sws t) 314 318 (face font-lock-comment-face fontified t c-in-sws t) 318 320 (face font-lock-comment-face fontified t c-in-sws t) 320 324 (face font-lock-comment-face fontified t c-in-sws t) 324 325 (face font-lock-comment-face fontified t c-in-sws t) 325 326 (face font-lock-comment-face fontified t c-in-sws t) 326 333 (face font-lock-comment-face fontified t c-in-sws t) 333 334 (face font-lock-comment-face fontified t c-in-sws t) 334 335 (face font-lock-comment-face fontified t c-in-sws t) 335 337 (face font-lock-comment-face fontified t c-in-sws t) 337 340 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 340 342 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 342 346 (face font-lock-comment-face fontified t c-in-sws t) 346 360 (face font-lock-comment-face fontified t c-in-sws t) 360 363 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 363 365 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 365 369 (face font-lock-comment-face fontified t c-in-sws t) 369 380 (face font-lock-comment-face fontified t c-in-sws t) 380 383 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 383 385 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 385 389 (face font-lock-comment-face fontified t c-in-sws t) 389 406 (face font-lock-comment-face fontified t c-in-sws t) 406 409 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 409 411 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 411 413 (face font-lock-comment-face fontified t c-in-sws t) 413 437 (face font-lock-comment-face fontified t c-in-sws t) 437 440 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 440 442 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 442 445 (face font-lock-comment-face fontified t c-in-sws t) 445 543 (face font-lock-comment-face fontified t c-in-sws t) 543 546 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 546 548 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 548 551 (face font-lock-comment-face fontified t c-in-sws t) 551 589 (face font-lock-comment-face fontified t c-in-sws t) 589 590 (fontified t c-in-sws t) 590 595 (fontified t c-in-sws t) 595 596 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 596 598 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 598 599 (face font-lock-comment-face fontified t c-in-sws t) 599 604 (face font-lock-comment-face fontified t c-in-sws t) 604 605 (fontified t c-in-sws t) 605 608 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 608 618 (face font-lock-comment-face fontified t c-in-sws t) 618 620 (face font-lock-comment-face fontified t c-in-sws t) 620 630 (face font-lock-comment-face fontified t c-in-sws t) 630 633 (face font-lock-comment-face fontified t c-in-sws t) 633 643 (face font-lock-comment-face fontified t c-in-sws t) 643 644 (face font-lock-comment-face fontified t c-in-sws t) 644 645 (face font-lock-comment-face fontified t c-in-sws t) 645 646 (face font-lock-comment-face fontified t c-in-sws t) 646 649 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 649 650 (face font-lock-comment-face fontified t c-in-sws t) 650 651 (face font-lock-comment-face fontified t c-in-sws t) 651 654 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 654 656 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 656 657 (face font-lock-comment-face fontified t c-in-sws t) 657 659 (face font-lock-comment-face fontified t c-in-sws t) 659 676 (face font-lock-comment-face fontified t c-in-sws t) 676 677 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 677 679 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 679 681 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 681 682 (face font-lock-comment-face fontified t c-in-sws t) 682 689 (face font-lock-comment-face fontified t c-in-sws t) 689 690 (face font-lock-comment-face fontified t c-in-sws t) 690 694 (face font-lock-comment-face fontified t c-in-sws t) 694 707 (face font-lock-comment-face fontified t c-in-sws t) 707 711 (face font-lock-comment-face fontified t c-in-sws t) 711 728 (face font-lock-comment-face fontified t c-in-sws t) 728 729 (face font-lock-comment-face fontified t c-in-sws t) 729 730 (face font-lock-comment-face fontified t c-in-sws t) 730 731 (face font-lock-comment-face fontified t c-in-sws t) 731 735 (face font-lock-comment-face fontified t c-in-sws t) 735 737 (face font-lock-comment-face fontified t c-in-sws t) 737 741 (face font-lock-comment-face fontified t c-in-sws t) 741 742 (face font-lock-comment-face fontified t c-in-sws t) 742 743 (face font-lock-comment-face fontified t c-in-sws t) 743 748 (face font-lock-comment-face fontified t c-in-sws t) 748 754 (face font-lock-comment-face fontified t c-in-sws t) 754 760 (face font-lock-comment-face fontified t c-in-sws t) 760 761 (face font-lock-comment-face fontified t c-in-sws t) 761 762 (face font-lock-comment-face fontified t c-in-sws t) 762 763 (face font-lock-comment-face fontified t c-in-sws t) 763 764 (face font-lock-comment-face fontified t c-in-sws t) 764 765 (face font-lock-comment-face fontified t c-in-sws t) 765 766 (face font-lock-comment-face fontified t c-in-sws t) 766 767 (face font-lock-comment-face fontified t c-in-sws t) 767 768 (face font-lock-comment-face fontified t c-in-sws t) 768 769 (face font-lock-comment-face fontified t c-in-sws t) 769 770 (face font-lock-comment-face fontified t c-in-sws t) 770 771 (face font-lock-comment-face fontified t c-in-sws t) 771 773 (face font-lock-comment-face fontified t c-in-sws t) 773 777 (fontified t c-in-sws t) 777 780 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 780 781 (face font-lock-comment-face fontified t c-in-sws t) 781 782 (face font-lock-comment-face fontified t c-in-sws t) 782 783 (fontified t c-in-sws t) 783 786 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 786 797 (face font-lock-comment-face fontified t c-in-sws t) 797 799 (face font-lock-comment-face fontified t c-in-sws t) 799 803 (face font-lock-comment-face fontified t c-in-sws t) 803 804 (face font-lock-comment-face fontified t c-in-sws t) 804 805 (face font-lock-comment-face fontified t c-in-sws t) 805 815 (face font-lock-comment-face fontified t c-in-sws t) 815 817 (face font-lock-comment-face fontified t c-in-sws t) 817 825 (face font-lock-comment-face fontified t c-in-sws t) 825 826 (face font-lock-comment-face fontified t c-in-sws t) 826 827 (face font-lock-comment-face fontified t c-in-sws t) 827 828 (face font-lock-comment-face fontified t c-in-sws t) 828 832 (face font-lock-comment-face fontified t c-in-sws t) 832 833 (face font-lock-comment-face fontified t c-in-sws t) 833 834 (face font-lock-comment-face fontified t c-in-sws t) 834 835 (face font-lock-comment-face fontified t c-in-sws t) 835 836 (face font-lock-comment-face fontified t c-in-sws t) 836 839 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 839 840 (face font-lock-comment-face fontified t c-in-sws t) 840 841 (face font-lock-comment-face fontified t c-in-sws t) 841 842 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 842 844 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 844 846 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 846 847 (face font-lock-comment-face fontified t c-in-sws t) 847 849 (face font-lock-comment-face fontified t c-in-sws t) 849 1113 (face font-lock-comment-face fontified t c-in-sws t) 1113 1115 (face font-lock-comment-face fontified t c-in-sws t) 1115 1116 (face font-lock-comment-face fontified t c-in-sws t) 1116 1119 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1119 1121 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1121 1122 (face font-lock-comment-face fontified t c-in-sws t) 1122 1123 (face font-lock-comment-face fontified t c-in-sws t) 1123 1124 (face font-lock-comment-face fontified t c-in-sws t) 1124 1125 (face font-lock-comment-face fontified t c-in-sws t) 1125 1126 (face font-lock-comment-face fontified t c-in-sws t) 1126 1128 (face font-lock-comment-face fontified t c-in-sws t) 1128 1131 (face font-lock-comment-face fontified t c-in-sws t) 1131 1132 (face font-lock-comment-face fontified t c-in-sws t) 1132 1133 (face font-lock-comment-face fontified t c-in-sws t) 1133 1134 (face font-lock-comment-face fontified t c-in-sws t) 1134 1137 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1137 1141 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1141 1143 (face font-lock-comment-face fontified t c-in-sws t) 1143 1144 (face font-lock-comment-face fontified t c-in-sws t) 1144 1145 (face font-lock-comment-face fontified t c-in-sws t) 1145 1146 (face font-lock-comment-face fontified t c-in-sws t) 1146 1150 (face font-lock-comment-face fontified t c-in-sws t) 1150 1162 (face font-lock-comment-face fontified t c-in-sws t) 1162 1166 (face font-lock-comment-face fontified t c-in-sws t) 1166 1178 (face font-lock-comment-face fontified t c-in-sws t) 1178 1179 (face font-lock-comment-face fontified t c-in-sws t) 1179 1180 (face font-lock-comment-face fontified t c-in-sws t) 1180 1181 (face font-lock-comment-face fontified t c-in-sws t) 1181 1187 (face font-lock-comment-face fontified t c-in-sws t) 1187 1188 (face font-lock-comment-face fontified t c-in-sws t) 1188 1192 (face font-lock-comment-face fontified t c-in-sws t) 1192 1206 (face font-lock-comment-face fontified t c-in-sws t) 1206 1209 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1209 1213 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1213 1217 (face font-lock-comment-face fontified t c-in-sws t) 1217 1218 (face font-lock-comment-face fontified t c-in-sws t) 1218 1220 (face font-lock-comment-face fontified t c-in-sws t) 1220 1221 (face font-lock-comment-face fontified t c-in-sws t) 1221 1225 (face font-lock-comment-face fontified t c-in-sws t) 1225 1229 (face font-lock-comment-face fontified t c-in-sws t) 1229 1250 (face font-lock-comment-face fontified t c-in-sws t) 1250 1251 (face font-lock-comment-face fontified t c-in-sws t) 1251 1252 (face font-lock-comment-face fontified t c-in-sws t) 1252 1253 (face font-lock-comment-face fontified t c-in-sws t) 1253 1254 (face font-lock-comment-face fontified t c-in-sws t) 1254 1256 (face font-lock-comment-face fontified t c-in-sws t) 1256 1260 (face font-lock-comment-face fontified t c-in-sws t) 1260 1261 (face font-lock-comment-face fontified t c-in-sws t) 1261 1265 (face font-lock-comment-face fontified t c-in-sws t) 1265 1277 (face font-lock-comment-face fontified t c-in-sws t) 1277 1281 (face font-lock-comment-face fontified t c-in-sws t) 1281 1294 (face font-lock-comment-face fontified t c-in-sws t) 1294 1298 (face font-lock-comment-face fontified t c-in-sws t) 1298 1320 (face font-lock-comment-face fontified t c-in-sws t) 1320 1321 (face font-lock-comment-face fontified t c-in-sws t) 1321 1322 (face font-lock-comment-face fontified t c-in-sws t) 1322 1324 (face font-lock-comment-face fontified t c-in-sws t) 1324 1325 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1325 1327 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1327 1331 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1331 1335 (face font-lock-comment-face fontified t c-in-sws t) 1335 1336 (face font-lock-comment-face fontified t c-in-sws t) 1336 1342 (face font-lock-comment-face fontified t c-in-sws t) 1342 1343 (face font-lock-comment-face fontified t c-in-sws t) 1343 1347 (face font-lock-comment-face fontified t c-in-sws t) 1347 1359 (face font-lock-comment-face fontified t c-in-sws t) 1359 1363 (face font-lock-comment-face fontified t c-in-sws t) 1363 1376 (face font-lock-comment-face fontified t c-in-sws t) 1376 1378 (face font-lock-comment-face fontified t c-in-sws t) 1378 1380 (face font-lock-comment-face fontified t c-in-sws t) 1380 1382 (face font-lock-comment-face fontified t c-in-sws t) 1382 1401 (fontified t face font-lock-comment-face c-in-sws t) 1401 1402 (fontified t face font-lock-comment-face c-in-sws t) 1402 1404 (fontified t face font-lock-comment-face c-in-sws t) 1404 1408 (fontified t face font-lock-comment-face c-in-sws t) 1408 1418 (fontified t face font-lock-comment-face c-in-sws t) 1418 1419 (fontified t face font-lock-comment-face c-in-sws t) 1419 1420 (fontified t face font-lock-comment-face c-in-sws t) 1420 1421 (c-in-sws t fontified t face font-lock-comment-face) 1421 1422 (c-in-sws t fontified t) 1422 1423 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1423 1425 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1425 1427 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1427 1428 (face font-lock-comment-face fontified t c-in-sws t) 1428 1429 (face font-lock-comment-face fontified t c-in-sws t) 1429 1430 (face font-lock-comment-face fontified t c-in-sws t) 1430 1434 (face font-lock-comment-face fontified t c-in-sws t) 1434 1436 (face font-lock-comment-face fontified t c-in-sws t) 1436 1437 (face font-lock-comment-face fontified t c-in-sws t) 1437 1438 (fontified t c-in-sws t) 1438 1439 (c-in-sws t fontified t) 1439 1442 (fontified t c-in-sws t) 1442 1443 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1443 1445 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1445 1446 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1446 1447 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1447 1448 (face font-lock-comment-face fontified t c-in-sws t) 1448 1451 (face font-lock-comment-face fontified t c-in-sws t) 1451 1452 (face font-lock-comment-face fontified t c-in-sws t) 1452 1463 (face font-lock-comment-face fontified t c-in-sws t) 1463 1467 (face font-lock-comment-face fontified t c-in-sws t) 1467 1470 (face font-lock-comment-face fontified t c-in-sws t) 1470 1471 (face font-lock-comment-face fontified t c-in-sws t) 1471 1479 (face font-lock-comment-face fontified t c-in-sws t) 1479 1480 (face font-lock-comment-face fontified t c-in-sws t) 1480 1484 (face font-lock-comment-face fontified t c-in-sws t) 1484 1500 (face font-lock-comment-face fontified t c-in-sws t) 1500 1510 (face font-lock-comment-face fontified t c-in-sws t) 1510 1511 (face font-lock-comment-face fontified t c-in-sws t) 1511 1512 (face font-lock-comment-face fontified t c-in-sws t) 1512 1513 (face font-lock-comment-face fontified t c-in-sws t) 1513 1514 (face font-lock-comment-face fontified t c-in-sws t) 1514 1518 (face font-lock-comment-face fontified t c-in-sws t) 1518 1544 (face font-lock-comment-face fontified t c-in-sws t) 1544 1545 (face font-lock-comment-face fontified t c-in-sws t) 1545 1546 (face font-lock-comment-face fontified t c-in-sws t) 1546 1547 (face font-lock-comment-face fontified t c-in-sws t) 1547 1548 (face font-lock-comment-face fontified t c-in-sws t) 1548 1552 (face font-lock-comment-face fontified t c-in-sws t) 1552 1573 (face font-lock-comment-face fontified t c-in-sws t) 1573 1574 (face font-lock-comment-face fontified t c-in-sws t) 1574 1575 (face font-lock-comment-face fontified t c-in-sws t) 1575 1576 (face font-lock-comment-face fontified t c-in-sws t) 1576 1577 (face font-lock-comment-face fontified t c-in-sws t) 1577 1579 (face font-lock-comment-face fontified t c-in-sws t) 1579 1580 (fontified t c-in-sws t) 1580 1583 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1583 1585 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1585 1586 (face font-lock-comment-face fontified t c-in-sws t) 1586 1588 (face font-lock-comment-face fontified t c-in-sws t) 1588 1595 (face font-lock-comment-face fontified t c-in-sws t) 1595 1596 (fontified t c-in-sws t) 1596 1599 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1599 1601 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1601 1604 (face font-lock-comment-face fontified t c-in-sws t) 1604 1686 (face font-lock-comment-face fontified t c-in-sws t) 1686 1689 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1689 1691 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1691 1692 (face font-lock-comment-face fontified t c-in-sws t) 1692 1697 (face font-lock-comment-face fontified t c-in-sws t) 1697 1710 (face font-lock-comment-face fontified t c-in-sws t) 1710 1713 (fontified t c-in-sws t) 1713 1716 (fontified t c-in-sws t) 1716 1717 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1717 1719 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1719 1720 (face font-lock-comment-face fontified t c-in-sws t) 1720 1721 (face font-lock-comment-face fontified t c-in-sws t) 1721 1722 (fontified t c-in-sws t) 1722 1725 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1725 1735 (face font-lock-comment-face fontified t c-in-sws t) 1735 1737 (face font-lock-comment-face fontified t c-in-sws t) 1737 1746 (face font-lock-comment-face fontified t c-in-sws t) 1746 1747 (face font-lock-comment-face fontified t c-in-sws t) 1747 1749 (face font-lock-comment-face fontified t c-in-sws t) 1749 1759 (face font-lock-comment-face fontified t c-in-sws t) 1759 1761 (face font-lock-comment-face fontified t c-in-sws t) 1761 1771 (face font-lock-comment-face fontified t c-in-sws t) 1771 1773 (face font-lock-comment-face fontified t c-in-sws t) 1773 1781 (face font-lock-comment-face fontified t c-in-sws t) 1781 1782 (face font-lock-comment-face fontified t c-in-sws t) 1782 1786 (face font-lock-comment-face fontified t c-in-sws t) 1786 1787 (face font-lock-comment-face fontified t c-in-sws t) 1787 1788 (face font-lock-comment-face fontified t c-in-sws t) 1788 1789 (face font-lock-comment-face fontified t c-in-sws t) 1789 1790 (face font-lock-comment-face fontified t c-in-sws t) 1790 1793 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1793 1794 (face font-lock-comment-face fontified t c-in-sws t) 1794 1795 (face font-lock-comment-face fontified t c-in-sws t) 1795 1798 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1798 1800 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1800 1804 (face font-lock-comment-face fontified t c-in-sws t) 1804 1815 (face font-lock-comment-face fontified t c-in-sws t) 1815 1816 (face font-lock-comment-face fontified t c-in-sws t) 1816 1817 (face font-lock-comment-face fontified t c-in-sws t) 1817 1818 (face font-lock-comment-face fontified t c-in-sws t) 1818 1819 (face font-lock-comment-face fontified t c-in-sws t) 1819 1822 (face font-lock-comment-face fontified t c-in-sws t) 1822 1823 (face font-lock-comment-face fontified t c-in-sws t) 1823 1833 (face font-lock-comment-face fontified t c-in-sws t) 1833 1835 (face font-lock-comment-face fontified t c-in-sws t) 1835 1845 (face font-lock-comment-face fontified t c-in-sws t) 1845 1846 (face font-lock-comment-face fontified t c-in-sws t) 1846 1850 (face font-lock-comment-face fontified t c-in-sws t) 1850 1851 (face font-lock-comment-face fontified t c-in-sws t) 1851 1853 (face font-lock-comment-face fontified t c-in-sws t) 1853 1856 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1856 1858 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1858 1859 (face font-lock-comment-face fontified t c-in-sws t) 1859 1860 (face font-lock-comment-face fontified t c-in-sws t) 1860 1906 (face font-lock-comment-face fontified t c-in-sws t) 1906 1909 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1909 1911 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1911 1912 (face font-lock-comment-face fontified t c-in-sws t) 1912 1915 (face font-lock-comment-face fontified t c-in-sws t) 1915 1926 (face font-lock-comment-face fontified t c-in-sws t) 1926 1929 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1929 1931 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1931 1932 (face font-lock-comment-face fontified t c-in-sws t) 1932 1934 (face font-lock-comment-face fontified t c-in-sws t) 1934 1940 (face font-lock-comment-face fontified t c-in-sws t) 1940 1941 (face font-lock-comment-face fontified t c-in-sws t) 1941 1944 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1944 1946 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1946 1947 (face font-lock-comment-face fontified t c-in-sws t) 1947 1948 (face font-lock-comment-face fontified t c-in-sws t) 1948 1949 (face font-lock-comment-face fontified t c-in-sws t) 1949 1953 (face font-lock-comment-face fontified t c-in-sws t) 1953 1964 (face font-lock-comment-face fontified t c-in-sws t) 1964 1965 (face font-lock-comment-face fontified t c-in-sws t) 1965 1969 (face font-lock-comment-face fontified t c-in-sws t) 1969 1980 (face font-lock-comment-face fontified t c-in-sws t) 1980 1981 (face font-lock-comment-face fontified t c-in-sws t) 1981 1982 (face font-lock-comment-face fontified t c-in-sws t) 1982 1983 (face font-lock-comment-face fontified t c-in-sws t) 1983 1989 (face font-lock-comment-face fontified t c-in-sws t) 1989 1993 (face font-lock-comment-face fontified t c-in-sws t) 1993 2002 (face font-lock-comment-face fontified t c-in-sws t) 2002 2005 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2005 2007 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2007 2011 (face font-lock-comment-face fontified t c-in-sws t) 2011 2012 (face font-lock-comment-face fontified t c-in-sws t) 2012 2016 (face font-lock-comment-face fontified t c-in-sws t) 2016 2027 (face font-lock-comment-face fontified t c-in-sws t) 2027 2028 (face font-lock-comment-face fontified t c-in-sws t) 2028 2029 (face font-lock-comment-face fontified t c-in-sws t) 2029 2030 (face font-lock-comment-face fontified t c-in-sws t) 2030 2039 (face font-lock-comment-face fontified t c-in-sws t) 2039 2042 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2042 2044 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2044 2045 (face font-lock-comment-face fontified t c-in-sws t) 2045 2047 (face font-lock-comment-face fontified t c-in-sws t) 2047 2067 (face font-lock-comment-face fontified t c-in-sws t) 2067 2070 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2070 2072 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2072 2075 (face font-lock-comment-face fontified t c-in-sws t) 2075 2112 (face font-lock-comment-face fontified t c-in-sws t) 2112 2115 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2115 2117 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2117 2120 (face font-lock-comment-face fontified t c-in-sws t) 2120 2252 (face font-lock-comment-face fontified t c-in-sws t) 2252 2255 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2255 2257 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2257 2260 (face font-lock-comment-face fontified t c-in-sws t) 2260 2333 (face font-lock-comment-face fontified t c-in-sws t) 2333 2336 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2336 2338 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2338 2341 (face font-lock-comment-face fontified t c-in-sws t) 2341 2347 (face font-lock-comment-face fontified t c-in-sws t) 2347 2348 (face font-lock-comment-face fontified t c-in-sws t) 2348 2351 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2351 2352 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2352 2353 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2353 2354 (face font-lock-comment-face fontified t c-in-sws t) 2354 2356 (face font-lock-comment-face fontified t c-in-sws t) 2356 2426 (face font-lock-comment-face fontified t c-in-sws t) 2426 2427 (face font-lock-comment-face fontified t c-in-sws t) 2427 2430 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2430 2431 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2431 2432 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2432 2433 (face font-lock-comment-face fontified t c-in-sws t) 2433 2435 (face font-lock-comment-face fontified t c-in-sws t) 2435 2442 (face font-lock-comment-face fontified t c-in-sws t) 2442 2445 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2445 2449 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2449 2452 (face font-lock-comment-face fontified t c-in-sws t) 2452 2473 (face font-lock-comment-face fontified t c-in-sws t) 2473 2474 (fontified t c-in-sws t) 2474 2477 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2477 2481 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2481 2484 (face font-lock-comment-face fontified t c-in-sws t) 2484 2515 (face font-lock-comment-face fontified t c-in-sws t) 2515 2518 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2518 2522 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2522 2525 (face font-lock-comment-face fontified t c-in-sws t) 2525 2602 (face font-lock-comment-face fontified t c-in-sws t) 2602 2603 (fontified t c-in-sws t) 2603 2606 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2606 2607 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2607 2608 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2608 2610 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2610 2611 (face font-lock-comment-face fontified t c-in-sws t) 2611 2613 (face font-lock-comment-face fontified t c-in-sws t) 2613 2635 (face font-lock-comment-face fontified t c-in-sws t) 2635 2636 (face font-lock-comment-face fontified t c-in-sws t) 2636 2639 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2639 2640 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2640 2641 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2641 2643 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2643 2644 (face font-lock-comment-face fontified t c-in-sws t) 2644 2646 (face font-lock-comment-face fontified t c-in-sws t) 2646 2678 (face font-lock-comment-face fontified t c-in-sws t) 2678 2681 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2681 2685 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2685 2692 (face font-lock-comment-face fontified t c-in-sws t) 2692 2747 (face font-lock-comment-face fontified t c-in-sws t) 2747 2750 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2750 2754 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2754 2757 (face font-lock-comment-face fontified t c-in-sws t) 2757 2759 (face font-lock-comment-face fontified t c-in-sws t) 2759 2762 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2762 2764 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2764 2767 (face font-lock-comment-face fontified t c-in-sws t) 2767 2774 (face font-lock-comment-face fontified t c-in-sws t) 2774 2775 (fontified t c-in-sws t) 2775 2778 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2778 2779 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2779 2780 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2780 2781 (face font-lock-comment-face fontified t c-in-sws t) 2781 2786 (face font-lock-comment-face fontified t c-in-sws t) 2786 2787 (face font-lock-comment-face fontified t c-in-sws t) 2787 2791 (face font-lock-comment-face fontified t c-in-sws t) 2791 2802 (face font-lock-comment-face fontified t c-in-sws t) 2802 2803 (face font-lock-comment-face fontified t c-in-sws t) 2803 2804 (face font-lock-comment-face fontified t c-in-sws t) 2804 2805 (face font-lock-comment-face fontified t c-in-sws t) 2805 2807 (face font-lock-comment-face fontified t c-in-sws t) 2807 2813 (fontified t c-in-sws t) 2813 2816 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2816 2817 (face font-lock-comment-face fontified t c-in-sws t) 2817 2818 (face font-lock-comment-face fontified t c-in-sws t) 2818 2819 (fontified t c-in-sws t) 2819 2822 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2822 2828 (face font-lock-comment-face fontified t c-in-sws t) 2828 2829 (face font-lock-comment-face fontified t c-in-sws t) 2829 2831 (face font-lock-comment-face fontified t c-in-sws t) 2831 2832 (face font-lock-comment-face fontified t c-in-sws t) 2832 2833 (face font-lock-comment-face fontified t c-in-sws t) 2833 2841 (face font-lock-comment-face fontified t c-in-sws t) 2841 2843 (face font-lock-comment-face fontified t c-in-sws t) 2843 2846 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2846 2857 (face font-lock-comment-face fontified t c-in-sws t) 2857 2859 (face font-lock-comment-face fontified t c-in-sws t) 2859 2863 (face font-lock-comment-face fontified t c-in-sws t) 2863 2864 (face font-lock-comment-face fontified t c-in-sws t) 2864 2865 (face font-lock-comment-face fontified t c-in-sws t) 2865 2875 (face font-lock-comment-face fontified t c-in-sws t) 2875 2877 (face font-lock-comment-face fontified t c-in-sws t) 2877 2887 (face font-lock-comment-face fontified t c-in-sws t) 2887 2889 (face font-lock-comment-face fontified t c-in-sws t) 2889 2897 (face font-lock-comment-face fontified t c-in-sws t) 2897 2898 (face font-lock-comment-face fontified t c-in-sws t) 2898 2901 (face font-lock-comment-face fontified t c-in-sws t) 2901 2902 (face font-lock-comment-face fontified t c-in-sws t) 2902 2905 (face font-lock-comment-face fontified t c-in-sws t) 2905 2906 (face font-lock-comment-face fontified t c-in-sws t) 2906 2907 (face font-lock-comment-face fontified t c-in-sws t) 2907 2911 (face font-lock-comment-face fontified t c-in-sws t) 2911 2921 (face font-lock-comment-face fontified t c-in-sws t) 2921 2925 (fontified t face font-lock-comment-face c-in-sws t) 2925 2926 (fontified t face font-lock-comment-face c-in-sws t) 2926 2929 (fontified t face font-lock-comment-face c-in-sws t) 2929 2930 (fontified t face font-lock-comment-face c-in-sws t) 2930 2931 (fontified t face font-lock-comment-face c-in-sws t) 2931 2932 (fontified t face font-lock-comment-face c-in-sws t) 2932 2976 (fontified t face font-lock-comment-face c-in-sws t) 2976 2978 (fontified t face font-lock-comment-face c-in-sws t) 2978 2979 (fontified t face font-lock-comment-face c-in-sws t) 2979 2985 (fontified t face font-lock-comment-face c-in-sws t) 2985 2986 (fontified t face font-lock-comment-face c-in-sws t) 2986 2990 (fontified t face font-lock-comment-face c-in-sws t) 2990 2998 (fontified t face font-lock-comment-face c-in-sws t) 2998 2999 (fontified t face font-lock-comment-face c-in-sws t) 2999 3000 (fontified t face font-lock-comment-face c-in-sws t) 3000 3001 (c-in-sws t fontified t) 3001 3004 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3004 3014 (face font-lock-comment-face fontified t c-in-sws t) 3014 3016 (face font-lock-comment-face fontified t c-in-sws t) 3016 3025 (face font-lock-comment-face fontified t c-in-sws t) 3025 3026 (face font-lock-comment-face fontified t c-in-sws t) 3026 3028 (face font-lock-comment-face fontified t c-in-sws t) 3028 3038 (face font-lock-comment-face fontified t c-in-sws t) 3038 3040 (face font-lock-comment-face fontified t c-in-sws t) 3040 3050 (face font-lock-comment-face fontified t c-in-sws t) 3050 3052 (face font-lock-comment-face fontified t c-in-sws t) 3052 3065 (face font-lock-comment-face fontified t c-in-sws t) 3065 3066 (face font-lock-comment-face fontified t c-in-sws t) 3066 3070 (face font-lock-comment-face fontified t c-in-sws t) 3070 3071 (face font-lock-comment-face fontified t c-in-sws t) 3071 3072 (face font-lock-comment-face fontified t c-in-sws t) 3072 3073 (face font-lock-comment-face fontified t c-in-sws t) 3073 3074 (face font-lock-comment-face fontified t c-in-sws t) 3074 3077 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3077 3078 (face font-lock-comment-face fontified t c-in-sws t) 3078 3079 (face font-lock-comment-face fontified t c-in-sws t) 3079 3082 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3082 3084 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3084 3085 (face font-lock-comment-face fontified t c-in-sws t) 3085 3087 (face font-lock-comment-face fontified t c-in-sws t) 3087 3093 (face font-lock-comment-face fontified t c-in-sws t) 3093 3094 (face font-lock-comment-face fontified t c-in-sws t) 3094 3097 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3097 3098 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3098 3099 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3099 3100 (face font-lock-comment-face fontified t c-in-sws t) 3100 3101 (face font-lock-comment-face fontified t c-in-sws t) 3101 3146 (face font-lock-comment-face fontified t c-in-sws t) 3146 3147 (face font-lock-comment-face fontified t c-in-sws t) 3147 3150 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3150 3151 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3151 3152 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3152 3153 (face font-lock-comment-face fontified t c-in-sws t) 3153 3155 (face font-lock-comment-face fontified t c-in-sws t) 3155 3161 (face font-lock-comment-face fontified t c-in-sws t) 3161 3162 (face font-lock-comment-face fontified t c-in-sws t) 3162 3165 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3165 3166 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3166 3167 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3167 3168 (face font-lock-comment-face fontified t c-in-sws t) 3168 3173 (face font-lock-comment-face fontified t c-in-sws t) 3173 3174 (face font-lock-comment-face fontified t c-in-sws t) 3174 3178 (face font-lock-comment-face fontified t c-in-sws t) 3178 3189 (face font-lock-comment-face fontified t c-in-sws t) 3189 3190 (face font-lock-comment-face fontified t c-in-sws t) 3190 3191 (face font-lock-comment-face fontified t c-in-sws t) 3191 3192 (face font-lock-comment-face fontified t c-in-sws t) 3192 3194 (face font-lock-comment-face fontified t c-in-sws t) 3194 3197 (fontified t c-in-sws t) 3197 3200 (fontified t c-in-sws t) 3200 3203 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3203 3204 (face font-lock-comment-face fontified t c-in-sws t) 3204 3205 (face font-lock-comment-face fontified t c-in-sws t) 3205 3206 (fontified t c-in-sws t) 3206 3209 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3209 3212 (face font-lock-comment-face fontified t c-in-sws t) 3212 3213 (face font-lock-comment-face fontified t c-in-sws t) 3213 3214 (face font-lock-comment-face fontified t c-in-sws t) 3214 3224 (face font-lock-comment-face fontified t c-in-sws t) 3224 3226 (face font-lock-comment-face fontified t c-in-sws t) 3226 3236 (face font-lock-comment-face fontified t c-in-sws t) 3236 3238 (face font-lock-comment-face fontified t c-in-sws t) 3238 3250 (face font-lock-comment-face fontified t c-in-sws t) 3250 3251 (face font-lock-comment-face fontified t c-in-sws t) 3251 3254 (face font-lock-comment-face fontified t c-in-sws t) 3254 3255 (face font-lock-comment-face fontified t c-in-sws t) 3255 3258 (face font-lock-comment-face fontified t c-in-sws t) 3258 3259 (face font-lock-comment-face fontified t c-in-sws t) 3259 3260 (face font-lock-comment-face fontified t c-in-sws t) 3260 3263 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3263 3264 (face font-lock-comment-face fontified t c-in-sws t) 3264 3265 (face font-lock-comment-face fontified t c-in-sws t) 3265 3268 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3268 3270 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3270 3274 (face font-lock-comment-face fontified t c-in-sws t) 3274 3290 (face font-lock-comment-face fontified t c-in-sws t) 3290 3293 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3293 3295 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3295 3296 (face font-lock-comment-face fontified t c-in-sws t) 3296 3297 (face font-lock-comment-face fontified t c-in-sws t) 3297 3311 (face font-lock-comment-face fontified t c-in-sws t) 3311 3312 (face font-lock-comment-face fontified t c-in-sws t) 3312 3315 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3315 3316 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3316 3317 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3317 3318 (face font-lock-comment-face fontified t c-in-sws t) 3318 3320 (face font-lock-comment-face fontified t c-in-sws t) 3320 3326 (face font-lock-comment-face fontified t c-in-sws t) 3326 3327 (face font-lock-comment-face fontified t c-in-sws t) 3327 3330 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3330 3331 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3331 3332 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3332 3333 (face font-lock-comment-face fontified t c-in-sws t) 3333 3335 (face font-lock-comment-face fontified t c-in-sws t) 3335 3352 (face font-lock-comment-face fontified t c-in-sws t) 3352 3355 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3355 3357 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3357 3360 (face font-lock-comment-face fontified t c-in-sws t) 3360 3367 (face font-lock-comment-face fontified t c-in-sws t) 3367 3370 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3370 3372 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3372 3373 (face font-lock-comment-face fontified t c-in-sws t) 3373 3376 (face font-lock-comment-face fontified t c-in-sws t) 3376 3399 (face font-lock-comment-face fontified t c-in-sws t) 3399 3402 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3402 3404 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3404 3408 (face font-lock-comment-face fontified t c-in-sws t) 3408 3420 (face font-lock-comment-face fontified t c-in-sws t) 3420 3424 (face font-lock-comment-face fontified t c-in-sws t) 3424 3431 (face font-lock-comment-face fontified t c-in-sws t) 3431 3432 (fontified t c-in-sws t) 3432 3435 (fontified t c-in-sws t) 3435 3438 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3438 3439 (face font-lock-comment-face fontified t c-in-sws t) 3439 3440 (face font-lock-comment-face fontified t c-in-sws t) 3440 3441 (fontified t c-in-sws t) 3441 3444 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3444 3446 (face font-lock-comment-face fontified t c-in-sws t) 3446 3447 (face font-lock-comment-face fontified t c-in-sws t) 3447 3448 (face font-lock-comment-face fontified t c-in-sws t) 3448 3458 (face font-lock-comment-face fontified t c-in-sws t) 3458 3460 (face font-lock-comment-face fontified t c-in-sws t) 3460 3470 (face font-lock-comment-face fontified t c-in-sws t) 3470 3472 (face font-lock-comment-face fontified t c-in-sws t) 3472 3484 (face font-lock-comment-face fontified t c-in-sws t) 3484 3485 (face font-lock-comment-face fontified t c-in-sws t) 3485 3486 (face font-lock-comment-face fontified t c-in-sws t) 3486 3487 (face font-lock-comment-face fontified t c-in-sws t) 3487 3490 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3490 3491 (face font-lock-comment-face fontified t c-in-sws t) 3491 3492 (face font-lock-comment-face fontified t c-in-sws t) 3492 3495 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3495 3497 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3497 3498 (face font-lock-comment-face fontified t c-in-sws t) 3498 3500 (face font-lock-comment-face fontified t c-in-sws t) 3500 3506 (face font-lock-comment-face fontified t c-in-sws t) 3506 3507 (face font-lock-comment-face fontified t c-in-sws t) 3507 3510 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3510 3511 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3511 3512 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3512 3513 (face font-lock-comment-face fontified t c-in-sws t) 3513 3515 (face font-lock-comment-face fontified t c-in-sws t) 3515 3545 (face font-lock-comment-face fontified t c-in-sws t) 3545 3546 (face font-lock-comment-face fontified t c-in-sws t) 3546 3549 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3549 3550 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3550 3551 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3551 3552 (face font-lock-comment-face fontified t c-in-sws t) 3552 3554 (face font-lock-comment-face fontified t c-in-sws t) 3554 3560 (face font-lock-comment-face fontified t c-in-sws t) 3560 3561 (face font-lock-comment-face fontified t c-in-sws t) 3561 3564 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3564 3565 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3565 3566 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3566 3567 (face font-lock-comment-face fontified t c-in-sws t) 3567 3572 (face font-lock-comment-face fontified t c-in-sws t) 3572 3573 (face font-lock-comment-face fontified t c-in-sws t) 3573 3577 (face font-lock-comment-face fontified t c-in-sws t) 3577 3589 (face font-lock-comment-face fontified t c-in-sws t) 3589 3592 (fontified t c-in-sws t) 3592 3595 (fontified t c-in-sws t) 3595 3598 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3598 3599 (face font-lock-comment-face fontified t c-in-sws t) 3599 3600 (face font-lock-comment-face fontified t c-in-sws t) 3600 3601 (fontified t c-in-sws t) 3601 3604 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3604 3615 (face font-lock-comment-face fontified t c-in-sws t) 3615 3617 (face font-lock-comment-face fontified t c-in-sws t) 3617 3621 (face font-lock-comment-face fontified t c-in-sws t) 3621 3622 (face font-lock-comment-face fontified t c-in-sws t) 3622 3623 (face font-lock-comment-face fontified t c-in-sws t) 3623 3633 (face font-lock-comment-face fontified t c-in-sws t) 3633 3635 (face font-lock-comment-face fontified t c-in-sws t) 3635 3645 (face font-lock-comment-face fontified t c-in-sws t) 3645 3647 (face font-lock-comment-face fontified t c-in-sws t) 3647 3656 (face font-lock-comment-face fontified t c-in-sws t) 3656 3657 (face font-lock-comment-face fontified t c-in-sws t) 3657 3658 (face font-lock-comment-face fontified t c-in-sws t) 3658 3659 (face font-lock-comment-face fontified t c-in-sws t) 3659 3662 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3662 3663 (face font-lock-comment-face fontified t c-in-sws t) 3663 3664 (face font-lock-comment-face fontified t c-in-sws t) 3664 3667 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3667 3669 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3669 3670 (face font-lock-comment-face fontified t c-in-sws t) 3670 3672 (face font-lock-comment-face fontified t c-in-sws t) 3672 3678 (face font-lock-comment-face fontified t c-in-sws t) 3678 3679 (face font-lock-comment-face fontified t c-in-sws t) 3679 3682 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3682 3684 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3684 3685 (face font-lock-comment-face fontified t c-in-sws t) 3685 3690 (face font-lock-comment-face fontified t c-in-sws t) 3690 3691 (face font-lock-comment-face fontified t c-in-sws t) 3691 3695 (face font-lock-comment-face fontified t c-in-sws t) 3695 3704 (face font-lock-comment-face fontified t c-in-sws t) 3704 3707 (fontified t c-in-sws t) 3707 3710 (fontified t c-in-sws t) 3710 3713 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3713 3714 (face font-lock-comment-face fontified t c-in-sws t) 3714 3715 (face font-lock-comment-face fontified t c-in-sws t) 3715 3716 (fontified t c-in-sws t) 3716 3717 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3717 3719 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3719 3747 (face font-lock-comment-face fontified t c-in-sws t) 3747 3748 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3748 3750 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3750 3752 (face font-lock-comment-face fontified t c-in-sws t) 3752 3757 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3757 3777 (face font-lock-comment-face fontified t c-in-sws t) 3777 3782 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3782 3784 (face font-lock-comment-face fontified t c-in-sws t) 3784 3791 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3791 3818 (face font-lock-comment-face fontified t c-in-sws t) 3818 3819 (face font-lock-comment-face fontified t c-in-sws t) 3819 3820 (fontified t c-in-sws t) 3820 3824 (fontified t c-in-sws t) 3824 3825 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3825 3829 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3829 3831 (face font-lock-comment-face fontified t c-in-sws t) 3831 3834 (fontified t c-in-sws t) 3834 3837 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3837 3840 (face font-lock-comment-face fontified t c-in-sws t) 3840 3843 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3843 3855 (face font-lock-comment-face fontified t c-in-sws t) 3855 3858 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3858 3860 (face font-lock-comment-face fontified t c-in-sws t) 3860 3865 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3865 3882 (face font-lock-comment-face fontified t c-in-sws t) 3882 3885 (fontified t c-in-sws t) 3885 3886 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3886 3888 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3888 3889 (face font-lock-comment-face fontified t c-in-sws t) 3889 3890 (c-in-sws t face font-lock-comment-face fontified t rear-nonsticky t)) . 219) (undo-tree-id1380 . -3659) (undo-tree-id1381 . -3890) (undo-tree-id1382 . -3890) (undo-tree-id1383 . 3862) (undo-tree-id1384 . -3890) (undo-tree-id1385 . -27) (undo-tree-id1386 . -3890) (undo-tree-id1387 . -3889) (undo-tree-id1388 . -3714) (undo-tree-id1389 . -3704) (undo-tree-id1390 . -3704) (undo-tree-id1391 . -3707) (undo-tree-id1392 . -3707) (undo-tree-id1393 . -3710) (undo-tree-id1394 . -3710) (undo-tree-id1395 . -3860) (undo-tree-id1396 . -3860) (undo-tree-id1397 . -3882) (undo-tree-id1398 . -3882) (undo-tree-id1399 . -3885) (undo-tree-id1400 . -3885) (undo-tree-id1401 . -3715) (undo-tree-id1402 . -3715) (undo-tree-id1403 . -3716) (undo-tree-id1404 . -3716) (undo-tree-id1405 . -3747) (undo-tree-id1406 . -3747) (undo-tree-id1407 . -3752) (undo-tree-id1408 . -3752) (undo-tree-id1409 . -3777) (undo-tree-id1410 . -3777) (undo-tree-id1411 . -3784) (undo-tree-id1412 . -3784) (undo-tree-id1413 . -3834) (undo-tree-id1414 . -3834) (undo-tree-id1415 . -3819) (undo-tree-id1416 . -3819) (undo-tree-id1417 . -3824) (undo-tree-id1418 . -3824) (undo-tree-id1419 . -3890) (undo-tree-id1420 . -27) (undo-tree-id1421 . -3890) (undo-tree-id1422 . -3855) (undo-tree-id1423 . -3855) (undo-tree-id1424 . -3840) (undo-tree-id1425 . -3840) (undo-tree-id1426 . -3679) (undo-tree-id1427 . -3679) (undo-tree-id1428 . -3664) (undo-tree-id1429 . -3664) (undo-tree-id1430 . -3659) (undo-tree-id1431 . -3659) (undo-tree-id1432 . -3831) (undo-tree-id1433 . -3831) (undo-tree-id1434 . -3890) (undo-tree-id1435 . -3890) (undo-tree-id1436 . -3890) (undo-tree-id1437 . -3890) (undo-tree-id1438 . -3890) (undo-tree-id1439 . -3890) (undo-tree-id1440 . -3890) (undo-tree-id1441 . -3890) (undo-tree-id1442 . -3890) (undo-tree-id1443 . -3890) (undo-tree-id1444 . -3890) (undo-tree-id1445 . -3890) (undo-tree-id1446 . -3890) (undo-tree-id1447 . -3890) (undo-tree-id1448 . -3890) (undo-tree-id1449 . -3890) (undo-tree-id1450 . -3890) (undo-tree-id1451 . -3890) (undo-tree-id1452 . -3890) (undo-tree-id1453 . -3890) (undo-tree-id1454 . -3890) (undo-tree-id1455 . -3890) (undo-tree-id1456 . -3890) (undo-tree-id1457 . -3890) (undo-tree-id1458 . -3890) (undo-tree-id1459 . -3890) (undo-tree-id1460 . -3890) (undo-tree-id1461 . -3890) (undo-tree-id1462 . -3890) (undo-tree-id1463 . -3890) (undo-tree-id1464 . -3890) (undo-tree-id1465 . -3890) (undo-tree-id1466 . -3890) (undo-tree-id1467 . -3890) (undo-tree-id1468 . -3890) (undo-tree-id1469 . -3890) (undo-tree-id1470 . -3890) (undo-tree-id1471 . -3890) (undo-tree-id1472 . -3890) (undo-tree-id1473 . -3890) (undo-tree-id1474 . -3890) (undo-tree-id1475 . -3890) (undo-tree-id1476 . -3890) (undo-tree-id1477 . -3890) (undo-tree-id1478 . -3890) (undo-tree-id1479 . -3890) (undo-tree-id1480 . -3890) (undo-tree-id1481 . -3890) (undo-tree-id1482 . -3890) (undo-tree-id1483 . -3890) (undo-tree-id1484 . -3890) (undo-tree-id1485 . -3890) (undo-tree-id1486 . -3890) (undo-tree-id1487 . -3890) (undo-tree-id1488 . -3890) (undo-tree-id1489 . -3890) (undo-tree-id1490 . -3890) (undo-tree-id1491 . -3890) (undo-tree-id1492 . -3890) (undo-tree-id1493 . -3890) (undo-tree-id1494 . -3890) (undo-tree-id1495 . -3890) (undo-tree-id1496 . -3890) (undo-tree-id1497 . -3890) (undo-tree-id1498 . -3890) (undo-tree-id1499 . -3890) (undo-tree-id1500 . -3890) (undo-tree-id1501 . -3890) (undo-tree-id1502 . -3890) (undo-tree-id1503 . -3890) (undo-tree-id1504 . -3890) (undo-tree-id1505 . -3890) (undo-tree-id1506 . -3890) (undo-tree-id1507 . -3890) (undo-tree-id1508 . -3890) (undo-tree-id1509 . -3890) (undo-tree-id1510 . -3890) 4109 (t 26067 18495 526615 553000)) nil (26067 18558 11882 785000) 0 nil] [nil nil ((#("_" 0 1 (face font-lock-constant-face fontified t)) . -96) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1349 . -1) (undo-tree-id1351 . -1) (undo-tree-id1353 . -1) (undo-tree-id1355 . -1) (undo-tree-id1357 . -1) (undo-tree-id1359 . -1) (undo-tree-id1361 . -1) (undo-tree-id1363 . -1) (undo-tree-id1365 . -1) (undo-tree-id1367 . -1) (undo-tree-id1369 . -1) (undo-tree-id1371 . -1) (undo-tree-id1373 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -97) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -98) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) 99 (t 26067 18444 779949 920000)) ((96 . 99) (t 26067 18478 26615 906000)) (26067 18478 10653 157000) 0 nil])
([nil nil ((157 . 160) (t 26067 18558 23280 946000) 156) nil (26067 19329 999660 87000) 0 nil])
nil
([nil nil ((160 . 165)) nil (26067 19329 999659 293000) 0 nil])
([nil nil ((165 . 166)) nil (26067 19329 999658 692000) 0 nil])
([nil nil ((166 . 171)) nil (26067 19329 999657 642000) 0 nil])
([nil nil ((171 . 172)) nil (26067 19329 999654 272000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -170) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) 171 (t 26067 19330 9931 842000)) nil (26067 19333 47809 938000) 0 nil])
([nil nil ((170 . 171)) nil (26067 19333 47808 111000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -170) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) 171) nil (26067 19333 47806 380000) 0 nil])
([nil nil ((170 . 171)) nil (26067 19333 47795 181000) 0 nil])
([nil nil ((234 . 235) (t 26067 19333 63265 113000)) nil (26067 19360 811473 661000) 0 nil])
([nil nil ((235 . 240)) nil (26067 19360 811473 192000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -238) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -239) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 240) nil (26067 19360 811472 438000) 0 nil])
([nil nil ((238 . 240)) nil (26067 19360 811469 387000) 0 nil])
([nil nil ((238 . 250) (#("t" 0 1 (fontified nil)) . 238) (238 . 239) (#("token_num_sp" 0 12 (fontified nil)) . -238) (238 . 250) (#("to" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . -238) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) 240) nil (26067 19360 811468 407000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -247) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -248) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -249) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) 250) nil (26067 19360 811465 487000) 0 nil])
([nil nil ((247 . 249)) nil (26067 19360 811461 323000) 0 nil])
([nil nil ((249 . 251)) nil (26067 19360 811460 898000) 0 nil])
([nil nil ((251 . 258)) nil (26067 19360 811460 504000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -257) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) 258) nil (26067 19360 811459 56000) 0 nil])
([nil nil ((257 . 259)) nil (26067 19360 813033 3000) 0 nil])
([nil nil ((259 . 261)) nil (26067 19443 192835 96000) 0 nil] [nil nil ((259 . 261)) ((#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 259) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1)) (26067 19360 811447 899000) 0 nil])
([nil nil ((261 . 264)) nil (26067 19443 192834 804000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified nil)) . 262) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (264 . 266)) nil (26067 19443 192834 160000) 0 nil])
([nil nil ((264 . 266) (263 . 265)) nil (26067 19443 192832 789000) 0 nil])
([nil nil ((264 . 267) (#("  " 0 2 (fontified t)) . 264) (undo-tree-id1544 . -2) (undo-tree-id1545 . -2) 266) nil (26067 19443 192832 68000) 0 nil])
([nil nil ((263 . 266)) nil (26067 19443 192830 365000) 0 nil])
([nil nil ((266 . 268)) nil (26067 19443 192830 24000) 0 nil])
([nil nil ((268 . 270)) nil (26067 19443 192829 688000) 0 nil])
([nil nil ((269 . 272)) nil (26067 19443 192829 404000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -269) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (#("h" 0 1 (fontified t)) . -270) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (#("i" 0 1 (fontified t)) . -271) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) 272) nil (26067 19443 192828 583000) 0 nil])
([nil nil ((269 . 271)) nil (26067 19443 192824 676000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -269) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (#("e" 0 1 (fontified t)) . -270) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) 271) nil (26067 19443 192823 832000) 0 nil])
([nil nil ((269 . 274)) nil (26067 19443 192820 490000) 0 nil])
([nil nil ((274 . 275)) nil (26067 19443 192820 127000) 0 nil])
([nil nil ((275 . 282)) nil (26067 19443 192819 818000) 0 nil])
([nil nil ((282 . 288)) nil (26067 19443 192819 461000) 0 nil])
([nil nil ((288 . 290)) nil (26067 19443 192819 198000) 0 nil])
([nil nil ((291 . 298)) nil (26067 19443 192818 676000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -297) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) 298) nil (26067 19443 192817 731000) 0 nil])
([nil nil ((297 . 304)) nil (26067 19443 192811 22000) 0 nil])
([nil nil ((304 . 305)) nil (26067 19443 192810 373000) 0 nil])
([nil nil ((311 . 312) 305) nil (26067 19443 192806 602000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -170) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) 171 (t 26067 19443 206596 202000)) nil (26067 19449 709523 342000) 0 nil])
([nil nil ((170 . 171)) nil (26067 19449 709510 952000) 0 nil])
([nil nil ((305 . 308) (t 26067 19449 726596 71000)) nil (26067 19600 793501 581000) 0 nil])
([nil nil ((308 . 312)) nil (26067 19600 793500 939000) 0 nil])
([nil nil ((312 . 313) (#(" x" 0 2 (fontified nil)) . -312) (312 . 314) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 312) (undo-tree-id1557 . -4) (undo-tree-id1558 . -4) (308 . 312) 312) nil (26067 19600 793499 747000) 0 nil])
([nil nil ((313 . 318)) nil (26067 19600 793497 321000) 0 nil])
([nil nil ((318 . 320)) nil (26067 19600 793496 792000) 0 nil])
([nil nil ((320 . 321)) nil (26067 19600 793496 322000) 0 nil])
([nil nil ((321 . 326)) nil (26067 19600 793495 836000) 0 nil])
([nil nil ((326 . 327)) nil (26067 19600 793495 362000) 0 nil])
([nil nil ((327 . 331)) nil (26067 19600 793494 752000) 0 nil])
([nil nil ((331 . 335)) nil (26067 19600 793494 96000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -334) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 335) nil (26067 19600 793493 91000) 0 nil])
([nil nil ((334 . 337)) nil (26067 19600 793490 63000) 0 nil])
([nil nil ((337 . 339)) nil (26067 19600 793489 471000) 0 nil])
([nil nil ((apply yas--snippet-revive 355 362 #s(yas--snippet nil nil #s(yas--exit 361 nil) 10 nil nil nil nil)) (69 . 89) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 361 nil) 10 nil nil nil nil)) (335 . 342) (#("begin($0)" 0 9 (fontified nil)) . 335) (335 . 344) (#("b" 0 1 (fontified nil)) . 335) (335 . 336) (#("begin(…)" 0 8 (fontified nil)) . -335) (335 . 343) (#("begi" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -335) (undo-tree-id1553 . -4) (undo-tree-id1554 . -4) 339) nil (26067 19600 793487 278000) 0 nil])
([nil nil ((362 . 363)) nil (26067 19600 793473 994000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -333) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (#("e" 0 1 (fontified t)) . -334) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (#("t" 0 1 (fontified t)) . -335) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("u" 0 1 (fontified t)) . -336) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (#("r" 0 1 (fontified t)) . -337) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -338) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) 339 (t 26067 19600 853259 663000)) nil (26067 19691 125786 279000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 332) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) 333) nil (26067 19691 125774 507000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -328) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (#("l" 0 1 (fontified t)) . -329) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#("s" 0 1 (fontified t)) . -330) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -331) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) 332) nil (26067 19691 125769 140000) 0 nil])
([nil nil ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 325) (undo-tree-id1575 . -3) (undo-tree-id1576 . -3) 328) nil (26067 19691 125762 642000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -322) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (#("+" 0 1 (fontified t)) . -323) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (#(";" 0 1 (fontified t)) . -324) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) 325) nil (26067 19691 125760 748000) 0 nil])
([nil nil ((322 . 323)) nil (26067 19691 125754 958000) 0 nil])
([nil nil ((322 . 324)) nil (26067 19691 125754 359000) 0 nil])
([nil nil ((326 . 328) (#(" " 0 1 (fontified nil)) . 326) (325 . 326)) nil (26067 19691 125753 748000) 0 nil])
([nil nil ((328 . 337)) nil (26067 19691 125753 276000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -335) (undo-tree-id1565 . -1) 336) nil (26067 19691 125752 685000) 0 nil])
([nil nil ((359 . 362)) nil (26067 19691 125751 612000) 0 nil])
([nil nil ((362 . 367)) nil (26067 19691 125751 232000) 0 nil])
([nil nil ((367 . 368)) nil (26067 19691 125750 891000) 0 nil])
([nil nil ((368 . 370)) nil (26067 19691 125750 537000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -369) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) 370) nil (26067 19691 125750 38000) 0 nil])
([nil nil ((369 . 372)) nil (26067 19691 125748 496000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -371) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) 372) nil (26067 19691 125748 2000) 0 nil])
([nil nil ((371 . 381)) nil (26067 19691 125746 303000) 0 nil])
([nil nil ((381 . 383)) nil (26067 19691 125746 20000) 0 nil])
([nil nil ((382 . 385)) nil (26067 19691 125745 635000) 0 nil])
([nil nil ((386 . 387)) nil (26067 19691 125745 350000) 0 nil])
([nil nil ((387 . 390)) nil (26067 19691 125744 990000) 0 nil])
([nil nil ((388 . 391) (#("  " 0 2 (fontified t)) . 388) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) 390) nil (26067 19691 125744 103000) 0 nil])
([nil nil ((391 . 398)) nil (26067 19691 125737 696000) 0 nil])
([nil nil ((398 . 401)) nil (26067 19691 125737 69000) 0 nil])
([nil nil ((401 . 402)) nil (26067 19691 125733 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -439) (409 . 440) (t 26067 19691 139924 497000)) nil (26067 20218 571837 283000) 0 nil])
([nil nil ((#("

    " 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . 408) (undo-tree-id1966 . -6) (undo-tree-id1967 . -6) (undo-tree-id1968 . -2) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -2) (undo-tree-id2061 . -2) (undo-tree-id2062 . -6) (undo-tree-id2063 . -6) (undo-tree-id2064 . -6) (undo-tree-id2065 . -6) (undo-tree-id2066 . -6) (undo-tree-id2067 . -6) (undo-tree-id2068 . -6) (undo-tree-id2069 . -6) (undo-tree-id2070 . -6) (undo-tree-id2071 . -6) (undo-tree-id2072 . -6) (undo-tree-id2073 . -6) (undo-tree-id2074 . -6) (undo-tree-id2075 . -6) (undo-tree-id2076 . -6) (undo-tree-id2077 . -6) (undo-tree-id2078 . -6) (undo-tree-id2079 . -6) (undo-tree-id2080 . -6) (undo-tree-id2081 . -6) (undo-tree-id2082 . -6) (undo-tree-id2083 . -6) (undo-tree-id2084 . -6) (undo-tree-id2085 . -6) (undo-tree-id2086 . -6) (undo-tree-id2087 . -6) (undo-tree-id2088 . -6) (undo-tree-id2089 . -6) (undo-tree-id2090 . -6) (undo-tree-id2091 . -6) (undo-tree-id2092 . -6) (undo-tree-id2093 . -6) (undo-tree-id2094 . -6) (undo-tree-id2095 . -6) (undo-tree-id2096 . -6) (undo-tree-id2097 . -6) (undo-tree-id2098 . -6) (undo-tree-id2099 . -6) (undo-tree-id2100 . -6) (undo-tree-id2101 . -6) (undo-tree-id2102 . -6) (undo-tree-id2103 . -6) (undo-tree-id2104 . -6) (undo-tree-id2105 . -6) (undo-tree-id2106 . -6) (undo-tree-id2107 . -6) (undo-tree-id2108 . -6) (undo-tree-id2109 . -6) (undo-tree-id2110 . -6) (undo-tree-id2111 . -6) (undo-tree-id2112 . -6) (undo-tree-id2113 . -6) (undo-tree-id2114 . -6) (undo-tree-id2115 . -6) (undo-tree-id2116 . -6) (undo-tree-id2117 . -6) (undo-tree-id2118 . -6) (undo-tree-id2119 . -6) (undo-tree-id2120 . -6) (undo-tree-id2121 . -6) (undo-tree-id2122 . -6) (undo-tree-id2123 . -6) (undo-tree-id2124 . -6) (undo-tree-id2125 . -6) (undo-tree-id2126 . -6) (undo-tree-id2127 . -6) (undo-tree-id2128 . -6) (undo-tree-id2129 . -6) (undo-tree-id2130 . -6) (undo-tree-id2131 . -6) (undo-tree-id2132 . -6) (undo-tree-id2133 . -6) (undo-tree-id2134 . -6) (undo-tree-id2135 . -6) (undo-tree-id2136 . -6) (undo-tree-id2137 . -6) (undo-tree-id2138 . -6) (undo-tree-id2139 . -6) (undo-tree-id2140 . -6) (undo-tree-id2141 . -6) (undo-tree-id2142 . -6) (undo-tree-id2143 . -6) (undo-tree-id2144 . -6) (undo-tree-id2145 . -6) (undo-tree-id2146 . -6) (undo-tree-id2147 . -6) (undo-tree-id2148 . -6) (undo-tree-id2149 . -6) (undo-tree-id2150 . -6) (undo-tree-id2151 . -6) (undo-tree-id2152 . -6) (undo-tree-id2153 . -6) (undo-tree-id2154 . -6) (undo-tree-id2155 . -6) (undo-tree-id2156 . -6) (undo-tree-id2157 . -6) (undo-tree-id2158 . -6) (undo-tree-id2159 . -6) (undo-tree-id2160 . -6) (undo-tree-id2161 . -6) (undo-tree-id2162 . -6) (undo-tree-id2163 . -6) (undo-tree-id2164 . -6) (undo-tree-id2165 . -6) (undo-tree-id2166 . -6) (undo-tree-id2167 . -6) (undo-tree-id2168 . -6) (undo-tree-id2169 . -6) (undo-tree-id2170 . -6) (undo-tree-id2171 . -6) (undo-tree-id2172 . -6) (undo-tree-id2173 . -6) (undo-tree-id2174 . -6) (undo-tree-id2175 . -6) (undo-tree-id2176 . -6) (undo-tree-id2177 . -6) (undo-tree-id2178 . -6) (undo-tree-id2179 . -6) (undo-tree-id2180 . -6) (undo-tree-id2181 . -6) (undo-tree-id2182 . -6) (undo-tree-id2183 . -6) (undo-tree-id2184 . -6) (undo-tree-id2185 . -6) (undo-tree-id2186 . -6) (undo-tree-id2187 . -6) (undo-tree-id2188 . -6) (undo-tree-id2189 . -6) (undo-tree-id2190 . -6) (undo-tree-id2191 . -6) (undo-tree-id2192 . -6) (undo-tree-id2193 . -6) (undo-tree-id2194 . -6) (undo-tree-id2195 . -6) (undo-tree-id2196 . -6) (undo-tree-id2197 . -6) (undo-tree-id2198 . -6) (undo-tree-id2199 . -6) (undo-tree-id2200 . -6) (undo-tree-id2201 . -6) (undo-tree-id2202 . -6) (undo-tree-id2203 . -6) (undo-tree-id2204 . -6) (undo-tree-id2205 . -6) (undo-tree-id2206 . -6) (undo-tree-id2207 . -6) (undo-tree-id2208 . -6) (undo-tree-id2209 . -6) (undo-tree-id2210 . -6) (undo-tree-id2211 . -6) (undo-tree-id2212 . -2) (undo-tree-id2213 . -6) (undo-tree-id2214 . -6) (undo-tree-id2215 . -6) (undo-tree-id2216 . -6) (undo-tree-id2217 . -6) (undo-tree-id2218 . -6) (undo-tree-id2219 . -6) (undo-tree-id2220 . -6) (undo-tree-id2221 . -6) (undo-tree-id2222 . -6) (undo-tree-id2223 . -6) (undo-tree-id2224 . -6) (undo-tree-id2225 . -6) (undo-tree-id2226 . -6) (undo-tree-id2227 . -6) (undo-tree-id2228 . -6) (undo-tree-id2229 . -6) (undo-tree-id2230 . -6) (undo-tree-id2231 . -6) (undo-tree-id2232 . -6) (undo-tree-id2233 . -6) (undo-tree-id2234 . -6) (undo-tree-id2235 . -6) (undo-tree-id2236 . -6) (undo-tree-id2237 . -6) (undo-tree-id2238 . -6) 414) nil (26067 20218 573008 725000) 0 nil])
([nil nil ((470 . 471) (468 . 469) (#("y" 0 1 (fontified t)) . -468) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (#("m" 0 1 (fontified t)) . -469) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) 470 (466 . 470) (465 . 467) (462 . 465) (460 . 462) (457 . 460) (#("r" 0 1 (fontified t)) . -457) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) 458 (452 . 458) (451 . 452) (446 . 451) (443 . 446) (443 . 446) (444 . 446) (443 . 445) (#("  " 0 2 (fontified nil)) . 442) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (444 . 446) (441 . 444) (#(";" 0 1 (fontified t)) . -441) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) 442 (#("_" 0 1 (face font-lock-constant-face fontified t)) . -420) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -421) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -422) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) 423 (411 . 423) (#("t" 0 1 (fontified nil)) . 411) (411 . 412) (#("token_num_sp" 0 12 (fontified nil)) . -411) (411 . 423) (#("tok" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t)) . -411) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) 414 (411 . 414) (411 . 413) (405 . 405) (405 . 406) (#("
  
" 0 3 (fontified t) 3 4 (fontified t)) . -403) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) 407 (408 . 408) (408 . 409)) nil (26067 20441 168297 740000) 0 nil] [nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -407) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . 1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) 408) ((407 . 408)) (26067 20218 571664 569000) 0 nil])
([nil nil ((479 . 480) 470) nil (26067 20441 168275 637000) 0 nil])
nil
([nil nil ((460 . 466) (#("e" 0 1 (fontified t)) . -460) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (#("r" 0 1 (fontified t)) . -461) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (#("a" 0 1 (fontified t)) . -462) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (#("s" 0 1 (fontified t)) . -463) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (#("e" 0 1 (fontified t)) . -464) (undo-tree-id2267 . -1) 465 (t 26067 20441 183242 542000)) nil (26067 20539 140187 20000) 0 nil])
([nil nil ((362 . 366) (t 26067 20539 153240 551000)) nil (26067 20943 129917 431000) 0 nil])
([nil nil ((366 . 368)) nil (26067 20943 129913 622000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -362) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (#("o" 0 1 (fontified t)) . -363) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (#("u" 0 1 (fontified t)) . -364) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (#("t" 0 1 (fontified t)) . -365) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (#("<" 0 1 (fontified t)) . -366) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (#("<" 0 1 (fontified t)) . -367) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) 368 (t 26067 20943 146565 681000)) nil (26067 20987 531993 948000) 0 nil])
([nil nil ((190 . 191) (#("0" 0 1 (fontified t)) . 190) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (t 26067 20987 546564 766000)) nil (26067 32358 783789 848000) 0 nil])
([nil nil ((190 . 191) (#("1" 0 1 (fontified t)) . 190) (undo-tree-id3 . -1) (t 26067 32358 799668 194000)) nil (26067 32547 260251 495000) 0 nil])
([nil current ((190 . 191) (#("0" 0 1 (fontified t)) . 190) (t 26067 32547 276331 76000)) nil (26067 34433 53307 772000) 0 nil])
nil

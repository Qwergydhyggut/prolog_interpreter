(undo-tree-save-format-version . 1)
"0dfe40dfddfebe5be95bd3bc9dff566ffe508a47"
[nil nil nil nil (26077 64806 634437 102000) 0 nil]
([nil nil ((1060 . 1064) (1056 . 1060) (1056 . 1057) 1069 (t 26070 14850 956142 454000)) nil (26077 64806 634433 294000) 0 nil])
([nil nil ((apply -3 1056 1103 undo--wrap-and-run-primitive-undo 1056 1103 ((1060 . 1063) 1065)) (t 26077 64806 652606 385000)) nil (26077 64868 396819 59000) 0 nil])
([nil nil ((2340 . 2341) (2338 . 2339) (2337 . 2338) (2335 . 2336) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2335) (undo-tree-id5 . -1) 2336 (2335 . 2336) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2335) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 2336 (2334 . 2336) (2333 . 2335) (nil face font-lock-type-face 2332 . 2334) (nil fontified t 2332 . 2334) (2332 . 2334) (2326 . 2332) (2323 . 2326) (2330 . 2331) (2326 . 2330) (2323 . 2326) (t 26077 64827 709272 545000) 2322) nil (26077 64891 201374 732000) 0 nil] [nil nil ((2322 . 2324) (2322 . 2323) (t 26077 64827 709272 545000)) ((#("
" 0 1 (fontified nil)) . 2322) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("  " 0 2 (fontified t)) . 2322) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2)) (26077 64868 391346 667000) 0 nil])
([nil nil ((2346 . 2348) (2345 . 2346) (2340 . 2345) (2339 . 2340) (t 26077 64891 215937 662000)) nil (26077 65000 799078 200000) 0 nil])
nil
([nil nil ((apply -6 2324 2395 undo--wrap-and-run-primitive-undo 2324 2395 ((2356 . 2359) (2326 . 2329) 2324)) (t 26077 65002 535934 958000)) nil (26077 65232 989956 628000) 0 nil] [nil nil ((495 . 496) (491 . 495) (491 . 492) (502 . 503) (#("}" 0 1 (fontified nil)) . -502) (502 . 503) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -491) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -1) 492 (490 . 492) (t 26077 64919 425936 970000)) ((#("{}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 490) (undo-tree-id793 . -2) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (491 . 492) (#("}" 0 1 (fontified nil)) . 502) (502 . 503) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 502) (#(";" 0 1 (fontified nil)) . 491) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (#("debu" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 491) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (#("g" 0 1 (fontified t)) . 495) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1)) (26077 65000 416821 514000) 0 nil])
([nil nil ((apply 6 396 424 undo--wrap-and-run-primitive-undo 396 424 ((#("// " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -417) (#("// " 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -398) 430)) (t 26077 65234 599262 641000)) nil (26078 190 82215 780000) 0 nil] [nil nil ((apply 6 2324 2359 undo--wrap-and-run-primitive-undo 2324 2359 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t)) . -2353) (#("// " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . -2326) 2365)) (t 26077 65021 429267 831000)) ((apply -6 2324 2365 undo--wrap-and-run-primitive-undo 2324 2365 ((2326 . 2329) (2353 . 2356) 2332)) (t 26077 65225 522596 197000)) (26077 65225 508712 942000) 0 nil])
([nil nil ((497 . 501) (496 . 497) (t 26077 64969 832602 421000)) ((#(";" 0 1 (fontified nil)) . 496) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("stop" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 497) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . -3) (undo-tree-id711 . -3) (undo-tree-id712 . -3) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -3) (undo-tree-id744 . -3) (undo-tree-id745 . -3) (undo-tree-id746 . -3) (undo-tree-id747 . -3) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -3) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -3) (undo-tree-id792 . -3) (t 26077 64986 285935 355000)) (26077 64986 273432 719000) 0 nil])
([nil nil ((416 . 417) (415 . 416) (409 . 410) (#(" " 0 1 (face font-lock-string-face fontified t)) . -409) (undo-tree-id1227 . -1) 410 (409 . 412)) nil (26078 190 82212 808000) 0 nil])
nil
nil
([nil nil ((416 . 420) (#("c" 0 1 (fontified t)) . 416) (t 26078 190 99250 702000)) nil (26078 247 931050 246000) 0 nil])
([nil nil ((apply 6 1262 1290 undo--wrap-and-run-primitive-undo 1262 1290 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1283) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -1264) 1262)) (t 26078 247 992582 625000)) nil (26078 392 521315 387000) 0 nil])
([nil nil ((1604 . 1605) (1599 . 1604) (1596 . 1599) (t 26078 392 532579 121000) 1591) nil (26078 645 958325 536000) 0 nil])
([nil nil ((1618 . 1619) (1613 . 1617) (1612 . 1613) (1610 . 1611) (nil syntax-table nil 1612 . 1613) (nil syntax-table (1) 1606 . 1607) (#("b" 0 1 (face font-lock-string-face fontified t)) . -1610) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) 1611 (1610 . 1611) (nil syntax-table nil 1612 . 1613) (nil syntax-table (1) 1606 . 1607) (1608 . 1610) (1607 . 1608) (1606 . 1608) (nil face font-lock-type-face 1605 . 1607) (nil fontified t 1605 . 1607) (1605 . 1607) (1599 . 1605) (1597 . 1599) (1597 . 1598) 1604 (t 26078 645 985906 296000)) nil (26078 674 38663 163000) 0 nil])
([nil nil ((1067 . 1068) (1066 . 1067) (#("f" 0 1 (fontified t)) . -1066) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (#("g" 0 1 (fontified t)) . -1067) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) 1068 (1062 . 1068) (1058 . 1062) (1058 . 1059) 1068 (t 26078 674 49238 943000)) nil (26078 6195 196307 644000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2463 . 2464) (#("
" 0 1 (fontified nil)) . -2532) (2461 . 2533) (t 26078 1526 402551 533000)) nil (26078 6517 470699 552000) 0 nil] [nil nil ((nil rear-nonsticky nil 2469 . 2470) (nil fontified nil 2461 . 2470) (2461 . 2470) (t 26078 1526 402551 533000)) ((#("token_exp" 0 8 (fontified nil) 8 9 (rear-nonsticky nil fontified nil)) . 2461) (undo-tree-id1316 . -8) (undo-tree-id1317 . -8) (undo-tree-id1318 . -8) (undo-tree-id1319 . -9) (undo-tree-id1320 . -8) (undo-tree-id1321 . -9) (undo-tree-id1322 . -8) (nil rear-nonsticky t 2469 . 2470)) (26078 6195 190031 144000) 0 nil])
([nil nil ((2588 . 2591) (2589 . 2592) (#("  " 0 2 (fontified t)) . 2589) (undo-tree-id1369 . -2) (undo-tree-id1370 . -2) 2591 (2589 . 2591) (2588 . 2590) (#("  " 0 2 (fontified nil)) . 2587) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) (2589 . 2591) (2586 . 2589) (2558 . 2572) (2558 . 2560) (#("s" 0 1 (fontified t)) . -2569) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (#("t" 0 1 (fontified t)) . -2570) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (#("d" 0 1 (fontified t)) . -2571) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (#(":" 0 1 (fontified t)) . -2572) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (#(":" 0 1 (fontified t)) . -2573) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) 2574 (2572 . 2574) (2569 . 2572) (#(";" 0 1 (fontified t)) . -2570) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) 2571 (2525 . 2526) (2518 . 2525) (#("t" 0 1 (fontified t)) . -2518) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (#("s" 0 1 (fontified t)) . -2519) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) 2520 (2513 . 2520) (2461 . 2475) (#("ge" 0 2 (fontified nil)) . 2461) (2461 . 2463) (#("get_token_next" 0 14 (fontified nil)) . -2461) (2461 . 2475) (#("get_tok" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t) 4 5 (face font-lock-constant-face fontified t) 5 6 (face font-lock-constant-face fontified t) 6 7 (face font-lock-constant-face fontified t)) . -2461) (undo-tree-id1389 . -7) (undo-tree-id1390 . -7) 2468 (2461 . 2468) (2461 . 2463) (2494 . 2497) (2495 . 2498) (#("  " 0 2 (fontified t)) . 2495) (undo-tree-id1391 . -2) (undo-tree-id1392 . -2) 2497 (2495 . 2497) (2494 . 2496) (2493 . 2495) (2493 . 2497) (2492 . 2492) (2492 . 2493) (#(";" 0 1 (fontified t)) . -2492) (undo-tree-id1393 . -1) 2493 (#("  " 0 2 (fontified nil)) . 2495) (2494 . 2495) (#("  " 0 2 (fontified t)) . 2458) 2463 (2462 . 2462) (2462 . 2463) (#("  " 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . 2462) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) 2464) nil (26078 6517 470694 254000) 0 nil])
nil
([nil nil ((2561 . 2563) (2556 . 2561) (#("token" 0 5 (fontified nil)) . -2556) (2556 . 2561) (2554 . 2556) (2543 . 2554) (#("to" 0 2 (fontified nil)) . 2543) (2543 . 2545) (#("token_class" 0 11 (fontified nil)) . -2543) (2543 . 2554) (#("to" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t)) . -2543) (undo-tree-id1323 . -2) (undo-tree-id1324 . -2) 2545 (2539 . 2545) (2535 . 2539) (2534 . 2535) (#("<" 0 1 (fontified t)) . -2534) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) 2535 (2534 . 2535) (#("<" 0 1 (fontified t)) . -2534) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (#("t" 0 1 (fontified t)) . -2535) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("o" 0 1 (fontified t)) . -2536) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) 2537 (2535 . 2537) (2534 . 2535) (2529 . 2534) (2526 . 2529) (2569 . 2572) (2570 . 2573) (#("  " 0 2 (fontified t)) . 2570) (undo-tree-id1333 . -2) (undo-tree-id1334 . -2) 2572 (2570 . 2572) (2569 . 2571) (2568 . 2570) (2568 . 2572) (2567 . 2567) (2567 . 2568) (2565 . 2567) (2551 . 2565) (#("ge" 0 2 (fontified nil)) . 2551) (2551 . 2553) (#("get_token_next" 0 14 (fontified nil)) . -2551) (2551 . 2565) (#("ge" 0 1 (fontified t) 1 2 (fontified t)) . -2551) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) 2553 (2552 . 2553) (#("w" 0 1 (fontified t)) . -2552) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) 2553 (2550 . 2553) (2548 . 2550) (#("~" 0 1 (fontified t)) . -2548) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 2549 (2548 . 2549) (2534 . 2548) (#("g" 0 1 (fontified nil)) . 2534) (2534 . 2535) (#("get_token_next" 0 14 (fontified nil)) . -2534) (2534 . 2548) (#("get_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2534) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) 2538 (2534 . 2538) (2533 . 2534) (#("    " 0 4 (fontified nil)) . 2533) (2532 . 2533) (#("

" 0 1 (fontified t) 1 2 (fontified t)) . 2597) (undo-tree-id1343 . -2) (undo-tree-id1344 . -2) 2599 (#("t" 0 1 (fontified t)) . -2599) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (#("o" 0 1 (fontified t)) . -2600) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (#("k" 0 1 (fontified t)) . -2601) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (#("e" 0 1 (fontified t)) . -2602) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (#("n" 0 1 (fontified t)) . -2603) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("_" 0 1 (fontified t)) . -2604) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (#("c" 0 1 (fontified t)) . -2605) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (#("l" 0 1 (fontified t)) . -2606) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (#("a" 0 1 (fontified t)) . -2607) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (#("s" 0 1 (fontified t)) . -2608) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#("s" 0 1 (fontified t)) . -2609) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) 2610 (2599 . 2610) (#("t" 0 1 (fontified nil)) . 2599) (2599 . 2600) (#("token_class" 0 11 (fontified nil)) . -2599) (2599 . 2610) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -2599) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) 2601 (2599 . 2601) (2598 . 2598) (2598 . 2599) (2597 . 2598) 2596) nil (26078 6517 475880 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2644 . 2645) (nil fontified nil 2562 . 2645) (2562 . 2645) 2561) nil (26078 6539 515740 687000) 0 nil] [nil nil ((nil rear-nonsticky nil 2562 . 2563) (nil fontified nil 2562 . 2563) (2562 . 2563) 2561) ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) rear-nonsticky nil fontified nil)) . 2562) (undo-tree-id1396 . 1) (undo-tree-id1397 . -1) (nil rear-nonsticky t 2562 . 2563)) (26078 6517 470611 52000) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . 2644) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1)) nil (26078 6539 515739 102000) 0 nil])
nil
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 2644) (undo-tree-id1398 . 1) (undo-tree-id1399 . 1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1)) nil (26078 6539 515735 630000) 0 nil])
([nil nil ((2644 . 2645)) nil (26078 6539 515720 345000) 0 nil])
([nil nil ((2762 . 2763) 2644) nil (26078 6539 515713 485000) 0 nil])
([nil nil ((2518 . 2519) (t 26078 6539 749096 107000)) nil (26078 6561 724697 236000) 0 nil])
([nil nil ((#("token_class::token" 0 11 (face font-lock-constant-face fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 18 (face font-lock-type-face fontified t)) . 2544) (undo-tree-id1407 . -17) (undo-tree-id1408 . -18) (undo-tree-id1409 . -18) (t 26078 6561 795762 236000)) nil (26078 6614 53296 453000) 0 nil])
([nil nil ((2544 . 2547)) nil (26078 6614 53293 139000) 0 nil])
([nil nil ((2544 . 2565) (#("le" 0 2 (fontified nil)) . 2544) (2544 . 2546) (#("lexer_mod::lexer_read" 0 21 (fontified nil)) . -2544) (2544 . 2565) (#("lex" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t)) . -2544) (undo-tree-id1405 . -3) (undo-tree-id1406 . -3) 2547) nil (26078 6614 53289 923000) 0 nil])
([nil nil ((2711 . 2712) (2708 . 2711) (2707 . 2708) (2695 . 2707) (t 26078 6614 65760 962000)) nil (26078 6719 499013 775000) 0 nil])
([nil nil ((2907 . 2908) (2897 . 2907) (2890 . 2897) (#("!" 0 1 (face font-lock-negation-char-face fontified t)) . -2855) (undo-tree-id1410 . -1) 2856 (2855 . 2856) (2883 . 2885) (#("v" 0 1 (fontified t)) . -2887) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (#("v" 0 1 (fontified t)) . -2888) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) 2889 (2883 . 2889) (2879 . 2883) (#("." 0 1 (fontified t)) . -2879) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (#("e" 0 1 (fontified t)) . -2880) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#("x" 0 1 (fontified t)) . -2881) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("p" 0 1 (fontified t)) . -2882) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#("_" 0 1 (fontified t)) . -2883) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) 2884 (2879 . 2884) (2855 . 2856) (2878 . 2879) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2878) (2878 . 2879) (#(")" 0 1 (fontified nil)) . -2877) (2877 . 2878) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -2877) (2877 . 2878) (2874 . 2875) (2873 . 2875) (2870 . 2873) (2869 . 2870) (2868 . 2869) (2864 . 2868) (2863 . 2865) (2859 . 2863) (2855 . 2859) (2812 . 2817) (2807 . 2812) (#("token" 0 5 (fontified nil)) . -2807) (2807 . 2812) (2805 . 2807) (2794 . 2805) (#("to" 0 2 (fontified nil)) . 2794) (2794 . 2796) (#("token_class" 0 11 (fontified nil)) . -2794) (2794 . 2805) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2794) (undo-tree-id1425 . -3) (undo-tree-id1426 . -3) 2797 (2794 . 2797) (2831 . 2833) (2830 . 2831) (2829 . 2830) (2824 . 2829) (2820 . 2823) (2819 . 2820) (2817 . 2819) (2810 . 2817) (2809 . 2810) (2808 . 2809) (2803 . 2808) (2800 . 2801) (2797 . 2800) (2795 . 2797) (#("i" 0 1 (fontified t)) . -2794) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#("n" 0 1 (fontified t)) . -2795) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2796) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 2797 (#(" " 0 1 (fontified t)) . 2797) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) 2798 (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2798) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (#("=" 0 1 (fontified t)) . -2799) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (#("0" 0 1 (fontified t)) . -2800) (undo-tree-id1439 . -1) 2801 (2803 . 2804) (#("M" 0 1 (fontified t)) . -2803) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) 2804 (2802 . 2804) (2801 . 2802) (2799 . 2801) (#(";" 0 1 (fontified t)) . -2799) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) 2800 (2799 . 2800) (2794 . 2799) (2793 . 2795) (2790 . 2793) (2530 . 2535) (2530 . 2531) (2533 . 2534) (2531 . 2533) (2530 . 2531) (2527 . 2530) (#("s" 0 1 (fontified t)) . -2777) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (#("t" 0 1 (fontified t)) . -2778) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 2779 (#("a" 0 1 (fontified t)) . -2779) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (#("t" 0 1 (fontified t)) . -2780) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (#("i" 0 1 (fontified t)) . -2781) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("c" 0 1 (c-type c-decl-id-start face font-lock-keyword-face fontified t)) . -2782) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) 2783 (#(" " 0 1 (fontified t)) . 2783) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) 2784 (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2784) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2785) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2786) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 2787 (#(" " 0 1 (fontified t)) . 2787) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) 2788 (#("i" 0 1 (fontified t)) . -2788) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#(";" 0 1 (fontified t)) . -2789) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) 2790 (2789 . 2790) (2783 . 2789) (2777 . 2783) (#("sta" 0 3 (fontified nil)) . 2777) (2777 . 2780) (#("static" 0 6 (fontified nil)) . -2777) (2777 . 2783) (#("stat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2777) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) 2781 (2777 . 2781) (t 26078 6719 662425 56000)) nil (26078 7200 915580 748000) 0 nil])
([nil nil ((2813 . 2814) (#("&" 0 1 (fontified t)) . 2813) (undo-tree-id2701 . -1)) nil (26078 7233 659306 837000) 0 nil] [nil nil ((#("t" 0 1 (fontified t)) . -2868) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (#("o" 0 1 (fontified t)) . -2869) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (#("k" 0 1 (fontified t)) . -2870) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#("=" 0 1 (fontified t)) . -2871) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (#("t" 0 1 (fontified t)) . -2872) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#("e" 0 1 (fontified t)) . -2873) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (#("s" 0 1 (fontified t)) . -2874) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (#("t" 0 1 (fontified t)) . -2875) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 2876 (2868 . 2876) (#("i" 0 1 (fontified t)) . -2868) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) 2869 (#("+" 0 1 (fontified t)) . -2869) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (#("+" 0 1 (fontified t)) . -2870) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) 2871 (2839 . 2840) (2838 . 2839) (2833 . 2838) (2832 . 2834) (2829 . 2832) (2828 . 2829) (2823 . 2828) (2822 . 2824) (2817 . 2822) (t 26078 6949 295752 796000)) ((#("=test" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 2817) (#("()" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 2822) (#("this-" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil)) . 2823) (#(">" 0 1 (fontified nil)) . 2828) (#("str" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 2829) (#("[]" 0 1 (face (rainbow-delimiters-depth-4-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-4-face) fontified nil)) . 2832) (#("this-" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil)) . 2833) (#(">" 0 1 (fontified nil)) . 2838) (#("i" 0 1 (fontified nil)) . 2839) (2868 . 2871) (#("tok=test" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 2868) (2868 . 2876)) (26078 7193 179732 796000) 0 nil])
([nil nil ((2843 . 2847) (#("r" 0 1 (fontified t)) . -2843) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) 2844 (2843 . 2844) (2843 . 2844) (2843 . 2844) (2875 . 2879) (2875 . 2876) (2875 . 2876)) nil (26078 7233 659300 288000) 0 nil])
([nil nil ((apply -9 2788 2941 undo--wrap-and-run-primitive-undo 2788 2941 ((2921 . 2924) (2875 . 2878) (2790 . 2793) 2931))) ((apply 9 2788 2932 undo--wrap-and-run-primitive-undo 2788 2932 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . 2790) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . 2875) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . 2921) 2786))) (26078 7191 819590 300000) 0 nil])
([nil nil ((2879 . 2880) (2874 . 2879) (2875 . 2877) (2874 . 2875) (2869 . 2873) (#("t" 0 1 (fontified t)) . -2870) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (#("e" 0 1 (fontified t)) . -2871) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (#("s" 0 1 (fontified t)) . -2872) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (#("t" 0 1 (fontified t)) . -2873) (undo-tree-id2708 . -1) 2874 (2817 . 2821) (t 26078 7233 672412 535000)) nil (26078 7300 846724 560000) 0 nil])
([nil nil ((2813 . 2814) (2808 . 2813) (2803 . 2808) (#("token" 0 5 (fontified nil)) . -2803) (2803 . 2808) (2788 . 2790) (#(" " 0 1 (fontified nil)) . 2788) (2801 . 2802) (2788 . 2789) (#("  " 0 2 (fontified nil)) . 2788) (2801 . 2802) (2790 . 2801) (#("to" 0 2 (fontified nil)) . 2790) (2790 . 2792) (#("token_class" 0 11 (fontified nil)) . -2790) (2790 . 2801) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2790) (undo-tree-id1472 . -3) (undo-tree-id1473 . -3) 2793 (2790 . 2793) (#("g" 0 1 (fontified t)) . -2790) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (#("e" 0 1 (fontified t)) . -2791) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) 2792 (#("t" 0 1 (fontified t)) . -2792) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (#("_" 0 1 (fontified t)) . -2793) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (#("t" 0 1 (fontified t)) . -2794) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (#("o" 0 1 (fontified t)) . -2795) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (#("k" 0 1 (fontified t)) . -2796) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (#("e" 0 1 (fontified t)) . -2797) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (#("n" 0 1 (fontified t)) . -2798) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#("_" 0 1 (fontified t)) . -2799) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (#("n" 0 1 (fontified t)) . -2800) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (#("e" 0 1 (fontified t)) . -2801) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("x" 0 1 (fontified t)) . -2802) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("t" 0 1 (fontified t)) . -2803) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) 2804 (2790 . 2804) (#("to" 0 2 (fontified nil)) . 2790) (2790 . 2792) (#("get_token_next" 0 14 (fontified nil)) . -2790) (2790 . 2804) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -2790) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) 2792 (2790 . 2792) (2787 . 2790) 2786) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 2787) (undo-tree-id1526 . -3) (undo-tree-id1527 . -3) (undo-tree-id1528 . -3) (undo-tree-id1529 . -3) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -3) (undo-tree-id1558 . -3) (undo-tree-id1559 . -3) (undo-tree-id1560 . -3) (undo-tree-id1561 . -3) (undo-tree-id1562 . -3) (undo-tree-id1563 . -3) (undo-tree-id1564 . -3) (undo-tree-id1565 . -3) (undo-tree-id1566 . -3) (undo-tree-id1567 . -3) (undo-tree-id1568 . -3) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -3) (undo-tree-id1573 . -3) (undo-tree-id1574 . -3) (undo-tree-id1575 . -3) (undo-tree-id1576 . -3) (undo-tree-id1577 . -3) (undo-tree-id1578 . -3) (undo-tree-id1579 . -3) (undo-tree-id1580 . -3) (undo-tree-id1581 . -3) (undo-tree-id1582 . -3) (undo-tree-id1583 . -3) (undo-tree-id1584 . -3) (undo-tree-id1585 . -3) (undo-tree-id1586 . -3) (undo-tree-id1587 . -3) (undo-tree-id1588 . -3) (undo-tree-id1589 . -3) (undo-tree-id1590 . -3) (undo-tree-id1591 . -3) (undo-tree-id1592 . -3) (undo-tree-id1593 . -3) (undo-tree-id1594 . -3) (undo-tree-id1595 . -3) (undo-tree-id1596 . -3) (undo-tree-id1597 . -3) (undo-tree-id1598 . -3) (undo-tree-id1599 . -3) (undo-tree-id1600 . -3) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1603 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1606 . -3) (undo-tree-id1607 . -3) (undo-tree-id1608 . -3) (undo-tree-id1609 . -3) (undo-tree-id1610 . -3) (undo-tree-id1611 . -3) (undo-tree-id1612 . -3) (undo-tree-id1613 . -3) (undo-tree-id1614 . -3) (undo-tree-id1615 . -3) (undo-tree-id1616 . -3) (undo-tree-id1617 . -3) (undo-tree-id1618 . -3) (undo-tree-id1619 . -3) (undo-tree-id1620 . -3) (undo-tree-id1621 . -3) (undo-tree-id1622 . -3) (undo-tree-id1623 . -3) (undo-tree-id1624 . -3) (undo-tree-id1625 . -3) (undo-tree-id1626 . -3) (undo-tree-id1627 . -3) (undo-tree-id1628 . -3) (undo-tree-id1629 . -3) (undo-tree-id1630 . -3) (undo-tree-id1631 . -3) (undo-tree-id1632 . -3) (undo-tree-id1633 . -3) (undo-tree-id1634 . -3) (undo-tree-id1635 . -3) (undo-tree-id1636 . -3) (undo-tree-id1637 . -3) (undo-tree-id1638 . -3) (undo-tree-id1639 . -3) (undo-tree-id1640 . -3) (undo-tree-id1641 . -3) (undo-tree-id1642 . -3) (undo-tree-id1643 . -3) (undo-tree-id1644 . -3) (undo-tree-id1645 . -3) (undo-tree-id1646 . -3) (undo-tree-id1647 . -3) (undo-tree-id1648 . -3) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (undo-tree-id1655 . -3) (undo-tree-id1656 . -3) (undo-tree-id1657 . -3) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (undo-tree-id1667 . -3) (undo-tree-id1668 . -3) (undo-tree-id1669 . -3) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -3) (undo-tree-id1675 . -3) (undo-tree-id1676 . -3) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (undo-tree-id1679 . -3) (undo-tree-id1680 . -3) (undo-tree-id1681 . -3) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -3) (undo-tree-id1685 . -3) (undo-tree-id1686 . -3) (undo-tree-id1687 . -3) (undo-tree-id1688 . -3) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -3) (undo-tree-id1700 . -3) (undo-tree-id1701 . -3) (undo-tree-id1702 . -3) (undo-tree-id1703 . -3) (undo-tree-id1704 . -3) (undo-tree-id1705 . -3) (undo-tree-id1706 . -3) (undo-tree-id1707 . -3) (undo-tree-id1708 . -3) (undo-tree-id1709 . -3) (undo-tree-id1710 . -3) (undo-tree-id1711 . -3) (undo-tree-id1712 . -3) (undo-tree-id1713 . -3) (undo-tree-id1714 . -3) (undo-tree-id1715 . -3) (undo-tree-id1716 . -3) (undo-tree-id1717 . -3) (undo-tree-id1718 . -3) (undo-tree-id1719 . -3) (undo-tree-id1720 . -3) (undo-tree-id1721 . -3) (undo-tree-id1722 . -3) (#("to" 0 1 (fontified nil) 1 2 (fontified nil)) . 2790) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (2790 . 2792) (#("get_token_next" 0 14 (fontified nil)) . 2790) (2790 . 2804) (#("to" 0 2 (fontified nil)) . 2790) (2790 . 2792) (#("get_token_next" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil)) . 2790) (undo-tree-id1725 . -14) (undo-tree-id1726 . -14) (2790 . 2804) (#("tok" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 2790) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (2790 . 2793) (#("token_class" 0 11 (fontified nil)) . 2790) (2790 . 2801) (#("to" 0 2 (fontified nil)) . 2790) (2790 . 2792) (#("token_class" 0 11 (face font-lock-constant-face fontified nil)) . 2790) (undo-tree-id1729 . -11) (undo-tree-id1730 . -11) (undo-tree-id1731 . -11) (undo-tree-id1732 . -11) (undo-tree-id1733 . -11) (undo-tree-id1734 . -11) (undo-tree-id1735 . -11) (undo-tree-id1736 . -11) (undo-tree-id1737 . -11) (undo-tree-id1738 . -11) (undo-tree-id1739 . -11) (undo-tree-id1740 . -11) (undo-tree-id1741 . -11) (undo-tree-id1742 . -11) (undo-tree-id1743 . -11) (undo-tree-id1744 . -11) (undo-tree-id1745 . -11) (undo-tree-id1746 . -11) (undo-tree-id1747 . -11) (undo-tree-id1748 . -11) (undo-tree-id1749 . -11) (undo-tree-id1750 . -11) (undo-tree-id1751 . -11) (undo-tree-id1752 . -11) (undo-tree-id1753 . -11) (undo-tree-id1754 . -11) (undo-tree-id1755 . -11) (undo-tree-id1756 . -11) (undo-tree-id1757 . -11) (undo-tree-id1758 . -11) (undo-tree-id1759 . -11) (undo-tree-id1760 . -11) (undo-tree-id1761 . -11) (undo-tree-id1762 . -11) (undo-tree-id1763 . -11) (undo-tree-id1764 . -11) (undo-tree-id1765 . -11) (undo-tree-id1766 . -11) (undo-tree-id1767 . -11) (undo-tree-id1768 . -11) (undo-tree-id1769 . -11) (undo-tree-id1770 . -11) (undo-tree-id1771 . -11) (undo-tree-id1772 . -11) (undo-tree-id1773 . -11) (undo-tree-id1774 . -11) (undo-tree-id1775 . -11) (undo-tree-id1776 . -11) (undo-tree-id1777 . -11) (undo-tree-id1778 . -11) (undo-tree-id1779 . -11) (undo-tree-id1780 . -11) (undo-tree-id1781 . -11) (undo-tree-id1782 . -11) (undo-tree-id1783 . -11) (undo-tree-id1784 . -11) (undo-tree-id1785 . -11) (undo-tree-id1786 . -11) (undo-tree-id1787 . -11) (undo-tree-id1788 . -11) (undo-tree-id1789 . -11) (undo-tree-id1790 . -11) (undo-tree-id1791 . -11) (undo-tree-id1792 . -11) (undo-tree-id1793 . -11) (undo-tree-id1794 . -11) (undo-tree-id1795 . -11) (undo-tree-id1796 . -11) (undo-tree-id1797 . -11) (undo-tree-id1798 . -11) (undo-tree-id1799 . -11) (undo-tree-id1800 . -11) (undo-tree-id1801 . -11) (undo-tree-id1802 . -11) (undo-tree-id1803 . -11) (undo-tree-id1804 . -11) (undo-tree-id1805 . -11) (undo-tree-id1806 . -11) (undo-tree-id1807 . -11) (undo-tree-id1808 . -11) (undo-tree-id1809 . -11) (undo-tree-id1810 . -11) (undo-tree-id1811 . -11) (undo-tree-id1812 . -11) (undo-tree-id1813 . -11) (undo-tree-id1814 . -11) (undo-tree-id1815 . -11) (undo-tree-id1816 . -11) (undo-tree-id1817 . -11) (undo-tree-id1818 . -11) (undo-tree-id1819 . -11) (undo-tree-id1820 . -11) (undo-tree-id1821 . -11) (undo-tree-id1822 . -11) (undo-tree-id1823 . -11) (undo-tree-id1824 . -11) (undo-tree-id1825 . -11) (undo-tree-id1826 . -11) (undo-tree-id1827 . -11) (undo-tree-id1828 . -11) (undo-tree-id1829 . -11) (undo-tree-id1830 . -11) (undo-tree-id1831 . -11) (undo-tree-id1832 . -11) (undo-tree-id1833 . -11) (undo-tree-id1834 . -11) (undo-tree-id1835 . -11) (undo-tree-id1836 . -11) (undo-tree-id1837 . -11) (undo-tree-id1838 . -11) (undo-tree-id1839 . -11) (undo-tree-id1840 . -11) (undo-tree-id1841 . -11) (undo-tree-id1842 . -11) (undo-tree-id1843 . -11) (undo-tree-id1844 . -11) (undo-tree-id1845 . -11) (undo-tree-id1846 . -11) (undo-tree-id1847 . -11) (undo-tree-id1848 . -11) (undo-tree-id1849 . -11) (undo-tree-id1850 . -11) (undo-tree-id1851 . -11) (undo-tree-id1852 . -11) (undo-tree-id1853 . -11) (undo-tree-id1854 . -11) (undo-tree-id1855 . -11) (undo-tree-id1856 . -11) (undo-tree-id1857 . -11) (undo-tree-id1858 . -11) (undo-tree-id1859 . -11) (undo-tree-id1860 . -11) (undo-tree-id1861 . -11) (undo-tree-id1862 . -11) (undo-tree-id1863 . -11) (undo-tree-id1864 . -11) (undo-tree-id1865 . -11) (undo-tree-id1866 . -11) (undo-tree-id1867 . -11) (undo-tree-id1868 . -11) (undo-tree-id1869 . -11) (undo-tree-id1870 . -11) (undo-tree-id1871 . -11) (undo-tree-id1872 . -11) (undo-tree-id1873 . -11) (undo-tree-id1874 . -11) (undo-tree-id1875 . -11) (undo-tree-id1876 . -11) (undo-tree-id1877 . -11) (undo-tree-id1878 . -11) (undo-tree-id1879 . -11) (undo-tree-id1880 . -11) (undo-tree-id1881 . -11) (undo-tree-id1882 . -11) (undo-tree-id1883 . -11) (undo-tree-id1884 . -11) (undo-tree-id1885 . -11) (undo-tree-id1886 . -11) (undo-tree-id1887 . -11) (undo-tree-id1888 . -11) (undo-tree-id1889 . -11) (undo-tree-id1890 . -11) (undo-tree-id1891 . -11) (undo-tree-id1892 . -11) (undo-tree-id1893 . -11) (undo-tree-id1894 . -11) (undo-tree-id1895 . -11) (undo-tree-id1896 . -11) (undo-tree-id1897 . -11) (undo-tree-id1898 . -11) (undo-tree-id1899 . -11) (undo-tree-id1900 . -11) (undo-tree-id1901 . -11) (undo-tree-id1902 . -11) (undo-tree-id1903 . -11) (undo-tree-id1904 . -11) (undo-tree-id1905 . -11) (undo-tree-id1906 . -11) (undo-tree-id1907 . -11) (undo-tree-id1908 . -11) (undo-tree-id1909 . -11) (undo-tree-id1910 . -11) (undo-tree-id1911 . -11) (undo-tree-id1912 . -11) (undo-tree-id1913 . -11) (undo-tree-id1914 . -11) (undo-tree-id1915 . -11) (undo-tree-id1916 . -11) (undo-tree-id1917 . -11) (undo-tree-id1918 . -11) (undo-tree-id1919 . -11) (undo-tree-id1920 . -11) (undo-tree-id1921 . -11) (undo-tree-id1922 . -11) (#(":" 0 1 (fontified nil)) . 2801) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (2788 . 2790) (#(" " 0 1 (fontified nil)) . 2788) (#(":" 0 1 (fontified nil)) . 2801) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (2788 . 2789) (#("  " 0 2 (fontified nil)) . 2788) (#("token" 0 5 (fontified nil)) . 2803) (2803 . 2808) (#("token" 0 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil)) . 2803) (undo-tree-id2311 . -5) (undo-tree-id2312 . -5) (undo-tree-id2313 . -5) (undo-tree-id2314 . -5) (undo-tree-id2315 . -5) (undo-tree-id2316 . -5) (undo-tree-id2317 . -5) (undo-tree-id2318 . -5) (undo-tree-id2319 . -5) (undo-tree-id2320 . -5) (undo-tree-id2321 . -5) (undo-tree-id2322 . -5) (undo-tree-id2323 . -5) (undo-tree-id2324 . -5) (undo-tree-id2325 . -5) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5) (undo-tree-id2329 . -5) (undo-tree-id2330 . -5) (undo-tree-id2331 . -5) (undo-tree-id2332 . -5) (undo-tree-id2333 . -5) (undo-tree-id2334 . -5) (undo-tree-id2335 . -5) (undo-tree-id2336 . -5) (undo-tree-id2337 . -5) (undo-tree-id2338 . -5) (undo-tree-id2339 . -5) (undo-tree-id2340 . -5) (undo-tree-id2341 . -5) (undo-tree-id2342 . -5) (undo-tree-id2343 . -5) (undo-tree-id2344 . -5) (undo-tree-id2345 . -5) (undo-tree-id2346 . -5) (undo-tree-id2347 . -5) (undo-tree-id2348 . -5) (undo-tree-id2349 . -5) (undo-tree-id2350 . -5) (undo-tree-id2351 . -5) (undo-tree-id2352 . -5) (undo-tree-id2353 . -5) (undo-tree-id2354 . -5) (undo-tree-id2355 . -5) (undo-tree-id2356 . -5) (undo-tree-id2357 . -5) (undo-tree-id2358 . -5) (undo-tree-id2359 . -5) (undo-tree-id2360 . -5) (undo-tree-id2361 . -5) (undo-tree-id2362 . -5) (undo-tree-id2363 . -5) (undo-tree-id2364 . -5) (undo-tree-id2365 . -5) (undo-tree-id2366 . -5) (undo-tree-id2367 . -5) (undo-tree-id2368 . -5) (undo-tree-id2369 . -5) (undo-tree-id2370 . -5) (undo-tree-id2371 . -5) (undo-tree-id2372 . -5) (undo-tree-id2373 . -5) (undo-tree-id2374 . -5) (undo-tree-id2375 . -5) (undo-tree-id2376 . -5) (undo-tree-id2377 . -5) (undo-tree-id2378 . -5) (undo-tree-id2379 . -5) (undo-tree-id2380 . -5) (undo-tree-id2381 . -5) (undo-tree-id2382 . -5) (undo-tree-id2383 . -5) (undo-tree-id2384 . -5) (undo-tree-id2385 . -5) (undo-tree-id2386 . -5) (undo-tree-id2387 . -5) (undo-tree-id2388 . -5) (undo-tree-id2389 . -5) (undo-tree-id2390 . -5) (undo-tree-id2391 . -5) (undo-tree-id2392 . -5) (undo-tree-id2393 . -5) (undo-tree-id2394 . -5) (undo-tree-id2395 . -5) (undo-tree-id2396 . -5) (undo-tree-id2397 . -5) (undo-tree-id2398 . -5) (undo-tree-id2399 . -5) (undo-tree-id2400 . -5) (undo-tree-id2401 . -5) (undo-tree-id2402 . -5) (undo-tree-id2403 . -5) (undo-tree-id2404 . -5) (undo-tree-id2405 . -5) (undo-tree-id2406 . -5) (undo-tree-id2407 . -5) (undo-tree-id2408 . -5) (undo-tree-id2409 . -5) (undo-tree-id2410 . -5) (undo-tree-id2411 . -5) (undo-tree-id2412 . -5) (undo-tree-id2413 . -5) (undo-tree-id2414 . -5) (undo-tree-id2415 . -5) (undo-tree-id2416 . -5) (undo-tree-id2417 . -5) (undo-tree-id2418 . -5) (undo-tree-id2419 . -5) (undo-tree-id2420 . -5) (undo-tree-id2421 . -5) (undo-tree-id2422 . -5) (undo-tree-id2423 . -5) (undo-tree-id2424 . -5) (undo-tree-id2425 . -5) (undo-tree-id2426 . -5) (undo-tree-id2427 . -5) (undo-tree-id2428 . -5) (undo-tree-id2429 . -5) (undo-tree-id2430 . -5) (undo-tree-id2431 . -5) (undo-tree-id2432 . -5) (undo-tree-id2433 . -5) (undo-tree-id2434 . -5) (undo-tree-id2435 . -5) (undo-tree-id2436 . -5) (undo-tree-id2437 . -5) (undo-tree-id2438 . -5) (undo-tree-id2439 . -5) (undo-tree-id2440 . -5) (undo-tree-id2441 . -5) (undo-tree-id2442 . -5) (undo-tree-id2443 . -5) (undo-tree-id2444 . -5) (undo-tree-id2445 . -5) (undo-tree-id2446 . -5) (undo-tree-id2447 . -5) (undo-tree-id2448 . -5) (undo-tree-id2449 . -5) (undo-tree-id2450 . -5) (undo-tree-id2451 . -5) (undo-tree-id2452 . -5) (undo-tree-id2453 . -5) (undo-tree-id2454 . -5) (undo-tree-id2455 . -5) (undo-tree-id2456 . -5) (undo-tree-id2457 . -5) (undo-tree-id2458 . -5) (undo-tree-id2459 . -5) (undo-tree-id2460 . -5) (undo-tree-id2461 . -5) (undo-tree-id2462 . -5) (undo-tree-id2463 . -5) (undo-tree-id2464 . -5) (undo-tree-id2465 . -5) (undo-tree-id2466 . -5) (undo-tree-id2467 . -5) (undo-tree-id2468 . -5) (undo-tree-id2469 . -5) (undo-tree-id2470 . -5) (undo-tree-id2471 . -5) (undo-tree-id2472 . -5) (undo-tree-id2473 . -5) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -5) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (undo-tree-id2492 . -5) (undo-tree-id2493 . -5) (undo-tree-id2494 . -5) (undo-tree-id2495 . -5) (undo-tree-id2496 . -5) (undo-tree-id2497 . -5) (undo-tree-id2498 . -5) (undo-tree-id2499 . -5) (undo-tree-id2500 . -5) (undo-tree-id2501 . -5) (undo-tree-id2502 . -5) (undo-tree-id2503 . -5) (undo-tree-id2504 . -5) (#(" &tok" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-variable-name-face fontified nil) 3 4 (face font-lock-variable-name-face fontified nil) 4 5 (face font-lock-variable-name-face fontified nil)) . 2808) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (#(";" 0 1 (fontified t)) . 2813) (t 26078 7081 225749 583000)) (26078 7191 44659 662000) 0 nil])
([nil nil ((2756 . 2757) (#("&" 0 1 (fontified t)) . 2756) (undo-tree-id2709 . -1) (t 26078 7300 965744 229000)) nil (26078 7322 76204 31000) 0 nil])
([nil nil ((2809 . 2810) (#("&" 0 1 (fontified t)) . 2809) (t 26078 7081 225749 583000)) ((2809 . 2810) (#("*" 0 1 (fontified t)) . 2809)) (26078 7190 909738 198000) 0 nil])
([nil nil ((2874 . 2875) (t 26078 7322 85743 714000)) nil (26078 7409 936080 408000) 0 nil])
([nil nil ((apply 9 2815 2958 undo--wrap-and-run-primitive-undo 2815 2958 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2942) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2899) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2817) 2967))) ((apply -9 2815 2967 undo--wrap-and-run-primitive-undo 2815 2967 ((2817 . 2820) (2899 . 2902) (2942 . 2945) 2840))) (26078 7190 904640 497000) 0 nil])
([nil nil ((2933 . 2937) (t 26078 7409 949074 907000)) nil (26078 7427 773368 979000) 0 nil])
nil
([nil nil ((2936 . 2937) (#("t" 0 1 (fontified t)) . 2936) (undo-tree-id2710 . -1)) nil (26078 7427 773365 698000) 0 nil])
([nil nil ((2875 . 2876) (t 26078 7427 785741 139000)) nil (26078 7494 638880 482000) 0 nil])
([nil nil ((2886 . 2887) (#(")" 0 1 (fontified nil)) . -2886) (2886 . 2887) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -2877) (undo-tree-id2711 . -1) (undo-tree-id2712 . 1) (undo-tree-id2713 . -1) 2878 (2876 . 2878) (t 26078 7494 649072 844000)) nil (26078 7501 246099 61000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 2875) (t 26078 7501 259072 683000)) nil (26078 7510 364988 616000) 0 nil])
([nil nil ((2876 . 2877)) nil (26078 7510 364983 748000) 0 nil])
([nil nil ((2925 . 2928) (2924 . 2925) (2919 . 2924) (#("r" 0 1 (fontified t)) . -2919) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) 2920 (2919 . 2920) (2918 . 2920) (2915 . 2918) (2914 . 2915) (2909 . 2914) (2829 . 2831) (2906 . 2907) (t 26078 7510 382405 794000)) nil (26078 7551 664652 37000) 0 nil])
([nil nil ((2932 . 2933) (2931 . 2932) (#("." 0 1 (fontified t)) . 2931) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (t 26078 7551 689071 455000)) nil (26078 7579 85830 883000) 0 nil])
([nil nil ((apply 3 735 746 undo--wrap-and-run-primitive-undo 735 746 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -739) 749)) (t 26078 7579 102404 120000)) nil (26078 9250 356896 304000) 0 nil])
([nil nil ((754 . 755) (750 . 754) (745 . 750) 742) nil (26078 9250 356891 997000) 0 nil])
([nil nil ((apply -3 746 776 undo--wrap-and-run-primitive-undo 746 776 ((750 . 753) 756)) (t 26078 9250 372363 404000)) nil (26078 9344 236879 342000) 0 nil])
([nil nil (2965) nil (26078 9686 699432 221000) 0 nil])
([nil nil ((2961 . 2963) (2976 . 2977) (#("}" 0 1 (fontified nil)) . -2976) (2976 . 2977) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2961) (undo-tree-id2774 . -1) (undo-tree-id2775 . 1) (undo-tree-id2776 . -1) 2962 (2960 . 2962) (t 26078 9344 249027 784000)) nil (26078 9686 699430 557000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2956)) nil (26078 9686 699425 274000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2956) (undo-tree-id2773 . 1)) nil (26078 9686 699423 753000) 0 nil])
([nil nil ((2969 . 2970) (2966 . 2969) (2960 . 2966) (2960 . 2967) (#("      " 0 6 (fontified t)) . 2960) (undo-tree-id2771 . -6) (undo-tree-id2772 . -6) 2966 (2960 . 2966) (#("	" 0 1 (fontified t)) . 2960) (2976 . 2981)) nil (26078 9686 699419 331000) 0 nil])
([nil nil ((apply -3 2960 2996 undo--wrap-and-run-primitive-undo 2960 2996 ((2966 . 2969) 2971)) (t 26078 9686 712352 775000)) nil (26078 9751 528676 444000) 0 nil])
([nil nil ((apply 3 2960 2971 undo--wrap-and-run-primitive-undo 2960 2971 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t)) . -2966) 2974)) (t 26078 9751 545684 526000)) nil (26078 9769 617668 231000) 0 nil])
([nil nil ((2966 . 2970) (2966 . 2967) (2966 . 2967)) nil (26078 9769 617664 348000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -3062) (3011 . 3063) (t 26078 9769 632350 730000)) nil (26078 56205 456283 419000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-constant-face)) . -3008) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 3009 (3008 . 3009) (3007 . 3007) (3007 . 3008) (#("
  
" 0 4 (fontified t)) . -3005) (undo-tree-id68 . -4) (undo-tree-id69 . -4) 3009 (3010 . 3010) (3010 . 3011) (#("

  " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . 3010) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -2) 3014) nil (26078 56205 456281 709000) 0 nil])
([nil nil ((3105 . 3110) (3101 . 3104) (3100 . 3101) (3098 . 3100) (3095 . 3098) (3090 . 3095) (3089 . 3090) (#("C" 0 1 (fontified t)) . -3089) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 3090 (3089 . 3090) (#("V" 0 1 (fontified t)) . -3089) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 3090 (3088 . 3090) (3087 . 3088) (3083 . 3087) (#("t" 0 1 (fontified t)) . -3083) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 3084 (3080 . 3084) (3079 . 3081) (3076 . 3079) (#("i" 0 1 (fontified t)) . -3076) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 3077 (3076 . 3077) (3073 . 3076) (3074 . 3077) (#("  " 0 2 (fontified t)) . 3074) (undo-tree-id60 . -2) (undo-tree-id61 . -2) 3076 (3074 . 3076) (3073 . 3075) (#("  " 0 2 (fontified nil)) . 3072) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (3074 . 3076) (3071 . 3074) (#(";" 0 1 (fontified t)) . -3071) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 3072 (3030 . 3042) (3028 . 3030) (3028 . 3030)) nil (26078 56205 456275 503000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3114 . 3115) (#("
" 0 1 (fontified nil)) . -3194) (3110 . 3195) 3109) nil (26078 56205 456261 644000) 0 nil])
([nil nil ((3188 . 3189) (3186 . 3188) (#("p" 0 1 (fontified t)) . -3186) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("p" 0 1 (fontified t)) . -3187) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t)) . -3188) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 3189 (3178 . 3189) (3174 . 3178) (3167 . 3174) (#("t" 0 1 (fontified t)) . -3145) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("h" 0 1 (fontified t)) . -3146) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("i" 0 1 (fontified t)) . -3147) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("s" 0 1 (fontified t)) . -3148) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("-" 0 1 (fontified t)) . -3149) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(">" 0 1 (fontified t)) . -3150) (undo-tree-id16 . -1) 3151 (#("t" 0 1 (fontified t)) . -3155) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("h" 0 1 (fontified t)) . -3156) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("i" 0 1 (fontified t)) . -3157) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("s" 0 1 (fontified t)) . -3158) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("-" 0 1 (fontified t)) . -3159) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#(">" 0 1 (fontified t)) . -3160) (undo-tree-id27 . -1) 3161 (3089 . 3091) (#("t" 0 1 (fontified t)) . -3136) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("h" 0 1 (fontified t)) . -3137) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("i" 0 1 (fontified t)) . -3138) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("s" 0 1 (fontified t)) . -3139) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("-" 0 1 (fontified t)) . -3140) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#(">" 0 1 (fontified t)) . -3141) (undo-tree-id38 . -1) 3142 (#("t" 0 1 (fontified t)) . -3146) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("h" 0 1 (fontified t)) . -3147) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("i" 0 1 (fontified t)) . -3148) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (fontified t)) . -3149) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("-" 0 1 (fontified t)) . -3150) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(">" 0 1 (fontified t)) . -3151) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 3152 (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 3105) (undo-tree-id51 . -5) 3110) nil (26078 56205 456255 847000) 0 nil])
([nil nil ((3195 . 3196) 3188) nil (26078 56205 456173 344000) 0 nil])
([nil nil ((3103 . 3104) (3096 . 3103) (3095 . 3096) (3094 . 3095) (3076 . 3094) (#("to" 0 2 (fontified nil)) . 3076) (3076 . 3078) (#("token_class::token" 0 18 (fontified nil)) . -3076) (3076 . 3094) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3076) (undo-tree-id73 . -3) 3079 (3076 . 3079) (3073 . 3076) (t 26078 56205 463305 866000) 3072) nil (26078 56238 648109 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2678 . 2679) (#("
" 0 1 (fontified nil)) . -2726) (2679 . 2727) (nil face (rainbow-delimiters-depth-1-face) 2678 . 2679) (nil fontified t 2678 . 2679) (2678 . 2679) 2677 (t 26078 56238 683305 55000)) nil (26079 26082 583840 588000) 0 nil])
([nil nil ((2765 . 2766) (2760 . 2765) (2759 . 2760) (2754 . 2759) (2746 . 2748) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -2746) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 2747 (2746 . 2747) (2745 . 2746) (2744 . 2745) (33 . 62) (nil fontified nil 2711 . 2715) (nil face (rainbow-delimiters-depth-1-face) 2711 . 2715) (2711 . 2715) (#("FI" 0 2 (fontified nil)) . 2711) (nil fontified nil 2711 . 2713) (nil face (rainbow-delimiters-depth-1-face) 2711 . 2713) (2711 . 2713) (#("FILE" 0 4 (fontified nil)) . -2711) (nil fontified nil 2711 . 2715) (nil face (rainbow-delimiters-depth-1-face) 2711 . 2715) (2711 . 2715) (#("FI" 0 1 (fontified t) 1 2 (fontified t)) . -2711) (undo-tree-id76 . -2) (undo-tree-id77 . -2) 2713 (2711 . 2713) (#("s" 0 1 (fontified t)) . -2711) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("t" 0 1 (fontified t)) . -2712) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("d" 0 1 (fontified t)) . -2713) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(":" 0 1 (fontified t)) . -2714) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(":" 0 1 (fontified t)) . -2715) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("s" 0 1 (fontified t)) . -2716) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("t" 0 1 (fontified t)) . -2717) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("r" 0 1 (fontified t)) . -2718) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("i" 0 1 (fontified t)) . -2719) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("n" 0 1 (fontified t)) . -2720) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("g" 0 1 (fontified t face font-lock-type-face)) . -2721) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 2722 (#(" " 0 1 (fontified t)) . 2722) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 2723 (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -2723) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2724) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -2725) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 2726 (2729 . 2732) (2730 . 2733) (#("  " 0 2 (fontified t)) . 2730) (undo-tree-id108 . -2) (undo-tree-id109 . -2) 2732 (2730 . 2732) (2729 . 2731) (2728 . 2730) (2728 . 2732) (2727 . 2727) (2727 . 2728) (2679 . 2679) (2679 . 2680)) nil (26079 26136 446077 622000) 0 nil])
([nil nil ((2566 . 2567) (2561 . 2566) (2558 . 2561) (#("f" 0 1 (fontified t)) . -2558) (undo-tree-id418 . -1) (undo-tree-id419 . -1) 2559 (2558 . 2559) (2557 . 2558) (2553 . 2557) (2552 . 2553) (2549 . 2552) (t 26079 26082 595773 619000) 2548) nil (26079 26229 453417 930000) 0 nil] [nil nil ((2549 . 2552) (t 26079 26082 595773 619000) 2548) ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 2549) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -1) (undo-tree-id417 . -3)) (26079 26135 448149 677000) 0 nil])
([nil nil ((2785 . 2786) (2781 . 2785) (2778 . 2781) (2777 . 2778) (2772 . 2777) (2769 . 2772) 2768) nil (26079 26229 453402 825000) 0 nil])
([nil nil ((2552 . 2557)) ((#("this-" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 2552) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -5) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -5) (undo-tree-id379 . -5) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5)) (26079 26134 849348 276000) 0 nil])
([nil nil ((3118 . 3121) (#("      " 0 6 (fontified t)) . 3118) 3127 (3115 . 3116) (#("    " 0 4 (fontified t)) . 3115) 3120 (3029 . 3035) (#("    " 0 4 (fontified t)) . 3029) 3037 (2955 . 2959) (#("  " 0 2 (fontified t)) . 2955) 2961 (2936 . 2937) (2936 . 2937) (2951 . 2952) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -2951) (2951 . 2952) (#(")" 0 1 (fontified nil)) . -2950) (2950 . 2951) (#(")" 0 1 (fontified nil)) . -2950) (2950 . 2951) (2943 . 2950) (2942 . 2943) (2941 . 2942) (2936 . 2941) (2935 . 2937) (2933 . 2935) (2931 . 2933) (2931 . 2932) 2946 (t 26079 26231 432436 610000)) nil (26079 26295 752706 430000) 0 nil])
([nil nil ((2557 . 2558)) ((#(">" 0 1 (fontified t)) . 2557) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1)) (26079 26134 363801 691000) 0 nil])
([nil nil ((3115 . 3120) (3114 . 3115) (#("         " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 3114) (undo-tree-id420 . -9) (undo-tree-id421 . -9) 3123 (3114 . 3123) (#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 3114) (undo-tree-id422 . 1) (undo-tree-id423 . -1) (undo-tree-id424 . -2) 3116) nil (26079 26295 752702 654000) 0 nil])
([nil nil ((2558 . 2560)) ((#("fp" 0 1 (fontified t) 1 2 (fontified t)) . 2558) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2)) (26079 26134 360975 984000) 0 nil])
([nil nil ((3151 . 3157) (#("    " 0 4 (fontified t)) . 3151) 3156 (3134 . 3135) (#("      " 0 6 (fontified t)) . 3134) 3151 (3122 . 3123) (#("	  " 0 3 (fontified t)) . 3122) 3134) nil (26079 26295 752688 637000) 0 nil])
nil
([nil nil ((3158 . 3161) (t 26079 26295 762435 35000) 3157) nil (26079 26313 297062 993000) 0 nil])
([nil nil ((3161 . 3165)) nil (26079 26316 488587 780000) 0 nil])
([nil nil ((3188 . 3194) (3187 . 3189) (3182 . 3186) (3182 . 3184) (3182 . 3187) (#("    " 0 4 (fontified t)) . 3182) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) 3186 (3181 . 3186) (3177 . 3179) (3172 . 3177) (3171 . 3172) (3166 . 3171) (3165 . 3167) (3164 . 3165) (3163 . 3165) (3161 . 3163) (#("e" 0 1 (fontified t)) . -3161) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("l" 0 1 (fontified t)) . -3162) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("s" 0 1 (fontified t)) . -3163) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -3164) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) 3165) nil (26079 26478 645215 413000) 0 nil] [nil nil ((3169 . 3171) (#(" x" 0 2 (fontified nil)) . -3169) (3159 . 3165) (#("  " 0 2 (fontified nil)) . 3159) (3165 . 3167) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 3165) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (3161 . 3165) 3165) ((#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 3161) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (3165 . 3169) (#(" x" 0 2 (fontified nil)) . 3165) (3159 . 3161) (#("      " 0 6 (fontified nil)) . 3159) (3169 . 3171) (#("
	" 0 2 (fontified t)) . 3169) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -2)) (26079 26316 477738 366000) 0 nil] [nil nil ((62 . 87) (3161 . 3161) (3161 . 3187) (#("el" 0 2 (fontified nil)) . 3161) (3161 . 3163) (#("testing::TestEventListener" 0 26 (fontified nil)) . -3161) (3161 . 3187) (#("else" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face)) . -3161) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) 3165) ((3161 . 3165) (#("testing::TestEventListener" 0 26 (fontified nil)) . 3161) (3161 . 3187) (#("el" 0 2 (fontified nil)) . 3161) (3161 . 3163) (#("testing::TestEventListener" 0 7 (fontified t face font-lock-constant-face) 7 26 (fontified t)) . 3161) (undo-tree-id534 . -26) (undo-tree-id535 . -26) (undo-tree-id536 . -26) (#("#include <gtest/gtest.h>
" 0 1 (c-is-sws t c-in-sws t) 1 25 (c-in-sws t)) . 62) (undo-tree-id537 . -24)) (26079 26313 297056 338000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3183) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1)) nil (26079 26478 645206 321000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t)) . 3183) (undo-tree-id970 . 1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1)) nil (26079 26478 645184 522000) 0 nil])
([nil nil ((3193 . 3195) 3194) nil (26079 26478 644652 65000) 0 nil])
([nil nil ((3185 . 3190)) nil (26079 26478 644651 573000) 0 nil])
([nil nil ((3158 . 3161)) nil (26079 26478 644651 166000) 0 nil])
([nil nil ((3193 . 3196)) nil (26079 26478 644650 741000) 0 nil])
([nil nil ((3196 . 3198)) nil (26079 26478 644650 220000) 0 nil])
([nil nil ((3197 . 3200)) nil (26079 26478 644649 742000) 0 nil])
([nil nil ((3197 . 3208) (#("to" 0 2 (fontified nil)) . 3197) (3197 . 3199) (#("token_class" 0 11 (fontified nil)) . -3197) (3197 . 3208) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3197) (undo-tree-id968 . -3) (undo-tree-id969 . -3) 3200) nil (26079 26478 644648 841000) 0 nil])
([nil nil ((3208 . 3210)) nil (26079 26478 644646 595000) 0 nil])
([nil nil ((3210 . 3213)) nil (26079 26478 644646 151000) 0 nil])
([nil nil ((3210 . 3215) (#("token" 0 5 (fontified nil)) . -3210) (3210 . 3215) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3210) (undo-tree-id966 . -3) (undo-tree-id967 . -3) 3213) nil (26079 26478 644645 159000) 0 nil])
([nil nil ((3215 . 3216)) nil (26079 26478 644642 851000) 0 nil])
([nil nil ((3216 . 3217)) nil (26079 26478 644642 442000) 0 nil])
([nil nil ((3217 . 3224)) nil (26079 26478 644641 853000) 0 nil])
([nil nil ((3224 . 3225)) nil (26079 26478 644641 347000) 0 nil])
([nil nil ((3225 . 3229)) nil (26079 26478 644640 695000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3225) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (#("h" 0 1 (fontified t)) . -3226) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (#("i" 0 1 (fontified t)) . -3227) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -3228) (undo-tree-id964 . -1) (undo-tree-id965 . -1) 3229) nil (26079 26478 644639 386000) 0 nil])
([nil nil ((3188 . 3193)) nil (26079 26478 644632 896000) 0 nil])
([nil nil ((3193 . 3198)) nil (26079 26478 644632 294000) 0 nil])
([nil nil ((3198 . 3199)) nil (26079 26478 644631 746000) 0 nil])
([nil nil ((3236 . 3238)) nil (26079 26478 644631 226000) 0 nil])
([nil nil ((3238 . 3239)) nil (26079 26478 644630 708000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -3237) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#("<" 0 1 (fontified t)) . -3238) (undo-tree-id956 . -1) (undo-tree-id957 . -1) 3239) nil (26079 26478 644629 632000) 0 nil])
([nil nil ((3237 . 3238)) nil (26079 26478 644626 646000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -3227) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -3228) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -3229) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#("k" 0 1 (fontified t face font-lock-variable-name-face)) . -3230) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -3231) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -3232) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -3233) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -3234) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#(";" 0 1 (fontified t)) . -3235) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (#("i" 0 1 (fontified t)) . -3236) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (#("<" 0 1 (fontified t)) . -3237) (undo-tree-id952 . -1) (undo-tree-id953 . -1) 3238) nil (26079 26478 644624 236000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3226) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 3227) nil (26079 26478 644608 850000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3208) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (#("o" 0 1 (fontified t)) . -3209) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (#("k" 0 1 (fontified t)) . -3210) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (#("e" 0 1 (fontified t)) . -3211) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("n" 0 1 (fontified t)) . -3212) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (#("_" 0 1 (fontified t)) . -3213) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (#("c" 0 1 (fontified t)) . -3214) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (#("l" 0 1 (fontified t)) . -3215) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (#("a" 0 1 (fontified t)) . -3216) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (#("s" 0 1 (fontified t)) . -3217) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (#("s" 0 1 (fontified t)) . -3218) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (#(":" 0 1 (fontified t)) . -3219) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#(":" 0 1 (fontified t)) . -3220) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (#("t" 0 1 (fontified t)) . -3221) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (#("o" 0 1 (fontified t)) . -3222) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (#("k" 0 1 (fontified t)) . -3223) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (#("e" 0 1 (fontified t)) . -3224) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (#("n" 0 1 (fontified t)) . -3225) (undo-tree-id928 . -1) (undo-tree-id929 . -1) 3226) nil (26079 26478 644604 110000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -3207) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 3208)) nil (26079 26478 644576 841000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3204) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (#("o" 0 1 (fontified t)) . -3205) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -3206) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 3207) nil (26079 26478 644574 530000) 0 nil])
([nil nil ((3204 . 3207)) nil (26079 26478 644569 600000) 0 nil])
([nil nil ((3204 . 3215) (#("to" 0 2 (fontified nil)) . 3204) (3204 . 3206) (#("token_class" 0 11 (fontified nil)) . -3204) (3204 . 3215) (#("tok" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3204) (undo-tree-id884 . -3) (undo-tree-id885 . -3) 3207) nil (26079 26478 644568 421000) 0 nil])
([nil nil ((3200 . 3204) (#("  " 0 2 (fontified nil)) . 3200) (3214 . 3215) (3200 . 3202) (#("    " 0 4 (fontified nil)) . 3200) (3215 . 3216)) nil (26079 26478 644565 808000) 0 nil])
([nil nil ((3217 . 3222) (#("token" 0 5 (fontified nil)) . -3217) (3217 . 3222)) nil (26079 26478 644564 554000) 0 nil])
([nil nil ((3222 . 3230)) nil (26079 26478 644563 917000) 0 nil])
([nil nil ((3230 . 3231)) nil (26079 26478 644563 453000) 0 nil])
([nil nil ((3223 . 3224)) nil (26079 26478 644562 946000) 0 nil])
([nil nil ((3232 . 3237)) nil (26079 26478 644562 428000) 0 nil])
([nil nil ((3233 . 3238) (#("    " 0 4 (fontified t)) . 3233) (undo-tree-id882 . -4) (undo-tree-id883 . -4) 3237) nil (26079 26478 644561 597000) 0 nil])
([nil nil ((3233 . 3238)) nil (26079 26478 644559 525000) 0 nil])
([nil nil ((3238 . 3243)) nil (26079 26478 644559 45000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3238) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (#("h" 0 1 (fontified t)) . -3239) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (#("i" 0 1 (fontified t)) . -3240) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (#("l" 0 1 (fontified t)) . -3241) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -3242) (undo-tree-id880 . -1) (undo-tree-id881 . -1) 3243) nil (26079 26478 644557 341000) 0 nil])
([nil nil ((3238 . 3245)) nil (26079 26478 644543 220000) 0 nil])
([nil nil ((3245 . 3250)) nil (26079 26478 644542 737000) 0 nil])
([nil nil ((3250 . 3252)) nil (26079 26478 644542 174000) 0 nil])
([nil nil ((3251 . 3256)) nil (26079 26478 644541 396000) 0 nil])
([nil nil ((3256 . 3257)) nil (26079 26478 644540 780000) 0 nil])
([nil nil ((3257 . 3259)) nil (26079 26478 644539 817000) 0 nil])
([nil nil ((3260 . 3261)) nil (26079 26478 644539 224000) 0 nil])
([nil nil ((3261 . 3266)) nil (26079 26478 644538 794000) 0 nil])
([nil nil ((3266 . 3271)) nil (26079 26478 644538 386000) 0 nil])
([nil nil ((3271 . 3273)) nil (26079 26478 647646 737000) 0 nil])
([nil nil ((3352 . 3353) (3338 . 3352) (3333 . 3338) (#("    " 0 4 (fontified t)) . 3333) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) 3337 (3332 . 3337) (3272 . 3273) (3271 . 3272) (#(" x" 0 2 (fontified nil)) . -3271) (3271 . 3273) (#("while" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face)) . 3271) (undo-tree-id1067 . -5) (undo-tree-id1068 . -5) (3266 . 3271) 3271 (3328 . 3329) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -3328) (3328 . 3329) (3328 . 3329) (#(" " 0 1 (fontified t)) . 3328) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 3329 (3328 . 3329) (3322 . 3327) (#("b" 0 1 (fontified t)) . -3322) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 3323 (3318 . 3323) (3317 . 3318) (3316 . 3317) (3311 . 3313) (#("d" 0 1 (fontified t)) . -3311) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (#("p" 0 1 (fontified t)) . -3312) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 3313 (3311 . 3313) (3310 . 3311) (3305 . 3310) (3304 . 3306) (3301 . 3304) (3298 . 3301) (#("-" 0 1 (fontified t)) . -3298) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) 3299 (3297 . 3299) (3296 . 3297) (3295 . 3296) (3294 . 3296) (3291 . 3293) (#("y" 0 1 (fontified t)) . -3291) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) 3292 (3290 . 3292) (3289 . 3290) (3284 . 3289) (3283 . 3284) (3282 . 3284) (3278 . 3282) (3273 . 3278) (3272 . 3274)) nil (26079 26571 176903 369000) 0 nil] [nil nil ((3272 . 3274)) ((#("\"\"" 0 2 (fontified t face font-lock-string-face)) . 3272) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1)) (26079 26478 644533 235000) 0 nil])
([nil nil ((3451 . 3452) (3446 . 3451) (3443 . 3446) (t 26079 26571 185761 588000) 3442) nil (26079 29449 50657 509000) 0 nil])
nil
([nil nil ((3523 . 3524) (3518 . 3523) (3600 . 3601) (#("}" 0 1 (fontified nil)) . -3600) (3600 . 3601) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -3518) (undo-tree-id1081 . -1) (undo-tree-id1082 . 1) (undo-tree-id1083 . -1) 3519 (3517 . 3519) (t 26079 29449 65690 691000)) nil (26079 29519 993871 347000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2803 . 2804) (#("
" 0 1 (fontified nil)) . -2923) (2801 . 2924) 2800 (t 26079 29520 5688 945000)) nil (26079 29655 890763 867000) 0 nil])
([nil nil ((3375 . 3376) (3371 . 3375) (3366 . 3371) (3365 . 3366) (3360 . 3365) (3355 . 3360) (t 26079 29655 899018 940000) 3355) nil (26079 29753 952115 513000) 0 nil])
([nil nil ((3414 . 3415) (3409 . 3414) (3404 . 3409) (t 26079 29753 962349 862000) 3385) nil (26079 29807 157136 879000) 0 nil])
([nil nil ((apply -3 3367 3408 undo--wrap-and-run-primitive-undo 3367 3408 ((3371 . 3374) 3377)) (t 26079 29807 175681 895000)) nil (26079 29996 447516 316000) 0 nil])
([nil nil ((3384 . 3390) (3384 . 3385) (t 26079 29996 459010 570000)) nil (26079 30245 24548 880000) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -3435) (3435 . 3437) (#("while" 0 5 (fontified nil face font-lock-keyword-face)) . 3435) (undo-tree-id1353 . -5) (undo-tree-id1354 . -5) (undo-tree-id1355 . -5) (undo-tree-id1356 . -5) (undo-tree-id1357 . -5) (undo-tree-id1358 . -5) (undo-tree-id1359 . -5) (undo-tree-id1360 . -5) (undo-tree-id1361 . -5) (undo-tree-id1362 . -5) (undo-tree-id1363 . -5) (undo-tree-id1364 . -5) (undo-tree-id1365 . -5) (undo-tree-id1366 . -5) (undo-tree-id1367 . -5) (undo-tree-id1368 . -5) (undo-tree-id1369 . -5) (undo-tree-id1370 . -5) (undo-tree-id1371 . -5) (undo-tree-id1372 . -5) (undo-tree-id1373 . -5) (undo-tree-id1374 . -5) (undo-tree-id1375 . -5) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5) (undo-tree-id1379 . -5) (undo-tree-id1380 . -5) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) (undo-tree-id1383 . -5) (undo-tree-id1384 . -5) (undo-tree-id1385 . -5) (undo-tree-id1386 . -5) (undo-tree-id1387 . -5) (undo-tree-id1388 . -5) (undo-tree-id1389 . -5) (undo-tree-id1390 . -5) (undo-tree-id1391 . -5) (undo-tree-id1392 . -5) (undo-tree-id1393 . -5) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) (undo-tree-id1415 . -5) (undo-tree-id1416 . -5) (undo-tree-id1417 . -5) (undo-tree-id1418 . -5) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) (undo-tree-id1422 . -5) (undo-tree-id1423 . -5) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5) (undo-tree-id1429 . -5) (undo-tree-id1430 . -5) (undo-tree-id1431 . -5) (undo-tree-id1432 . -5) (undo-tree-id1433 . -5) (undo-tree-id1434 . -5) (undo-tree-id1435 . -5) (undo-tree-id1436 . -5) (undo-tree-id1437 . -5) (undo-tree-id1438 . -5) (undo-tree-id1439 . -5) (undo-tree-id1440 . -5) (undo-tree-id1441 . -5) (undo-tree-id1442 . -5) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1452 . -5) (undo-tree-id1453 . -5) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) (undo-tree-id1457 . -5) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -5) (undo-tree-id1514 . -5) (undo-tree-id1515 . -5) (undo-tree-id1516 . -5) (undo-tree-id1517 . -5) (undo-tree-id1518 . -5) (undo-tree-id1519 . -5) (undo-tree-id1520 . -5) (undo-tree-id1521 . -5) (undo-tree-id1522 . -5) (undo-tree-id1523 . -5) (undo-tree-id1524 . -5) (undo-tree-id1525 . -5) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) (undo-tree-id1528 . -5) (undo-tree-id1529 . -5) (undo-tree-id1530 . -5) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) (undo-tree-id1546 . -5) (undo-tree-id1547 . -5) (undo-tree-id1548 . -5) (undo-tree-id1549 . -5) (undo-tree-id1550 . -5) (undo-tree-id1551 . -5) (undo-tree-id1552 . -5) (undo-tree-id1553 . -5) (undo-tree-id1554 . -5) (undo-tree-id1555 . -5) (undo-tree-id1556 . -5) (undo-tree-id1557 . -5) (undo-tree-id1558 . -5) (undo-tree-id1559 . -5) (undo-tree-id1560 . -5) (undo-tree-id1561 . -5) (undo-tree-id1562 . -5) (undo-tree-id1563 . -5) (undo-tree-id1564 . -5) (undo-tree-id1565 . -5) (undo-tree-id1566 . -5) (undo-tree-id1567 . -5) (undo-tree-id1568 . -5) (undo-tree-id1569 . -5) (undo-tree-id1570 . -5) (undo-tree-id1571 . -5) (undo-tree-id1572 . -5) (undo-tree-id1573 . -5) (undo-tree-id1574 . -5) (undo-tree-id1575 . -5) (undo-tree-id1576 . -5) (undo-tree-id1577 . -5) (undo-tree-id1578 . -5) (undo-tree-id1579 . -5) (undo-tree-id1580 . -5) (undo-tree-id1581 . -5) (undo-tree-id1582 . -5) (undo-tree-id1583 . -5) (undo-tree-id1584 . -5) (undo-tree-id1585 . -5) (undo-tree-id1586 . -5) (undo-tree-id1587 . -5) (undo-tree-id1588 . -5) (undo-tree-id1589 . -5) (undo-tree-id1590 . -5) (undo-tree-id1591 . -5) (undo-tree-id1592 . -5) (undo-tree-id1593 . -5) (undo-tree-id1594 . -5) (undo-tree-id1595 . -5) (undo-tree-id1596 . -5) (undo-tree-id1597 . -5) (undo-tree-id1598 . -5) (undo-tree-id1599 . -5) (undo-tree-id1600 . -5) (undo-tree-id1601 . -5) (undo-tree-id1602 . -5) (undo-tree-id1603 . -5) (undo-tree-id1604 . -5) (undo-tree-id1605 . -5) (undo-tree-id1606 . -5) (undo-tree-id1607 . -5) (undo-tree-id1608 . -5) (undo-tree-id1609 . -5) (undo-tree-id1610 . -5) (undo-tree-id1611 . -5) (undo-tree-id1612 . -5) (undo-tree-id1613 . -5) (undo-tree-id1614 . -5) (undo-tree-id1615 . -5) (undo-tree-id1616 . -5) (undo-tree-id1617 . -5) (undo-tree-id1618 . -5) (undo-tree-id1619 . -5) (undo-tree-id1620 . -5) (undo-tree-id1621 . -5) (undo-tree-id1622 . -5) (undo-tree-id1623 . -5) (undo-tree-id1624 . -5) (undo-tree-id1625 . -5) (undo-tree-id1626 . -5) (undo-tree-id1627 . -5) (3430 . 3435) 3435 (t 26079 30130 5673 935000)) nil (26079 30356 260965 628000) 0 nil] [nil nil ((#("(!((tok_ptr=&(*this->tok)(c,c=fgetc(this->fp)))->token_exp));" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face font-lock-negation-char-face) 2 3 (fontified t face (rainbow-delimiters-depth-4-face)) 3 4 (fontified t face (rainbow-delimiters-depth-5-face)) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-6-face)) 14 15 (fontified t) 15 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face font-lock-keyword-face) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-6-face)) 25 26 (fontified t face (rainbow-delimiters-depth-6-face)) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-7-face)) 36 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t face font-lock-keyword-face) 38 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-7-face)) 45 46 (fontified t face (rainbow-delimiters-depth-6-face)) 46 47 (fontified t face (rainbow-delimiters-depth-5-face)) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-4-face)) 59 60 (fontified t face (rainbow-delimiters-depth-3-face)) 60 61 (fontified t)) . 3435) (undo-tree-id1084 . -60) (undo-tree-id1085 . 61) (undo-tree-id1086 . -1) (undo-tree-id1087 . 2) (undo-tree-id1088 . -60) (undo-tree-id1089 . -61) (undo-tree-id1090 . -61) (undo-tree-id1091 . -61) (undo-tree-id1092 . -61) (t 26079 30130 5673 935000)) ((3435 . 3496)) (26079 30244 572313 581000) 0 nil])
([nil nil ((apply -3 3426 3501 undo--wrap-and-run-primitive-undo 3426 3501 ((3430 . 3433) 3497))) nil (26079 30356 260781 662000) 0 nil])
([nil nil ((apply -12 3378 3448 undo--wrap-and-run-primitive-undo 3378 3448 (("       " . 3380) ("    " . 3378) (3450 . 3453) (3436 . 3439) (3398 . 3401) (3382 . 3385) (3378 . 3389) 3435))) ((apply 12 3378 3436 undo--wrap-and-run-primitive-undo 3378 3436 ((#("           " 10 11 (c-in-sws t fontified t face font-lock-comment-face)) . 3378) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-face)) . 3382) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 3398) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 3436) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 3450) (3378 . 3382) (3380 . 3387) 3447))) (26079 30244 569047 781000) 0 nil])
([nil nil ((3425 . 3430) 3424) nil (26079 30356 260781 29000) 0 nil])
nil
([nil nil ((3430 . 3433)) nil (26079 30356 260780 438000) 0 nil])
([nil nil ((3433 . 3435)) nil (26079 30356 260779 946000) 0 nil])
([nil nil ((3414 . 3419)) nil (26079 30356 260779 553000) 0 nil])
([nil nil ((3419 . 3423)) nil (26079 30356 260779 119000) 0 nil])
([nil nil ((3419 . 3425) (#("sta" 0 3 (fontified nil)) . 3419) (3419 . 3422) (#("static" 0 6 (fontified nil)) . -3419) (3419 . 3425) (#("stat" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3419) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) 3423) nil (26079 30356 260777 966000) 0 nil])
([nil nil ((3425 . 3431)) nil (26079 30356 260775 603000) 0 nil])
([nil nil ((3431 . 3439)) nil (26079 30356 260775 136000) 0 nil])
([nil nil ((3439 . 3441)) nil (26079 30356 260774 749000) 0 nil])
([nil nil ((3440 . 3445)) nil (26079 30356 260774 36000) 0 nil])
([nil nil ((3445 . 3446)) nil (26079 30356 260773 494000) 0 nil])
([nil nil ((3446 . 3448)) nil (26079 30356 260772 957000) 0 nil])
([nil nil ((3449 . 3450)) nil (26079 30356 260772 553000) 0 nil])
([nil nil ((3470 . 3471)) nil (26079 30356 260771 876000) 0 nil])
([nil nil ((3471 . 3472)) nil (26079 30356 260771 427000) 0 nil])
([nil nil ((3472 . 3474)) nil (26079 30356 260770 833000) 0 nil])
([nil nil ((3473 . 3475)) nil (26079 30356 260770 311000) 0 nil])
([nil nil ((3474 . 3483)) nil (26079 30356 260769 699000) 0 nil])
([nil nil ((3483 . 3485)) nil (26079 30356 260769 292000) 0 nil])
([nil nil ((3484 . 3485)) nil (26079 30356 260768 499000) 0 nil])
([nil nil ((3485 . 3490)) nil (26079 30356 260768 96000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3489) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) 3490) nil (26079 30356 260767 404000) 0 nil])
([nil nil ((3489 . 3490)) nil (26079 30356 260765 497000) 0 nil])
([nil nil ((3490 . 3491)) nil (26079 30356 260764 944000) 0 nil])
([nil nil ((3491 . 3494)) nil (26079 30356 260764 490000) 0 nil])
([nil nil ((3496 . 3497)) nil (26079 30356 260763 882000) 0 nil])
([nil nil ((3497 . 3498)) nil (26079 30356 260762 926000) 0 nil])
([nil nil ((3498 . 3507)) nil (26079 30356 260762 330000) 0 nil])
([nil nil ((3495 . 3497)) nil (26079 30356 260761 827000) 0 nil])
([nil nil ((3496 . 3497)) nil (26079 30356 260761 257000) 0 nil])
([nil nil ((3497 . 3498)) nil (26079 30356 260760 798000) 0 nil])
([nil nil ((3498 . 3500)) nil (26079 30356 260760 294000) 0 nil])
([nil nil ((3514 . 3515)) nil (26079 30356 924617 743000) 0 nil])
([nil nil ((3586 . 3587) (apply yas--snippet-revive 3571 3586 #s(yas--snippet nil (#s(yas--field 1 3577 3585 nil nil nil t nil)) nil 20 nil #s(yas--field 1 3577 3585 nil nil nil t nil) nil nil)) (3583 . 3585) (3582 . 3583) (3578 . 3582) (#("FILE *stream" 0 4 (fontified nil face font-lock-type-face) 4 6 (fontified nil) 6 12 (fontified nil face font-lock-variable-name-face)) . 3578) (3577 . 3578) (62 . 80) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3577 3585 nil nil nil t nil)) nil 20 nil #s(yas--field 1 3577 3585 nil nil nil t nil) nil nil)) (3553 . 3572) (#("fgetc(${1:FILE *stream})" 0 24 (fontified nil)) . 3553) (3553 . 3577) (#("fg" 0 2 (fontified nil)) . 3553) (3553 . 3555) (#("fgetc(FILE *stream)" 0 19 (fontified nil)) . -3553) (3553 . 3572) (#("fg" 0 1 (fontified t) 1 2 (fontified t)) . -3553) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) 3555 (3550 . 3555) (3549 . 3550) (3545 . 3549) (3540 . 3545) (3539 . 3540) (3535 . 3537) (3534 . 3535) (3529 . 3534) (3528 . 3530) (3522 . 3528) (#("-" 0 1 (fontified t)) . -3522) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) 3523 (3520 . 3523) (3519 . 3520) (3517 . 3519) (3515 . 3517)) nil (26079 30492 89162 769000) 0 nil] [nil nil ((#("=" 0 1 (fontified t)) . -3397) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (#("f" 0 1 (fontified t)) . -3398) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (#("g" 0 1 (fontified t)) . -3399) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (#("e" 0 1 (fontified t)) . -3400) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#("t" 0 1 (fontified t)) . -3401) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("c" 0 1 (fontified t)) . -3402) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3403) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (#("t" 0 1 (fontified t)) . -3404) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("h" 0 1 (fontified t)) . -3405) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#("i" 0 1 (fontified t)) . -3406) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -3407) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("-" 0 1 (fontified t)) . -3408) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#(">" 0 1 (fontified t)) . -3409) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (#("f" 0 1 (fontified t)) . -3410) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (#("p" 0 1 (fontified t)) . -3411) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3412) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . 1) (undo-tree-id1348 . -1) 3413) ((3397 . 3413)) (26079 30356 280474 403000) 0 nil])
([nil nil ((43 . 2368) (#("bits/types/FILE.h>
#include <cstdio>
#include <iostream>
#include \"token.h\"
#include \"debug.h\"
#include <vector>
#include <cctype>


// enum{atom_obj,atom_var,var,Inter,Init} select_token_class::stat=Init;
// enum{Atom_obj,Atom_var,Var,Inter,Init} select_token_class::stat=Init;
select_token_class::Stat select_token_class::stat=Init;
bool select_token_class::select_token_fun_ptr(char c, char c1)
{
  printf(\"lll,%d\\n\",stat);
  debug;
here:  
  switch(stat)
  {
  case Init:
    if(is_inter(c)) stat=Inter;
    else if(is_ter(c)) stat=Ter;
    else if(isupper(c)||!(c-'_')) stat=Var;
    else if(is_atom_obj(c)) stat=Atom_obj;
    else if(is_atom_var(c)) stat=Atom_var;
    else if(!(c-' ')||!(c-'\\n')) break;
    goto here;

  case Ter:
    debug;
    // stop;
    return true;
    
  case Atom_obj:
    if(is_atom_obj(c1)) return false;
    //stat=Init;
    break;
    
  case Atom_var:
    // debug;
    if(is_atom_var(c1)) return false;
    //stat=Init;
    break;
    
  case Var:
    if(is_atom_var(c1)) return false;
    //stat=Init;
    break;
    
  case Inter:
    debug;
    // stop
    if(is_inter(c1)) return false;
    //stat=Init;
    break;

    //default:  
    
  }  

  return true;
  
  
}  

void select_token_class::select_set_token_ptr(token_class::token &tok)
{
  printf(\"aaa\\n\");
  debug;
  switch(stat)
  {
  case Atom_var:  
  case Atom_obj: tok.token_type=token_class::token::Atom; break;
  case Var:tok.token_type=token_class::token::Var; break;
  case Inter:tok.token_type=token_class::token::Inter; break;  
  case Ter:tok.token_type=token_class::token::Ter;break;  
    
  }

  stat=Init;
  printf(\"%d\\n\",stat);
  debug;
  
  
}  

bool select_token_class::is_atom_var(char c)
{
  if(c<='z'&&c>='a') return true;
  if(c<='Z'&&c>='A') return true;
  if(c>47&&c<58) return true;
  if(!(c-'_')) return true;
  
  return false;
  
  
}
  
bool select_token_class::is_atom_obj(char c)
{
  static std::vector<char> enable_obj(ENABLE_OBJ_INPUT);

  for(int i=0;i<enable_obj.size();i++) if(!(c-enable_obj[i])) return true;
  
  return false;

  
}
  
bool select_token_class::is_ter(char c)
{
  static std::vector<char> ter_obj(ENABLE_TER_INPUT);

  for(int i=0;i<ter_obj.size();i++) if(!(c-ter_obj[i])) return true;
  // std::cout<<c<<'\\t'<<ter_obj[1]<<std::endl;
  // std::cin;

  return false;
  
  
}
  
bool select_token_class::is_inter(char c)
{
  // printf(\"%d\",c>47&&c<58);
  // stop;
  if(c>47&&c<58) return true;
  
  return false;

  
}


get_token_next::get_token_next(std::string str)
{
  this->bz=STR_t;
  this->str=str;
  this->i=0;
  this->tok=new lexer_mod::lexer_read(select_token_class::select_token_fun_ptr,select_token_class::select_set_token_ptr);

  
}

get_token_next::get_token_next(FILE *fp)
{
  this->bz=FP_t;
  this->fp=fp;
  this->tok=new lexer_mod::lexer_read(select_token_class::select_token_fun_ptr,select_token_class::select_set_token_ptr);

  
}    

get_token_next::~get_token_next()
{
  delete this->tok;

  
}    

token_class::token *get_token_next::operator()()
{
  if(!(this->bz-STR_t))
    for(token_class::token *tok_ptr;this->i+1<this->str.size();this->i++)
      if((tok_ptr=&(*this->tok)(this->str[this->i],this->str[this->i+1]))->token_exp)      {
	this->i++;
	return tok_ptr;
      }
  
  if(!(this->bz-FP_t))
  {
    int i;
    token_class::token *tok_ptr;

    debug;
    // stop;
    static char c=fgetc(this->fp);
    static char c1=fgetc(this->fp);
    debug;
    for(;!((tok_ptr=&(*this->tok)(c,c1))->token_exp);c=c1,c1=fgetc(this->fp));
    c=c1;c1=fgetc(this->fp);
    // while(!((tok_ptr=&(*this->tok)(c,c=fgetc(this->fp)))->token_exp));

    return tok_ptr;
    
      
  }
    
}

token_class::token *get_token_next::operator()(std::string str)
{
  debug;
  token_class::token *tok_ptr;
  for(int i=0;i+1<str.size();i++){debug;
    if((tok_ptr=&(*this->tok)(str[i],str[i+1]))->token_exp)
      return tok_ptr;}

  
}" 0 19 (c-in-sws t) 19 20 (c-is-sws t c-in-sws t) 20 37 (c-in-sws t) 37 38 (face font-lock-preprocessor-face c-is-sws t) 38 45 (face font-lock-preprocessor-face) 46 47 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62)) 47 55 (face font-lock-string-face) 55 56 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60)) 56 57 (c-in-sws t) 57 58 (face font-lock-preprocessor-face c-is-sws t c-in-sws t) 58 65 (face font-lock-preprocessor-face c-in-sws t) 65 66 (c-in-sws t) 66 75 (face font-lock-string-face c-in-sws t) 75 76 (c-in-sws t) 76 77 (face font-lock-preprocessor-face c-is-sws t c-in-sws t) 77 84 (face font-lock-preprocessor-face c-in-sws t) 84 85 (c-in-sws t) 85 94 (face font-lock-string-face c-in-sws t) 94 95 (c-in-sws t) 95 96 (face font-lock-preprocessor-face c-is-sws t c-in-sws t) 96 103 (face font-lock-preprocessor-face c-in-sws t) 103 104 (c-in-sws t) 104 105 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 105 111 (face font-lock-string-face c-in-sws t) 111 112 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 112 113 (c-in-sws t) 113 114 (face font-lock-preprocessor-face c-is-sws t c-in-sws t) 114 121 (face font-lock-preprocessor-face c-in-sws t) 121 122 (c-in-sws t) 122 123 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 123 129 (face font-lock-string-face c-in-sws t) 129 130 (face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 130 131 (c-in-sws t) 131 133 (c-in-sws t) 133 134 (face font-lock-comment-delimiter-face c-in-sws t) 134 136 (face font-lock-comment-delimiter-face c-in-sws t) 136 149 (face font-lock-comment-face c-in-sws t) 149 150 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 150 158 (face font-lock-comment-face c-in-sws t) 158 159 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 159 162 (face font-lock-comment-face c-in-sws t) 162 163 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 163 168 (face font-lock-comment-face c-in-sws t) 168 169 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 169 206 (face font-lock-comment-face c-in-sws t) 206 209 (face font-lock-comment-delimiter-face c-in-sws t) 209 222 (face font-lock-comment-face c-in-sws t) 222 223 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 223 231 (face font-lock-comment-face c-in-sws t) 231 232 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 232 235 (face font-lock-comment-face c-in-sws t) 235 236 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 236 241 (face font-lock-comment-face c-in-sws t) 241 242 (face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 242 279 (face font-lock-comment-face c-in-sws t) 279 280 (face font-lock-constant-face c-is-sws t) 280 297 (face font-lock-constant-face) 299 302 (face font-lock-type-face) 302 303 (c-type c-decl-id-start face font-lock-type-face) 304 322 (face font-lock-constant-face) 324 328 (face font-lock-variable-name-face) 335 338 (face font-lock-type-face) 338 339 (c-type c-decl-id-start face font-lock-type-face) 340 358 (face font-lock-constant-face) 360 380 (face font-lock-function-name-face) 380 381 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 381 385 (face font-lock-type-face) 386 387 (face font-lock-variable-name-face) 387 388 (c-type c-decl-arg-start) 389 393 (face font-lock-type-face) 394 396 (face font-lock-variable-name-face) 396 397 (face (rainbow-delimiters-depth-1-face)) 398 399 (face (rainbow-delimiters-depth-1-face)) 408 409 (face (rainbow-delimiters-depth-2-face)) 409 419 (face font-lock-string-face) 424 425 (face (rainbow-delimiters-depth-2-face)) 436 440 (face font-lock-constant-face) 440 441 (c-type c-decl-end) 446 452 (face font-lock-keyword-face) 452 453 (face (rainbow-delimiters-depth-2-face)) 457 458 (face (rainbow-delimiters-depth-2-face)) 461 462 (face (rainbow-delimiters-depth-2-face)) 465 469 (face font-lock-keyword-face) 474 475 (c-type c-decl-end) 480 482 (face font-lock-keyword-face) 482 483 (face (rainbow-delimiters-depth-3-face)) 491 492 (face (rainbow-delimiters-depth-4-face)) 493 494 (face (rainbow-delimiters-depth-4-face)) 494 495 (face (rainbow-delimiters-depth-3-face)) 512 516 (face font-lock-keyword-face) 517 519 (face font-lock-keyword-face) 519 520 (face (rainbow-delimiters-depth-3-face)) 526 527 (face (rainbow-delimiters-depth-4-face)) 528 529 (face (rainbow-delimiters-depth-4-face)) 529 530 (face (rainbow-delimiters-depth-3-face)) 545 549 (face font-lock-keyword-face) 550 552 (face font-lock-keyword-face) 552 553 (face (rainbow-delimiters-depth-3-face)) 560 561 (face (rainbow-delimiters-depth-4-face)) 562 563 (face (rainbow-delimiters-depth-4-face)) 565 566 (face font-lock-negation-char-face) 566 567 (face (rainbow-delimiters-depth-4-face)) 569 572 (face font-lock-string-face) 572 573 (face (rainbow-delimiters-depth-4-face)) 573 574 (face (rainbow-delimiters-depth-3-face)) 589 593 (face font-lock-keyword-face) 594 596 (face font-lock-keyword-face) 596 597 (face (rainbow-delimiters-depth-3-face)) 608 609 (face (rainbow-delimiters-depth-4-face)) 610 611 (face (rainbow-delimiters-depth-4-face)) 611 612 (face (rainbow-delimiters-depth-3-face)) 632 636 (face font-lock-keyword-face) 637 639 (face font-lock-keyword-face) 639 640 (face (rainbow-delimiters-depth-3-face)) 651 652 (face (rainbow-delimiters-depth-4-face)) 653 654 (face (rainbow-delimiters-depth-4-face)) 654 655 (face (rainbow-delimiters-depth-3-face)) 675 679 (face font-lock-keyword-face) 680 682 (face font-lock-keyword-face) 682 683 (face (rainbow-delimiters-depth-3-face)) 683 684 (face font-lock-negation-char-face) 684 685 (face (rainbow-delimiters-depth-4-face)) 687 690 (face font-lock-string-face) 690 691 (face (rainbow-delimiters-depth-4-face)) 693 694 (face font-lock-negation-char-face) 694 695 (face (rainbow-delimiters-depth-4-face)) 697 701 (face font-lock-string-face) 701 702 (face (rainbow-delimiters-depth-4-face)) 702 703 (face (rainbow-delimiters-depth-3-face)) 704 709 (face font-lock-keyword-face) 715 719 (face font-lock-keyword-face) 720 724 (face font-lock-constant-face) 729 733 (face font-lock-keyword-face) 737 738 (c-type c-decl-end) 754 757 (face font-lock-comment-delimiter-face) 757 763 (face font-lock-comment-face) 767 773 (face font-lock-keyword-face) 774 778 (face font-lock-constant-face) 787 791 (face font-lock-keyword-face) 800 801 (c-type c-decl-end) 806 808 (face font-lock-keyword-face) 808 809 (face (rainbow-delimiters-depth-3-face)) 820 821 (face (rainbow-delimiters-depth-4-face)) 823 824 (face (rainbow-delimiters-depth-4-face)) 824 825 (face (rainbow-delimiters-depth-3-face)) 826 832 (face font-lock-keyword-face) 833 838 (face font-lock-constant-face) 844 846 (face font-lock-comment-delimiter-face) 846 857 (face font-lock-comment-face) 861 866 (face font-lock-keyword-face) 875 879 (face font-lock-keyword-face) 888 889 (c-type c-decl-end) 894 897 (face font-lock-comment-delimiter-face) 897 904 (face font-lock-comment-face) 908 910 (face font-lock-keyword-face) 910 911 (face (rainbow-delimiters-depth-3-face)) 922 923 (face (rainbow-delimiters-depth-4-face)) 925 926 (face (rainbow-delimiters-depth-4-face)) 926 927 (face (rainbow-delimiters-depth-3-face)) 928 934 (face font-lock-keyword-face) 935 940 (face font-lock-constant-face) 946 948 (face font-lock-comment-delimiter-face) 948 959 (face font-lock-comment-face) 963 968 (face font-lock-keyword-face) 977 981 (face font-lock-keyword-face) 985 986 (c-type c-decl-end) 991 993 (face font-lock-keyword-face) 993 994 (face (rainbow-delimiters-depth-3-face)) 1005 1006 (face (rainbow-delimiters-depth-4-face)) 1008 1009 (face (rainbow-delimiters-depth-4-face)) 1009 1010 (face (rainbow-delimiters-depth-3-face)) 1011 1017 (face font-lock-keyword-face) 1018 1023 (face font-lock-constant-face) 1029 1031 (face font-lock-comment-delimiter-face) 1031 1042 (face font-lock-comment-face) 1046 1051 (face font-lock-keyword-face) 1060 1064 (face font-lock-keyword-face) 1070 1071 (c-type c-decl-end) 1087 1090 (face font-lock-comment-delimiter-face) 1090 1095 (face font-lock-comment-face) 1099 1101 (face font-lock-keyword-face) 1101 1102 (face (rainbow-delimiters-depth-3-face)) 1110 1111 (face (rainbow-delimiters-depth-4-face)) 1113 1114 (face (rainbow-delimiters-depth-4-face)) 1114 1115 (face (rainbow-delimiters-depth-3-face)) 1116 1122 (face font-lock-keyword-face) 1123 1128 (face font-lock-constant-face) 1134 1136 (face font-lock-comment-delimiter-face) 1136 1147 (face font-lock-comment-face) 1151 1156 (face font-lock-keyword-face) 1163 1165 (face font-lock-comment-delimiter-face) 1165 1176 (face font-lock-comment-face) 1183 1184 (face (rainbow-delimiters-depth-2-face)) 1190 1196 (face font-lock-keyword-face) 1197 1201 (face font-lock-constant-face) 1209 1210 (face (rainbow-delimiters-depth-1-face)) 1214 1217 (face font-lock-type-face) 1217 1218 (c-type c-decl-id-start face font-lock-type-face) 1219 1237 (face font-lock-constant-face) 1239 1259 (face font-lock-function-name-face) 1259 1260 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1260 1271 (face font-lock-constant-face) 1273 1278 (face font-lock-type-face) 1280 1283 (face font-lock-variable-name-face) 1283 1284 (face (rainbow-delimiters-depth-1-face)) 1285 1286 (face (rainbow-delimiters-depth-1-face)) 1295 1296 (face (rainbow-delimiters-depth-2-face)) 1296 1303 (face font-lock-string-face) 1303 1304 (face (rainbow-delimiters-depth-2-face)) 1317 1323 (face font-lock-keyword-face) 1323 1324 (face (rainbow-delimiters-depth-2-face)) 1328 1329 (face (rainbow-delimiters-depth-2-face)) 1332 1333 (face (rainbow-delimiters-depth-2-face)) 1336 1340 (face font-lock-keyword-face) 1349 1350 (c-type c-decl-end) 1355 1359 (face font-lock-keyword-face) 1368 1369 (c-type c-decl-end) 1385 1396 (face font-lock-constant-face) 1398 1403 (face font-lock-constant-face) 1411 1416 (face font-lock-keyword-face) 1420 1424 (face font-lock-keyword-face) 1428 1429 (c-type c-decl-end) 1444 1455 (face font-lock-constant-face) 1457 1462 (face font-lock-constant-face) 1469 1474 (face font-lock-keyword-face) 1478 1482 (face font-lock-keyword-face) 1488 1489 (c-type c-decl-end) 1504 1505 (face font-lock-constant-face) 1505 1515 (face font-lock-constant-face) 1517 1522 (face font-lock-constant-face) 1531 1536 (face font-lock-keyword-face) 1542 1546 (face font-lock-keyword-face) 1550 1551 (c-type c-decl-end) 1566 1577 (face font-lock-constant-face) 1579 1584 (face font-lock-constant-face) 1590 1595 (face font-lock-keyword-face) 1606 1607 (face (rainbow-delimiters-depth-2-face)) 1630 1631 (face (rainbow-delimiters-depth-2-face)) 1631 1637 (face font-lock-string-face) 1642 1643 (face (rainbow-delimiters-depth-2-face)) 1660 1661 (face (rainbow-delimiters-depth-1-face)) 1665 1668 (face font-lock-type-face) 1668 1669 (c-type c-decl-id-start face font-lock-type-face) 1670 1688 (face font-lock-constant-face) 1690 1701 (face font-lock-function-name-face) 1701 1702 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1702 1706 (face font-lock-type-face) 1707 1708 (face font-lock-variable-name-face) 1708 1709 (face (rainbow-delimiters-depth-1-face)) 1710 1711 (face (rainbow-delimiters-depth-1-face)) 1714 1716 (face font-lock-keyword-face) 1716 1717 (face (rainbow-delimiters-depth-2-face)) 1720 1723 (face font-lock-string-face) 1728 1731 (face font-lock-string-face) 1731 1732 (face (rainbow-delimiters-depth-2-face)) 1733 1739 (face font-lock-keyword-face) 1740 1744 (face font-lock-constant-face) 1748 1750 (face font-lock-keyword-face) 1750 1751 (face (rainbow-delimiters-depth-2-face)) 1754 1757 (face font-lock-string-face) 1762 1765 (face font-lock-string-face) 1765 1766 (face (rainbow-delimiters-depth-2-face)) 1767 1773 (face font-lock-keyword-face) 1774 1778 (face font-lock-constant-face) 1782 1784 (face font-lock-keyword-face) 1784 1785 (face (rainbow-delimiters-depth-2-face)) 1795 1796 (face (rainbow-delimiters-depth-2-face)) 1797 1803 (face font-lock-keyword-face) 1804 1808 (face font-lock-constant-face) 1812 1814 (face font-lock-keyword-face) 1814 1815 (face (rainbow-delimiters-depth-2-face)) 1815 1816 (face font-lock-negation-char-face) 1816 1817 (face (rainbow-delimiters-depth-3-face)) 1819 1822 (face font-lock-string-face) 1822 1823 (face (rainbow-delimiters-depth-3-face)) 1823 1824 (face (rainbow-delimiters-depth-2-face)) 1825 1831 (face font-lock-keyword-face) 1832 1836 (face font-lock-constant-face) 1843 1849 (face font-lock-keyword-face) 1850 1855 (face font-lock-constant-face) 1863 1864 (face (rainbow-delimiters-depth-1-face)) 1868 1871 (face font-lock-type-face) 1871 1872 (c-type c-decl-id-start face font-lock-type-face) 1873 1891 (face font-lock-constant-face) 1893 1904 (face font-lock-function-name-face) 1904 1905 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1905 1909 (face font-lock-type-face) 1910 1911 (face font-lock-variable-name-face) 1911 1912 (face (rainbow-delimiters-depth-1-face)) 1913 1914 (face (rainbow-delimiters-depth-1-face)) 1917 1923 (face font-lock-keyword-face) 1924 1927 (face font-lock-constant-face) 1929 1935 (face font-lock-type-face) 1935 1936 (syntax-table (4 . 62) face (rainbow-delimiters-depth-2-face)) 1936 1940 (face font-lock-type-face) 1940 1941 (syntax-table (5 . 60) c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 1942 1952 (face font-lock-function-name-face) 1952 1953 (c-type c-decl-arg-start face (rainbow-delimiters-depth-2-face)) 1969 1970 (face (rainbow-delimiters-depth-2-face)) 1975 1978 (face font-lock-keyword-face) 1978 1979 (face (rainbow-delimiters-depth-2-face)) 1979 1981 (face font-lock-type-face) 1981 1982 (c-type c-decl-id-start face font-lock-type-face) 1983 1984 (face font-lock-variable-name-face) 2004 2005 (face (rainbow-delimiters-depth-3-face)) 2005 2006 (face (rainbow-delimiters-depth-3-face)) 2010 2011 (face (rainbow-delimiters-depth-2-face)) 2012 2014 (face font-lock-keyword-face) 2014 2015 (face (rainbow-delimiters-depth-2-face)) 2015 2016 (face font-lock-negation-char-face) 2016 2017 (face (rainbow-delimiters-depth-3-face)) 2029 2030 (face (rainbow-delimiters-depth-4-face)) 2031 2032 (face (rainbow-delimiters-depth-4-face)) 2032 2033 (face (rainbow-delimiters-depth-3-face)) 2033 2034 (face (rainbow-delimiters-depth-2-face)) 2035 2041 (face font-lock-keyword-face) 2042 2046 (face font-lock-constant-face) 2053 2059 (face font-lock-keyword-face) 2060 2065 (face font-lock-constant-face) 2071 2072 (face (rainbow-delimiters-depth-1-face)) 2076 2079 (face font-lock-type-face) 2079 2080 (c-type c-decl-id-start face font-lock-type-face) 2081 2099 (face font-lock-constant-face) 2101 2107 (face font-lock-function-name-face) 2107 2108 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2108 2112 (face font-lock-type-face) 2113 2114 (face font-lock-variable-name-face) 2114 2115 (face (rainbow-delimiters-depth-1-face)) 2116 2117 (face (rainbow-delimiters-depth-1-face)) 2120 2126 (face font-lock-keyword-face) 2127 2130 (face font-lock-constant-face) 2132 2138 (face font-lock-type-face) 2138 2139 (syntax-table (4 . 62) face (rainbow-delimiters-depth-2-face)) 2139 2143 (face font-lock-type-face) 2143 2144 (syntax-table (5 . 60) c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 2145 2152 (face font-lock-function-name-face) 2152 2153 (c-type c-decl-arg-start face (rainbow-delimiters-depth-2-face)) 2169 2170 (face (rainbow-delimiters-depth-2-face)) 2175 2178 (face font-lock-keyword-face) 2178 2179 (face (rainbow-delimiters-depth-2-face)) 2179 2181 (face font-lock-type-face) 2181 2182 (c-type c-decl-id-start face font-lock-type-face) 2183 2184 (face font-lock-variable-name-face) 2201 2202 (face (rainbow-delimiters-depth-3-face)) 2202 2203 (face (rainbow-delimiters-depth-3-face)) 2207 2208 (face (rainbow-delimiters-depth-2-face)) 2209 2211 (face font-lock-keyword-face) 2211 2212 (face (rainbow-delimiters-depth-2-face)) 2212 2213 (face font-lock-negation-char-face) 2213 2214 (face (rainbow-delimiters-depth-3-face)) 2223 2224 (face (rainbow-delimiters-depth-4-face)) 2225 2226 (face (rainbow-delimiters-depth-4-face)) 2226 2227 (face (rainbow-delimiters-depth-3-face)) 2227 2228 (face (rainbow-delimiters-depth-2-face)) 2229 2235 (face font-lock-keyword-face) 2236 2240 (face font-lock-constant-face) 2244 2247 (face font-lock-comment-delimiter-face) 2247 2290 (face font-lock-comment-face) 2292 2295 (face font-lock-comment-delimiter-face) 2295 2305 (face font-lock-comment-face) 2308 2314 (face font-lock-keyword-face) 2315 2320 (face font-lock-constant-face) 2328 2329 (face (rainbow-delimiters-depth-1-face)) 2333 2336 (face font-lock-type-face) 2336 2337 (c-type c-decl-id-start face font-lock-type-face) 2338 2356 (face font-lock-constant-face) 2358 2366 (face font-lock-function-name-face) 2366 2367 (c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2367 2371 (face font-lock-type-face) 2372 2373 (face font-lock-variable-name-face) 2373 2374 (face (rainbow-delimiters-depth-1-face)) 2375 2376 (face (rainbow-delimiters-depth-1-face)) 2379 2382 (face font-lock-comment-delimiter-face) 2382 2407 (face font-lock-comment-face) 2409 2412 (face font-lock-comment-delimiter-face) 2412 2418 (face font-lock-comment-face) 2420 2422 (face font-lock-keyword-face) 2422 2423 (face (rainbow-delimiters-depth-2-face)) 2433 2434 (face (rainbow-delimiters-depth-2-face)) 2435 2441 (face font-lock-keyword-face) 2442 2446 (face font-lock-constant-face) 2453 2459 (face font-lock-keyword-face) 2460 2465 (face font-lock-constant-face) 2467 2468 (fontified t) 2468 2471 (fontified t) 2471 2472 (fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-1-face)) 2472 2473 (fontified t) 2473 2474 (fontified t) 2474 2475 (fontified t) 2475 2489 (fontified t face font-lock-constant-face) 2489 2491 (fontified t) 2491 2505 (fontified t face font-lock-function-name-face) 2505 2506 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2506 2509 (fontified t face font-lock-constant-face) 2509 2511 (fontified t) 2511 2517 (fontified t face font-lock-type-face) 2517 2518 (fontified t) 2518 2521 (fontified t face font-lock-variable-name-face) 2521 2522 (fontified t face (rainbow-delimiters-depth-1-face)) 2522 2523 (fontified t) 2523 2524 (fontified t face (rainbow-delimiters-depth-1-face)) 2524 2525 (fontified t) 2525 2527 (fontified t) 2527 2528 (fontified t face font-lock-keyword-face) 2528 2529 (fontified t face font-lock-keyword-face) 2529 2530 (fontified t face font-lock-keyword-face) 2530 2531 (fontified t face font-lock-keyword-face) 2531 2532 (fontified t) 2532 2533 (fontified t) 2533 2534 (fontified t) 2534 2535 (fontified t) 2535 2536 (fontified t) 2536 2537 (fontified t) 2537 2538 (fontified t) 2538 2539 (fontified t) 2539 2540 (fontified t) 2540 2541 (fontified t) 2541 2542 (fontified t) 2542 2543 (fontified t) 2543 2545 (fontified t) 2545 2549 (fontified t face font-lock-keyword-face) 2549 2560 (fontified t) 2560 2562 (fontified t) 2562 2566 (fontified t face font-lock-keyword-face) 2566 2575 (fontified t) 2575 2579 (fontified t face font-lock-keyword-face) 2579 2585 (fontified t) 2585 2588 (fontified t face font-lock-keyword-face) 2588 2589 (fontified t) 2589 2598 (fontified t face font-lock-constant-face) 2598 2600 (fontified t) 2600 2610 (fontified t face font-lock-type-face) 2610 2611 (fontified t face (rainbow-delimiters-depth-2-face)) 2611 2629 (fontified t face font-lock-constant-face) 2629 2652 (fontified t) 2652 2670 (fontified t face font-lock-constant-face) 2670 2692 (fontified t) 2692 2693 (fontified t face (rainbow-delimiters-depth-2-face)) 2693 2699 (fontified t) 2699 2700 (fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-1-face)) 2700 2701 (rear-nonsticky t fontified t) 2701 2702 (fontified t) 2702 2716 (fontified t face font-lock-constant-face) 2716 2718 (fontified t) 2718 2732 (fontified t face font-lock-function-name-face) 2732 2733 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2733 2737 (fontified t face font-lock-type-face) 2737 2738 (fontified t) 2738 2739 (fontified t) 2739 2740 (fontified t face font-lock-variable-name-face) 2740 2741 (fontified t face font-lock-variable-name-face) 2741 2742 (fontified t face (rainbow-delimiters-depth-1-face)) 2742 2743 (fontified t) 2743 2744 (fontified t face (rainbow-delimiters-depth-1-face)) 2744 2745 (fontified t) 2745 2747 (fontified t) 2747 2748 (fontified t face font-lock-keyword-face) 2748 2749 (fontified t face font-lock-keyword-face) 2749 2750 (fontified t face font-lock-keyword-face) 2750 2751 (fontified t face font-lock-keyword-face) 2751 2752 (fontified t) 2752 2753 (fontified t) 2753 2754 (fontified t) 2754 2755 (fontified t) 2755 2756 (fontified t) 2756 2757 (fontified t) 2757 2758 (fontified t) 2758 2759 (fontified t) 2759 2760 (fontified t) 2760 2761 (fontified t) 2761 2762 (fontified t) 2762 2764 (fontified t) 2764 2765 (fontified t face font-lock-keyword-face) 2765 2766 (fontified t face font-lock-keyword-face) 2766 2767 (fontified t face font-lock-keyword-face) 2767 2768 (fontified t face font-lock-keyword-face) 2768 2769 (fontified t) 2769 2770 (fontified t) 2770 2771 (fontified t) 2771 2772 (fontified t) 2772 2773 (fontified t) 2773 2774 (fontified t) 2774 2775 (fontified t) 2775 2776 (fontified t) 2776 2777 (fontified t) 2777 2778 (fontified t) 2778 2779 (rear-nonsticky t fontified t) 2779 2783 (fontified t face font-lock-keyword-face) 2783 2789 (fontified t) 2789 2792 (fontified t face font-lock-keyword-face) 2792 2793 (fontified t) 2793 2802 (fontified t face font-lock-constant-face) 2802 2804 (fontified t) 2804 2814 (fontified t face font-lock-type-face) 2814 2815 (fontified t face (rainbow-delimiters-depth-2-face)) 2815 2833 (fontified t face font-lock-constant-face) 2833 2856 (fontified t) 2856 2874 (fontified t face font-lock-constant-face) 2874 2896 (fontified t) 2896 2897 (fontified t face (rainbow-delimiters-depth-2-face)) 2897 2898 (fontified t) 2898 2899 (fontified t) 2899 2902 (fontified t) 2902 2903 (fontified t) 2903 2904 (fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-1-face)) 2904 2908 (fontified t) 2908 2909 (fontified t) 2909 2910 (fontified t) 2910 2924 (fontified t face font-lock-constant-face) 2924 2927 (fontified t) 2927 2941 (fontified t face font-lock-function-name-face) 2941 2942 (fontified t face (rainbow-delimiters-depth-1-face)) 2942 2943 (fontified t face (rainbow-delimiters-depth-1-face)) 2943 2944 (fontified t) 2944 2945 (fontified t face (rainbow-delimiters-depth-1-face)) 2945 2948 (fontified t) 2948 2954 (fontified t face font-lock-keyword-face) 2954 2955 (fontified t) 2955 2959 (fontified t face font-lock-keyword-face) 2959 2970 (fontified t) 2970 2971 (fontified t face (rainbow-delimiters-depth-1-face)) 2971 2977 (fontified t) 2977 2988 (fontified t face font-lock-constant-face) 2988 2990 (fontified t) 2990 2994 (fontified t face font-lock-type-face) 2994 2995 (fontified t c-type c-decl-id-start face font-lock-type-face) 2995 2997 (fontified t) 2997 3011 (fontified t face font-lock-constant-face) 3011 3013 (fontified t) 3013 3021 (fontified t face font-lock-keyword-face) 3021 3022 (fontified t face (rainbow-delimiters-depth-1-face font-lock-function-name-face)) 3022 3023 (fontified t face (rainbow-delimiters-depth-1-face font-lock-function-name-face)) 3023 3024 (fontified t face (rainbow-delimiters-depth-1-face)) 3024 3025 (fontified t face (rainbow-delimiters-depth-1-face)) 3025 3026 (fontified t) 3026 3027 (fontified t face (rainbow-delimiters-depth-1-face)) 3027 3028 (fontified t) 3028 3030 (fontified t) 3030 3031 (fontified t face font-lock-keyword-face) 3031 3032 (fontified t face font-lock-keyword-face) 3032 3033 (fontified t face (rainbow-delimiters-depth-2-face)) 3033 3034 (fontified t face font-lock-negation-char-face) 3034 3035 (fontified t face (rainbow-delimiters-depth-3-face)) 3035 3036 (fontified t face font-lock-keyword-face) 3036 3037 (fontified t face font-lock-keyword-face) 3037 3038 (fontified t face font-lock-keyword-face) 3038 3039 (fontified t face font-lock-keyword-face) 3039 3040 (fontified t) 3040 3041 (fontified t) 3041 3042 (fontified t) 3042 3043 (fontified t) 3043 3044 (fontified t) 3044 3045 (fontified t) 3045 3046 (fontified t) 3046 3047 (fontified t) 3047 3048 (fontified t) 3048 3049 (fontified t) 3049 3050 (fontified t face (rainbow-delimiters-depth-3-face)) 3050 3051 (fontified t face (rainbow-delimiters-depth-2-face)) 3051 3052 (fontified t) 3052 3056 (fontified t) 3056 3059 (fontified t face font-lock-keyword-face) 3059 3060 (fontified t face (rainbow-delimiters-depth-2-face)) 3060 3071 (fontified t face font-lock-constant-face) 3071 3073 (fontified t) 3073 3077 (fontified t face font-lock-type-face) 3077 3078 (fontified t c-type c-decl-id-start face font-lock-type-face) 3078 3080 (fontified t) 3080 3087 (fontified t face font-lock-variable-name-face) 3087 3088 (fontified t) 3088 3092 (fontified t face font-lock-keyword-face) 3092 3098 (fontified t) 3098 3102 (fontified t face font-lock-keyword-face) 3102 3112 (fontified t) 3112 3113 (fontified t face (rainbow-delimiters-depth-3-face)) 3113 3114 (fontified t face (rainbow-delimiters-depth-3-face)) 3114 3115 (fontified t) 3115 3119 (fontified t face font-lock-keyword-face) 3119 3124 (fontified t) 3124 3125 (fontified t face (rainbow-delimiters-depth-2-face)) 3125 3126 (fontified t) 3126 3132 (fontified t) 3132 3134 (fontified t face font-lock-keyword-face) 3134 3135 (fontified t face (rainbow-delimiters-depth-2-face)) 3135 3136 (fontified t face (rainbow-delimiters-depth-3-face)) 3136 3145 (fontified t) 3145 3146 (fontified t face (rainbow-delimiters-depth-4-face)) 3146 3147 (fontified t) 3147 3151 (fontified t face font-lock-keyword-face) 3151 3156 (fontified t) 3156 3157 (fontified t face (rainbow-delimiters-depth-4-face)) 3157 3158 (fontified t face (rainbow-delimiters-depth-4-face)) 3158 3162 (fontified t face font-lock-keyword-face) 3162 3167 (fontified t) 3167 3168 (fontified t face (rainbow-delimiters-depth-5-face)) 3168 3172 (fontified t face font-lock-keyword-face) 3172 3175 (fontified t) 3175 3176 (fontified t face (rainbow-delimiters-depth-5-face)) 3176 3177 (fontified t) 3177 3181 (fontified t face font-lock-keyword-face) 3181 3186 (fontified t) 3186 3187 (fontified t face (rainbow-delimiters-depth-5-face)) 3187 3191 (fontified t face font-lock-keyword-face) 3191 3196 (fontified t) 3196 3197 (fontified t face (rainbow-delimiters-depth-5-face)) 3197 3198 (fontified t face (rainbow-delimiters-depth-4-face)) 3198 3199 (fontified t face (rainbow-delimiters-depth-3-face)) 3199 3210 (fontified t) 3210 3211 (fontified t face (rainbow-delimiters-depth-2-face)) 3211 3212 (fontified t) 3212 3213 (fontified t) 3213 3214 (fontified t) 3214 3215 (fontified t) 3215 3216 (fontified t) 3216 3217 (fontified t) 3217 3218 (fontified t face (rainbow-delimiters-depth-2-face)) 3218 3219 (fontified t) 3219 3220 (fontified t) 3220 3224 (fontified t face font-lock-keyword-face) 3224 3231 (fontified t) 3231 3232 (fontified t) 3232 3238 (fontified t face font-lock-keyword-face) 3238 3248 (fontified t) 3248 3254 (fontified t) 3254 3255 (fontified t face (rainbow-delimiters-depth-2-face)) 3255 3258 (fontified t) 3258 3259 (fontified t) 3259 3261 (fontified t) 3261 3262 (fontified t face font-lock-keyword-face) 3262 3263 (fontified t face font-lock-keyword-face) 3263 3264 (fontified t face (rainbow-delimiters-depth-2-face)) 3264 3265 (fontified t face font-lock-negation-char-face) 3265 3266 (fontified t face (rainbow-delimiters-depth-3-face)) 3266 3267 (fontified t face font-lock-keyword-face) 3267 3268 (fontified t face font-lock-keyword-face) 3268 3269 (fontified t face font-lock-keyword-face) 3269 3270 (fontified t face font-lock-keyword-face) 3270 3271 (fontified t) 3271 3272 (fontified t) 3272 3273 (fontified t) 3273 3274 (fontified t) 3274 3275 (fontified t) 3275 3276 (fontified t) 3276 3277 (fontified t) 3277 3278 (fontified t) 3278 3279 (fontified t) 3279 3280 (fontified t face (rainbow-delimiters-depth-3-face)) 3280 3281 (fontified t face (rainbow-delimiters-depth-2-face)) 3281 3282 (fontified t) 3282 3283 (fontified t) 3283 3284 (fontified t) 3284 3285 (fontified t face (rainbow-delimiters-depth-2-face)) 3285 3286 (fontified t) 3286 3290 (fontified t) 3290 3291 (fontified t face font-lock-type-face) 3291 3292 (fontified t face font-lock-type-face) 3292 3293 (fontified t c-type c-decl-id-start face font-lock-type-face) 3293 3294 (fontified t) 3294 3295 (fontified t face font-lock-variable-name-face) 3295 3296 (fontified t) 3296 3297 (fontified t) 3297 3301 (fontified t) 3301 3312 (fontified t face font-lock-constant-face) 3312 3313 (fontified t) 3313 3314 (fontified t) 3314 3318 (fontified t face font-lock-type-face) 3318 3319 (fontified t c-type c-decl-id-start face font-lock-type-face) 3319 3320 (fontified t) 3320 3321 (fontified t) 3321 3322 (fontified t face font-lock-variable-name-face) 3322 3323 (fontified t face font-lock-variable-name-face) 3323 3324 (fontified t face font-lock-variable-name-face) 3324 3325 (fontified t face font-lock-variable-name-face) 3325 3326 (fontified t face font-lock-variable-name-face) 3326 3327 (fontified t face font-lock-variable-name-face) 3327 3328 (fontified t face font-lock-variable-name-face) 3328 3329 (fontified t) 3329 3330 (fontified t) 3330 3331 (fontified t) 3331 3335 (fontified t) 3335 3336 (fontified t) 3336 3337 (fontified t) 3337 3338 (fontified t) 3338 3339 (fontified t) 3339 3340 (fontified t) 3340 3341 (fontified t) 3341 3342 (fontified t) 3342 3346 (c-in-sws t c-is-sws t fontified t) 3346 3347 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3347 3349 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3349 3350 (c-in-sws t fontified t face font-lock-comment-face) 3350 3351 (c-in-sws t fontified t face font-lock-comment-face) 3351 3352 (c-in-sws t fontified t face font-lock-comment-face) 3352 3353 (c-in-sws t fontified t face font-lock-comment-face) 3353 3354 (c-in-sws t fontified t face font-lock-comment-face) 3354 3355 (c-in-sws t fontified t face font-lock-comment-face) 3355 3359 (c-is-sws t c-in-sws t fontified t) 3359 3360 (c-is-sws t fontified t face font-lock-keyword-face) 3360 3361 (fontified t face font-lock-keyword-face) 3361 3362 (fontified t face font-lock-keyword-face) 3362 3363 (fontified t face font-lock-keyword-face) 3363 3364 (fontified t face font-lock-keyword-face) 3364 3365 (fontified t face font-lock-keyword-face) 3365 3366 (fontified t) 3366 3367 (fontified t face font-lock-type-face) 3367 3368 (fontified t face font-lock-type-face) 3368 3369 (fontified t face font-lock-type-face) 3369 3370 (fontified t c-type c-decl-id-start face font-lock-type-face) 3370 3371 (fontified t) 3371 3372 (fontified t face font-lock-variable-name-face) 3372 3373 (fontified t) 3373 3374 (fontified t) 3374 3375 (fontified t) 3375 3376 (fontified t) 3376 3377 (fontified t) 3377 3378 (fontified t) 3378 3379 (fontified t face (rainbow-delimiters-depth-3-face)) 3379 3380 (fontified t face font-lock-keyword-face) 3380 3381 (fontified t face font-lock-keyword-face) 3381 3382 (fontified t face font-lock-keyword-face) 3382 3383 (fontified t face font-lock-keyword-face) 3383 3384 (fontified t) 3384 3385 (fontified t) 3385 3386 (fontified t) 3386 3387 (fontified t) 3387 3388 (fontified t face (rainbow-delimiters-depth-3-face)) 3388 3389 (fontified t) 3389 3390 (fontified t) 3390 3394 (fontified t) 3394 3399 (fontified t face font-lock-keyword-face) 3399 3400 (fontified t face font-lock-keyword-face) 3400 3401 (fontified t) 3401 3402 (fontified t face font-lock-type-face) 3402 3403 (fontified t face font-lock-type-face) 3403 3404 (fontified t face font-lock-type-face) 3404 3405 (fontified t c-type c-decl-id-start face font-lock-type-face) 3405 3406 (fontified t) 3406 3407 (fontified t face font-lock-variable-name-face) 3407 3408 (fontified t face font-lock-variable-name-face) 3408 3409 (fontified t) 3409 3410 (fontified t) 3410 3411 (fontified t) 3411 3412 (fontified t) 3412 3413 (fontified t) 3413 3414 (fontified t) 3414 3415 (fontified t face (rainbow-delimiters-depth-3-face)) 3415 3416 (fontified t face font-lock-keyword-face) 3416 3417 (fontified t face font-lock-keyword-face) 3417 3418 (fontified t face font-lock-keyword-face) 3418 3419 (fontified t face font-lock-keyword-face) 3419 3420 (fontified t) 3420 3421 (fontified t) 3421 3422 (fontified t) 3422 3423 (fontified t) 3423 3424 (fontified t face (rainbow-delimiters-depth-3-face)) 3424 3425 (fontified t) 3425 3426 (fontified t) 3426 3430 (fontified t) 3430 3431 (fontified t) 3431 3432 (fontified t) 3432 3433 (fontified t) 3433 3434 (fontified t) 3434 3435 (fontified t) 3435 3436 (fontified t) 3436 3437 (fontified t) 3437 3441 (fontified t) 3441 3442 (fontified t face font-lock-keyword-face) 3442 3443 (fontified t face font-lock-keyword-face) 3443 3444 (fontified t face font-lock-keyword-face) 3444 3445 (fontified t face (rainbow-delimiters-depth-3-face)) 3445 3446 (fontified t) 3446 3447 (fontified t face font-lock-negation-char-face) 3447 3448 (fontified t face (rainbow-delimiters-depth-4-face)) 3448 3449 (fontified t face (rainbow-delimiters-depth-5-face)) 3449 3450 (fontified t) 3450 3451 (fontified t) 3451 3452 (fontified t) 3452 3453 (fontified t) 3453 3454 (fontified t) 3454 3455 (fontified t) 3455 3456 (fontified t) 3456 3457 (fontified t) 3457 3458 (fontified t) 3458 3459 (fontified t face (rainbow-delimiters-depth-6-face)) 3459 3460 (fontified t) 3460 3461 (fontified t face font-lock-keyword-face) 3461 3462 (fontified t face font-lock-keyword-face) 3462 3463 (fontified t face font-lock-keyword-face) 3463 3464 (fontified t face font-lock-keyword-face) 3464 3465 (fontified t) 3465 3466 (fontified t) 3466 3467 (fontified t) 3467 3468 (fontified t) 3468 3469 (fontified t) 3469 3470 (fontified t face (rainbow-delimiters-depth-6-face)) 3470 3471 (fontified t face (rainbow-delimiters-depth-6-face)) 3471 3472 (fontified t) 3472 3473 (fontified t) 3473 3474 (fontified t) 3474 3475 (fontified t) 3475 3476 (fontified t face (rainbow-delimiters-depth-6-face)) 3476 3477 (fontified t face (rainbow-delimiters-depth-5-face)) 3477 3478 (fontified t) 3478 3479 (fontified t) 3479 3480 (fontified t) 3480 3481 (fontified t) 3481 3482 (fontified t) 3482 3483 (fontified t) 3483 3484 (fontified t) 3484 3485 (fontified t) 3485 3486 (fontified t) 3486 3487 (fontified t) 3487 3488 (fontified t) 3488 3489 (fontified t face (rainbow-delimiters-depth-4-face)) 3489 3490 (fontified t) 3490 3491 (fontified t) 3491 3492 (fontified t) 3492 3493 (fontified t) 3493 3494 (fontified t) 3494 3495 (fontified t) 3495 3496 (fontified t) 3496 3497 (fontified t) 3497 3498 (fontified t) 3498 3499 (fontified t) 3499 3500 (fontified t) 3500 3501 (fontified t) 3501 3502 (fontified t) 3502 3503 (fontified t) 3503 3504 (fontified t face (rainbow-delimiters-depth-4-face)) 3504 3505 (fontified t face font-lock-keyword-face) 3505 3506 (fontified t face font-lock-keyword-face) 3506 3507 (fontified t face font-lock-keyword-face) 3507 3508 (fontified t face font-lock-keyword-face) 3508 3509 (fontified t) 3509 3510 (fontified t) 3510 3511 (fontified t) 3511 3512 (fontified t) 3512 3513 (fontified t face (rainbow-delimiters-depth-4-face)) 3513 3514 (fontified t face (rainbow-delimiters-depth-3-face)) 3514 3515 (fontified t) 3515 3516 (fontified t) 3516 3520 (fontified t) 3520 3521 (fontified t) 3521 3522 (fontified t) 3522 3523 (fontified t) 3523 3524 (fontified t) 3524 3525 (fontified t) 3525 3526 (fontified t) 3526 3527 (fontified t) 3527 3528 (fontified t) 3528 3533 (fontified t) 3533 3534 (fontified t face (rainbow-delimiters-depth-3-face)) 3534 3535 (fontified t face font-lock-keyword-face) 3535 3536 (fontified t face font-lock-keyword-face) 3536 3537 (fontified t face font-lock-keyword-face) 3537 3538 (fontified t face font-lock-keyword-face) 3538 3539 (fontified t) 3539 3540 (fontified t) 3540 3541 (fontified t) 3541 3542 (fontified t) 3542 3543 (fontified t face (rainbow-delimiters-depth-3-face)) 3543 3544 (fontified t) 3544 3545 (fontified t) 3545 3549 (c-in-sws t c-is-sws t fontified t) 3549 3550 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3550 3552 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3552 3557 (c-in-sws t fontified t face font-lock-comment-face) 3557 3558 (c-in-sws t fontified t face font-lock-comment-face) 3558 3559 (c-in-sws t fontified t face font-lock-comment-face) 3559 3560 (c-in-sws t fontified t face font-lock-comment-face) 3560 3561 (c-in-sws t fontified t face font-lock-comment-face) 3561 3562 (c-in-sws t fontified t face font-lock-comment-face) 3562 3563 (c-in-sws t fontified t face font-lock-comment-face) 3563 3564 (c-in-sws t fontified t face font-lock-comment-face) 3564 3565 (c-in-sws t fontified t face font-lock-comment-face) 3565 3566 (c-in-sws t fontified t face font-lock-comment-face) 3566 3567 (c-in-sws t fontified t face font-lock-comment-face) 3567 3568 (c-in-sws t fontified t face font-lock-comment-face) 3568 3569 (c-in-sws t fontified t face font-lock-comment-face) 3569 3570 (c-in-sws t fontified t face font-lock-comment-face) 3570 3571 (c-in-sws t fontified t face font-lock-comment-face) 3571 3572 (c-in-sws t fontified t face font-lock-comment-face) 3572 3573 (c-in-sws t fontified t face font-lock-comment-face) 3573 3574 (c-in-sws t fontified t face font-lock-comment-face) 3574 3575 (c-in-sws t fontified t face font-lock-comment-face) 3575 3576 (c-in-sws t fontified t face font-lock-comment-face) 3576 3577 (c-in-sws t fontified t face font-lock-comment-face) 3577 3578 (c-in-sws t fontified t face font-lock-comment-face) 3578 3579 (c-in-sws t fontified t face font-lock-comment-face) 3579 3580 (c-in-sws t fontified t face font-lock-comment-face) 3580 3581 (c-in-sws t fontified t face font-lock-comment-face) 3581 3582 (c-in-sws t fontified t face font-lock-comment-face) 3582 3583 (c-in-sws t fontified t face font-lock-comment-face) 3583 3584 (c-in-sws t fontified t face font-lock-comment-face) 3584 3585 (c-in-sws t fontified t face font-lock-comment-face) 3585 3586 (c-in-sws t fontified t face font-lock-comment-face) 3586 3587 (c-in-sws t fontified t face font-lock-comment-face) 3587 3588 (c-in-sws t fontified t face font-lock-comment-face) 3588 3589 (c-in-sws t fontified t face font-lock-comment-face) 3589 3590 (c-in-sws t fontified t face font-lock-comment-face) 3590 3591 (c-in-sws t fontified t face font-lock-comment-face) 3591 3592 (c-in-sws t fontified t face font-lock-comment-face) 3592 3593 (c-in-sws t fontified t face font-lock-comment-face) 3593 3594 (c-in-sws t fontified t face font-lock-comment-face) 3594 3595 (c-in-sws t fontified t face font-lock-comment-face) 3595 3596 (c-in-sws t fontified t face font-lock-comment-face) 3596 3597 (c-in-sws t fontified t face font-lock-comment-face) 3597 3598 (c-in-sws t fontified t face font-lock-comment-face) 3598 3599 (c-in-sws t fontified t face font-lock-comment-face) 3599 3600 (c-in-sws t fontified t face font-lock-comment-face) 3600 3601 (c-in-sws t fontified t face font-lock-comment-face) 3601 3602 (c-in-sws t fontified t face font-lock-comment-face) 3602 3603 (c-in-sws t fontified t face font-lock-comment-face) 3603 3604 (c-in-sws t fontified t face font-lock-comment-face) 3604 3605 (c-in-sws t fontified t face font-lock-comment-face) 3605 3606 (c-in-sws t fontified t face font-lock-comment-face) 3606 3607 (c-in-sws t fontified t face font-lock-comment-face) 3607 3608 (c-in-sws t fontified t face font-lock-comment-face) 3608 3609 (c-in-sws t fontified t face font-lock-comment-face) 3609 3610 (c-in-sws t fontified t face font-lock-comment-face) 3610 3611 (c-in-sws t fontified t face font-lock-comment-face) 3611 3612 (c-in-sws t fontified t face font-lock-comment-face) 3612 3613 (c-in-sws t fontified t face font-lock-comment-face) 3613 3614 (c-in-sws t fontified t face font-lock-comment-face) 3614 3615 (c-in-sws t fontified t face font-lock-comment-face) 3615 3616 (c-in-sws t fontified t face font-lock-comment-face) 3616 3617 (c-in-sws t fontified t face font-lock-comment-face) 3617 3618 (c-in-sws t fontified t face font-lock-comment-face) 3618 3619 (c-in-sws t fontified t face font-lock-comment-face) 3619 3620 (c-in-sws t fontified t) 3620 3621 (c-is-sws t fontified t) 3621 3624 (c-is-sws t fontified t) 3624 3625 (c-is-sws t fontified t face font-lock-keyword-face) 3625 3626 (fontified t face font-lock-keyword-face) 3626 3627 (fontified t face font-lock-keyword-face) 3627 3628 (fontified t face font-lock-keyword-face) 3628 3629 (fontified t face font-lock-keyword-face) 3629 3630 (fontified t face font-lock-keyword-face) 3630 3631 (fontified t) 3631 3632 (fontified t) 3632 3633 (fontified t) 3633 3634 (fontified t) 3634 3635 (fontified t) 3635 3636 (fontified t) 3636 3637 (fontified t) 3637 3638 (fontified t) 3638 3639 (fontified t) 3639 3640 (fontified t) 3640 3644 (fontified t) 3644 3645 (fontified t) 3645 3652 (fontified t) 3652 3654 (fontified t) 3654 3655 (fontified t face (rainbow-delimiters-depth-2-face)) 3655 3656 (fontified t) 3656 3660 (fontified t) 3660 3661 (fontified t) 3661 3662 (fontified t face (rainbow-delimiters-depth-1-face)) 3662 3663 (fontified t) 3663 3664 (fontified t) 3664 3675 (fontified t face font-lock-constant-face) 3675 3677 (fontified t) 3677 3681 (fontified t face font-lock-type-face) 3681 3682 (fontified t c-type c-decl-id-start face font-lock-type-face) 3682 3684 (fontified t) 3684 3685 (fontified t face font-lock-constant-face) 3685 3686 (fontified t face font-lock-constant-face) 3686 3687 (fontified t face font-lock-constant-face) 3687 3688 (fontified t face font-lock-constant-face) 3688 3689 (fontified t face font-lock-constant-face) 3689 3690 (fontified t face font-lock-constant-face) 3690 3691 (fontified t face font-lock-constant-face) 3691 3692 (fontified t face font-lock-constant-face) 3692 3693 (fontified t face font-lock-constant-face) 3693 3694 (fontified t face font-lock-constant-face) 3694 3695 (fontified t face font-lock-constant-face) 3695 3696 (fontified t face font-lock-constant-face) 3696 3697 (fontified t face font-lock-constant-face) 3697 3698 (fontified t face font-lock-constant-face) 3698 3699 (fontified t) 3699 3700 (fontified t) 3700 3708 (fontified t face font-lock-keyword-face) 3708 3709 (fontified t face (rainbow-delimiters-depth-1-face font-lock-function-name-face)) 3709 3710 (fontified t face (rainbow-delimiters-depth-1-face font-lock-function-name-face)) 3710 3711 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 3711 3712 (fontified t face font-lock-constant-face) 3712 3713 (fontified t face font-lock-constant-face) 3713 3714 (fontified t face font-lock-constant-face) 3714 3715 (fontified t) 3715 3716 (fontified t) 3716 3722 (fontified t face font-lock-type-face) 3722 3723 (fontified t) 3723 3724 (fontified t face font-lock-variable-name-face) 3724 3725 (fontified t face font-lock-variable-name-face) 3725 3726 (fontified t face font-lock-variable-name-face) 3726 3727 (fontified t face (rainbow-delimiters-depth-1-face)) 3727 3728 (fontified t) 3728 3729 (fontified t face (rainbow-delimiters-depth-1-face)) 3729 3730 (fontified t) 3730 3732 (fontified t) 3732 3733 (fontified t) 3733 3734 (fontified t) 3734 3735 (fontified t) 3735 3736 (fontified t) 3736 3737 (fontified t) 3737 3738 (fontified t) 3738 3739 (fontified t) 3739 3741 (fontified t) 3741 3752 (fontified t face font-lock-constant-face) 3752 3754 (fontified t) 3754 3758 (fontified t face font-lock-type-face) 3758 3759 (fontified t c-type c-decl-id-start face font-lock-type-face) 3759 3760 (fontified t) 3760 3761 (fontified t) 3761 3762 (fontified t face font-lock-variable-name-face) 3762 3763 (fontified t face font-lock-variable-name-face) 3763 3764 (fontified t face font-lock-variable-name-face) 3764 3765 (fontified t face font-lock-variable-name-face) 3765 3766 (fontified t face font-lock-variable-name-face) 3766 3767 (fontified t face font-lock-variable-name-face) 3767 3768 (fontified t face font-lock-variable-name-face) 3768 3769 (fontified t) 3769 3770 (fontified t) 3770 3772 (fontified t) 3772 3773 (fontified t face font-lock-keyword-face) 3773 3774 (fontified t face font-lock-keyword-face) 3774 3775 (fontified t face font-lock-keyword-face) 3775 3776 (fontified t face (rainbow-delimiters-depth-2-face)) 3776 3777 (fontified t face font-lock-type-face) 3777 3778 (fontified t face font-lock-type-face) 3778 3779 (fontified t c-type c-decl-id-start face font-lock-type-face) 3779 3780 (fontified t) 3780 3781 (fontified t face font-lock-variable-name-face) 3781 3782 (fontified t) 3782 3783 (fontified t) 3783 3784 (fontified t) 3784 3785 (fontified t) 3785 3786 (fontified t) 3786 3787 (fontified t) 3787 3788 (fontified t) 3788 3789 (fontified t) 3789 3790 (fontified t) 3790 3791 (fontified t) 3791 3792 (fontified t) 3792 3793 (fontified t) 3793 3794 (fontified t) 3794 3795 (fontified t) 3795 3796 (fontified t) 3796 3797 (fontified t face (rainbow-delimiters-depth-3-face)) 3797 3798 (fontified t face (rainbow-delimiters-depth-3-face)) 3798 3799 (fontified t) 3799 3800 (fontified t) 3800 3801 (fontified t) 3801 3802 (fontified t) 3802 3803 (fontified t face (rainbow-delimiters-depth-2-face)) 3803 3804 (fontified t face (rainbow-delimiters-depth-2-face)) 3804 3805 (fontified t) 3805 3806 (fontified t) 3806 3807 (fontified t) 3807 3808 (fontified t) 3808 3809 (fontified t) 3809 3810 (fontified t) 3810 3811 (fontified t) 3811 3814 (fontified t) 3814 3815 (rear-nonsticky t fontified t) 3815 3817 (fontified t face font-lock-keyword-face) 3817 3818 (fontified t face (rainbow-delimiters-depth-3-face)) 3818 3819 (fontified t face (rainbow-delimiters-depth-4-face)) 3819 3828 (fontified t) 3828 3829 (fontified t face (rainbow-delimiters-depth-5-face)) 3829 3830 (fontified t) 3830 3834 (fontified t face font-lock-keyword-face) 3834 3839 (fontified t) 3839 3840 (fontified t face (rainbow-delimiters-depth-5-face)) 3840 3841 (fontified t face (rainbow-delimiters-depth-5-face)) 3841 3844 (fontified t) 3844 3845 (fontified t face (rainbow-delimiters-depth-6-face)) 3845 3846 (fontified t) 3846 3847 (fontified t face (rainbow-delimiters-depth-6-face)) 3847 3848 (fontified t) 3848 3851 (fontified t) 3851 3852 (fontified t face (rainbow-delimiters-depth-6-face)) 3852 3855 (fontified t) 3855 3856 (fontified t face (rainbow-delimiters-depth-6-face)) 3856 3857 (fontified t face (rainbow-delimiters-depth-5-face)) 3857 3858 (fontified t face (rainbow-delimiters-depth-4-face)) 3858 3869 (fontified t) 3869 3870 (fontified t face (rainbow-delimiters-depth-3-face)) 3870 3871 (fontified t) 3871 3877 (fontified t) 3877 3878 (fontified t face font-lock-keyword-face) 3878 3879 (fontified t face font-lock-keyword-face) 3879 3880 (fontified t face font-lock-keyword-face) 3880 3881 (fontified t face font-lock-keyword-face) 3881 3882 (fontified t face font-lock-keyword-face) 3882 3883 (fontified t face font-lock-keyword-face) 3883 3884 (fontified t) 3884 3885 (fontified t) 3885 3886 (fontified t) 3886 3887 (fontified t) 3887 3888 (fontified t) 3888 3889 (fontified t) 3889 3890 (fontified t) 3890 3891 (fontified t) 3891 3892 (fontified t) 3892 3893 (fontified t face (rainbow-delimiters-depth-2-face)) 3893 3894 (fontified t) 3894 3897 (fontified t) 3897 3898 (fontified t) 3898 3899 (fontified t face (rainbow-delimiters-depth-1-face))) . 43) (undo-tree-id1739 . -18) (undo-tree-id1740 . -3557) (undo-tree-id1741 . -3617) (undo-tree-id1742 . 355) (undo-tree-id1743 . -3891) (undo-tree-id1744 . -3028) (undo-tree-id1745 . -3638) (undo-tree-id1746 . -2977) (undo-tree-id1747 . -3126) (undo-tree-id1748 . -3556) (undo-tree-id1749 . -2451) (undo-tree-id1750 . -2573) (undo-tree-id1751 . -2573) (undo-tree-id1752 . -2573) (undo-tree-id1753 . -2573) (undo-tree-id1754 . -2573) (undo-tree-id1755 . -2573) (undo-tree-id1756 . -2699) (undo-tree-id1757 . -2699) (undo-tree-id1758 . -2695) (undo-tree-id1759 . -2695) (undo-tree-id1760 . -2696) (undo-tree-id1761 . -2696) (undo-tree-id1762 . -2701) (undo-tree-id1763 . -2701) (undo-tree-id1764 . -2573) (undo-tree-id1765 . -3638) (undo-tree-id1766 . -2702) (undo-tree-id1767 . -2702) (undo-tree-id1768 . -2573) (undo-tree-id1769 . -2573) (undo-tree-id1770 . -3231) (undo-tree-id1771 . -3231) (undo-tree-id1772 . -3248) (undo-tree-id1773 . -3248) (undo-tree-id1774 . -3256) (undo-tree-id1775 . -3256) (undo-tree-id1776 . -3259) (undo-tree-id1777 . -3259) (undo-tree-id1778 . -3282) (undo-tree-id1779 . -3282) (undo-tree-id1780 . -3286) (undo-tree-id1781 . -3286) (undo-tree-id1782 . -3297) (undo-tree-id1783 . -3297) (undo-tree-id1784 . -3330) (undo-tree-id1785 . -3330) (undo-tree-id1786 . -3331) (undo-tree-id1787 . -3331) (undo-tree-id1788 . -3342) (undo-tree-id1789 . -3342) (undo-tree-id1790 . -3619) (undo-tree-id1791 . -3619) (undo-tree-id1792 . -3545) (undo-tree-id1793 . -3545) (undo-tree-id1794 . -3516) (undo-tree-id1795 . -3516) (undo-tree-id1796 . -3437) (undo-tree-id1797 . -3437) (undo-tree-id1798 . -3426) (undo-tree-id1799 . -3426) (undo-tree-id1800 . -3390) (undo-tree-id1801 . -3390) (undo-tree-id1802 . -3355) (undo-tree-id1803 . -3355) (undo-tree-id1804 . -2468) (undo-tree-id1805 . -3543) (undo-tree-id1806 . -3543) (undo-tree-id1807 . -3620) (undo-tree-id1808 . -3620) (undo-tree-id1809 . -2743) (undo-tree-id1810 . -2743) (undo-tree-id1811 . -2745) (undo-tree-id1812 . -2745) (undo-tree-id1813 . -2762) (undo-tree-id1814 . -2762) (undo-tree-id1815 . -2777) (undo-tree-id1816 . -2777) (undo-tree-id1817 . -2899) (undo-tree-id1818 . -2899) (undo-tree-id1819 . -2900) (undo-tree-id1820 . -2900) (undo-tree-id1821 . -2903) (undo-tree-id1822 . -2903) (undo-tree-id1823 . -2909) (undo-tree-id1824 . -2909) (undo-tree-id1825 . -2910) (undo-tree-id1826 . -2910) (undo-tree-id1827 . -2944) (undo-tree-id1828 . -2944) (undo-tree-id1829 . -2946) (undo-tree-id1830 . -2946) (undo-tree-id1831 . -2966) (undo-tree-id1832 . -2966) (undo-tree-id1833 . -2967) (undo-tree-id1834 . -2967) (undo-tree-id1835 . -2970) (undo-tree-id1836 . -2970) (undo-tree-id1837 . -2976) (undo-tree-id1838 . -2976) (undo-tree-id1839 . -2977) (undo-tree-id1840 . -2977) (undo-tree-id1841 . -3026) (undo-tree-id1842 . -3026) (undo-tree-id1843 . -3028) (undo-tree-id1844 . -3028) (undo-tree-id1845 . -3052) (undo-tree-id1846 . -3052) (undo-tree-id1847 . -3126) (undo-tree-id1848 . -3126) (undo-tree-id1849 . -3219) (undo-tree-id1850 . -3219) (undo-tree-id1851 . -3545) (undo-tree-id1852 . 280) (undo-tree-id1853 . -3556) (undo-tree-id1854 . -3556) (t 26079 30492 102331 701000)) nil (26079 33851 460283 453000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3417) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("f" 0 1 (fontified t)) . -3418) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (#("g" 0 1 (fontified t)) . -3419) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (#("e" 0 1 (fontified t)) . -3420) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (#("t" 0 1 (fontified t)) . -3421) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (#("c" 0 1 (fontified t)) . -3422) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3423) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (#("t" 0 1 (fontified t)) . -3424) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (#("h" 0 1 (fontified t)) . -3425) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (#("i" 0 1 (fontified t)) . -3426) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -3427) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (#("-" 0 1 (fontified t)) . -3428) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (#(">" 0 1 (fontified t)) . -3429) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (#("f" 0 1 (fontified t)) . -3430) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (#("p" 0 1 (fontified t)) . -3431) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3432) (undo-tree-id1312 . -1) (undo-tree-id1313 . 1) (undo-tree-id1314 . -1) 3433) ((3417 . 3433)) (26079 30356 260725 176000) 0 nil])
([nil nil ((43 . 3942) (#("iostream>
#include \"token.h\"
#include \"debug.h\"
#include <vector>
#include <cctype>


// enum{atom_obj,atom_var,var,Inter,Init} select_token_class::stat=Init;
// enum{Atom_obj,Atom_var,Var,Inter,Init} select_token_class::stat=Init;
select_token_class::Stat select_token_class::stat=Init;
bool select_token_class::select_token_fun_ptr(char c, char c1)
{
  // printf(\"lll\\n\");
  // debug;
here:  
  switch(stat)
  {
  case Init:
    if(is_inter(c)) stat=Inter;
    else if(is_ter(c)) stat=Ter;
    else if(isupper(c)||!(c-'_')) stat=Var;
    else if(is_atom_obj(c)) stat=Atom_obj;
    else if(is_atom_var(c)) stat=Atom_var;
    else if(!(c-' ')||!(c-'\\n')) break;
    goto here;

  case Ter:
    // debug;
    return true;
    
  case Atom_obj:
    if(is_atom_obj(c1)) return false;
    //stat=Init;
    break;
    
  case Atom_var:
    // debug;
    if(is_atom_var(c1)) return false;
    //stat=Init;
    break;
    
  case Var:
    if(is_atom_var(c1)) return false;
    //stat=Init;
    break;
    
  case Inter:
    if(is_inter(c1)) return false;
    //stat=Init;
    break;

    //default:  
    
  }  

  return true;
  
  
}  

void select_token_class::select_set_token_ptr(token_class::token &tok)
{
  // printf(\"aaa\\n\");
  // debug;
  switch(stat)
  {
  case Atom_var:  
  case Atom_obj: tok.token_type=token_class::token::Atom; break;
  case Var:tok.token_type=token_class::token::Var; break;
  case Inter:tok.token_type=token_class::token::Inter; break;  
  case Ter:tok.token_type=token_class::token::Ter;break;  
    
  }

  stat=Init;
  
  
}  

bool select_token_class::is_atom_var(char c)
{
  if(c<='z'&&c>='a') return true;
  if(c<='Z'&&c>='A') return true;
  if(c>47&&c<58) return true;
  if(!(c-'_')) return true;
  
  return false;
  
  
}
  
bool select_token_class::is_atom_obj(char c)
{
  static std::vector<char> enable_obj(ENABLE_OBJ_INPUT);

  for(int i=0;i<enable_obj.size();i++) if(!(c-enable_obj[i])) return true;
  
  return false;

  
}
  
bool select_token_class::is_ter(char c)
{
  static std::vector<char> ter_obj(ENABLE_TER_INPUT);

  for(int i=0;i<ter_obj.size();i++) if(!(c-ter_obj[i])) return true;
  // std::cout<<c<<'\\t'<<ter_obj[1]<<std::endl;
  // std::cin;

  return false;
  
  
}
  
bool select_token_class::is_inter(char c)
{
  if(c>47&&c<58) return true;
  
  return false;

  
}  " 0 8 (fontified t face font-lock-string-face c-in-sws t) 8 9 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) c-in-sws t) 9 10 (fontified t c-in-sws t) 10 11 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 11 18 (fontified t face font-lock-preprocessor-face c-in-sws t) 18 19 (fontified t c-in-sws t) 19 28 (fontified t face font-lock-string-face c-in-sws t) 28 29 (fontified t c-in-sws t) 29 30 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 30 37 (fontified t face font-lock-preprocessor-face c-in-sws t) 37 38 (fontified t c-in-sws t) 38 47 (fontified t face font-lock-string-face c-in-sws t) 47 48 (fontified t c-in-sws t) 48 49 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 49 56 (fontified t face font-lock-preprocessor-face c-in-sws t) 56 57 (fontified t c-in-sws t) 57 58 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 58 64 (fontified t face font-lock-string-face c-in-sws t) 64 65 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 65 66 (fontified t c-in-sws t) 66 67 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 67 74 (fontified t face font-lock-preprocessor-face c-in-sws t) 74 75 (fontified t c-in-sws t) 75 76 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (4 . 62) c-in-sws t) 76 82 (fontified t face font-lock-string-face c-in-sws t) 82 83 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) syntax-table (5 . 60) c-in-sws t) 83 84 (fontified t c-in-sws t) 84 86 (fontified t c-in-sws t) 86 87 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 87 89 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 89 102 (fontified t face font-lock-comment-face c-in-sws t) 102 103 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 103 111 (fontified t face font-lock-comment-face c-in-sws t) 111 112 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 112 115 (fontified t face font-lock-comment-face c-in-sws t) 115 116 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 116 121 (fontified t face font-lock-comment-face c-in-sws t) 121 122 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 122 159 (fontified t face font-lock-comment-face c-in-sws t) 159 162 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 162 175 (fontified t face font-lock-comment-face c-in-sws t) 175 176 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 176 184 (fontified t face font-lock-comment-face c-in-sws t) 184 185 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 185 188 (fontified t face font-lock-comment-face c-in-sws t) 188 189 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 189 194 (fontified t face font-lock-comment-face c-in-sws t) 194 195 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 195 232 (fontified t face font-lock-comment-face c-in-sws t) 232 233 (fontified t face font-lock-constant-face c-is-sws t) 233 250 (fontified t face font-lock-constant-face) 250 252 (fontified t) 252 255 (fontified t face font-lock-type-face) 255 256 (fontified t c-type c-decl-id-start face font-lock-type-face) 256 257 (fontified t) 257 275 (fontified t face font-lock-constant-face) 275 277 (fontified t) 277 281 (fontified t face font-lock-variable-name-face) 281 288 (fontified t) 288 291 (fontified t face font-lock-type-face) 291 292 (fontified t c-type c-decl-id-start face font-lock-type-face) 292 293 (fontified t) 293 311 (fontified t face font-lock-constant-face) 311 313 (fontified t) 313 333 (fontified t face font-lock-function-name-face) 333 334 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 334 338 (fontified t face font-lock-type-face) 338 339 (fontified t) 339 340 (fontified t face font-lock-variable-name-face) 340 341 (fontified t c-type c-decl-arg-start) 341 342 (fontified t) 342 346 (fontified t face font-lock-type-face) 346 347 (fontified t) 347 349 (fontified t face font-lock-variable-name-face) 349 350 (fontified t face (rainbow-delimiters-depth-1-face)) 350 351 (fontified t) 351 352 (fontified t face (rainbow-delimiters-depth-1-face)) 352 353 (fontified t) 353 355 (fontified t c-in-sws t c-is-sws t) 355 356 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 356 358 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 358 375 (fontified t face font-lock-comment-face c-in-sws t) 375 377 (fontified t c-in-sws t) 377 380 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 380 387 (fontified t face font-lock-comment-face c-in-sws t) 387 388 (fontified t c-is-sws t face font-lock-constant-face) 388 391 (fontified t face font-lock-constant-face) 391 392 (fontified t c-type c-decl-end) 392 397 (fontified t) 397 403 (fontified t face font-lock-keyword-face) 403 404 (fontified t face (rainbow-delimiters-depth-2-face)) 404 408 (fontified t) 408 409 (fontified t face (rainbow-delimiters-depth-2-face)) 409 412 (fontified t) 412 413 (fontified t face (rainbow-delimiters-depth-2-face)) 413 416 (fontified t) 416 420 (fontified t face font-lock-keyword-face) 420 425 (fontified t) 425 426 (fontified t c-type c-decl-end) 426 431 (fontified t) 431 433 (fontified t face font-lock-keyword-face) 433 434 (fontified t face (rainbow-delimiters-depth-3-face)) 434 442 (fontified t) 442 443 (fontified t face (rainbow-delimiters-depth-4-face)) 443 444 (fontified t) 444 445 (fontified t face (rainbow-delimiters-depth-4-face)) 445 446 (fontified t face (rainbow-delimiters-depth-3-face)) 446 463 (fontified t) 463 467 (fontified t face font-lock-keyword-face) 467 468 (fontified t) 468 470 (fontified t face font-lock-keyword-face) 470 471 (fontified t face (rainbow-delimiters-depth-3-face)) 471 477 (fontified t) 477 478 (fontified t face (rainbow-delimiters-depth-4-face)) 478 479 (fontified t) 479 480 (fontified t face (rainbow-delimiters-depth-4-face)) 480 481 (fontified t face (rainbow-delimiters-depth-3-face)) 481 496 (fontified t) 496 500 (fontified t face font-lock-keyword-face) 500 501 (fontified t) 501 503 (fontified t face font-lock-keyword-face) 503 504 (fontified t face (rainbow-delimiters-depth-3-face)) 504 511 (fontified t) 511 512 (fontified t face (rainbow-delimiters-depth-4-face)) 512 513 (fontified t) 513 514 (fontified t face (rainbow-delimiters-depth-4-face)) 514 516 (fontified t) 516 517 (fontified t face font-lock-negation-char-face) 517 518 (fontified t face (rainbow-delimiters-depth-4-face)) 518 520 (fontified t) 520 523 (fontified t face font-lock-string-face) 523 524 (fontified t face (rainbow-delimiters-depth-4-face)) 524 525 (fontified t face (rainbow-delimiters-depth-3-face)) 525 540 (fontified t) 540 544 (fontified t face font-lock-keyword-face) 544 545 (fontified t) 545 547 (fontified t face font-lock-keyword-face) 547 548 (fontified t face (rainbow-delimiters-depth-3-face)) 548 559 (fontified t) 559 560 (fontified t face (rainbow-delimiters-depth-4-face)) 560 561 (fontified t) 561 562 (fontified t face (rainbow-delimiters-depth-4-face)) 562 563 (fontified t face (rainbow-delimiters-depth-3-face)) 563 583 (fontified t) 583 587 (fontified t face font-lock-keyword-face) 587 588 (fontified t) 588 590 (fontified t face font-lock-keyword-face) 590 591 (fontified t face (rainbow-delimiters-depth-3-face)) 591 602 (fontified t) 602 603 (fontified t face (rainbow-delimiters-depth-4-face)) 603 604 (fontified t) 604 605 (fontified t face (rainbow-delimiters-depth-4-face)) 605 606 (fontified t face (rainbow-delimiters-depth-3-face)) 606 626 (fontified t) 626 630 (fontified t face font-lock-keyword-face) 630 631 (fontified t) 631 633 (fontified t face font-lock-keyword-face) 633 634 (fontified t face (rainbow-delimiters-depth-3-face)) 634 635 (fontified t face font-lock-negation-char-face) 635 636 (fontified t face (rainbow-delimiters-depth-4-face)) 636 638 (fontified t) 638 641 (fontified t face font-lock-string-face) 641 642 (fontified t face (rainbow-delimiters-depth-4-face)) 642 644 (fontified t) 644 645 (fontified t face font-lock-negation-char-face) 645 646 (fontified t face (rainbow-delimiters-depth-4-face)) 646 648 (fontified t) 648 652 (fontified t face font-lock-string-face) 652 653 (fontified t face (rainbow-delimiters-depth-4-face)) 653 654 (fontified t face (rainbow-delimiters-depth-3-face)) 654 655 (fontified t) 655 660 (fontified t face font-lock-keyword-face) 660 666 (fontified t) 666 670 (fontified t face font-lock-keyword-face) 670 671 (fontified t) 671 675 (fontified t face font-lock-constant-face) 675 680 (fontified t) 680 684 (fontified t face font-lock-keyword-face) 684 688 (fontified t) 688 689 (fontified t c-type c-decl-end) 689 694 (fontified t) 694 697 (fontified t face font-lock-comment-delimiter-face) 697 704 (fontified t face font-lock-comment-face) 704 708 (fontified t) 708 714 (fontified t face font-lock-keyword-face) 714 715 (fontified t) 715 719 (fontified t face font-lock-constant-face) 719 728 (fontified t) 728 732 (fontified t face font-lock-keyword-face) 732 741 (fontified t) 741 742 (fontified t c-type c-decl-end) 742 747 (fontified t) 747 749 (fontified t face font-lock-keyword-face) 749 750 (fontified t face (rainbow-delimiters-depth-3-face)) 750 761 (fontified t) 761 762 (fontified t face (rainbow-delimiters-depth-4-face)) 762 764 (fontified t) 764 765 (fontified t face (rainbow-delimiters-depth-4-face)) 765 766 (fontified t face (rainbow-delimiters-depth-3-face)) 766 767 (fontified t) 767 773 (fontified t face font-lock-keyword-face) 773 774 (fontified t) 774 779 (fontified t face font-lock-constant-face) 779 785 (fontified t) 785 787 (fontified t face font-lock-comment-delimiter-face) 787 798 (fontified t face font-lock-comment-face) 798 802 (fontified t) 802 807 (fontified t face font-lock-keyword-face) 807 816 (fontified t) 816 820 (fontified t face font-lock-keyword-face) 820 829 (fontified t) 829 830 (fontified t c-type c-decl-end) 830 835 (fontified t) 835 838 (fontified t face font-lock-comment-delimiter-face) 838 845 (fontified t face font-lock-comment-face) 845 849 (fontified t) 849 851 (fontified t face font-lock-keyword-face) 851 852 (fontified t face (rainbow-delimiters-depth-3-face)) 852 863 (fontified t) 863 864 (fontified t face (rainbow-delimiters-depth-4-face)) 864 866 (fontified t) 866 867 (fontified t face (rainbow-delimiters-depth-4-face)) 867 868 (fontified t face (rainbow-delimiters-depth-3-face)) 868 869 (fontified t) 869 875 (fontified t face font-lock-keyword-face) 875 876 (fontified t) 876 881 (fontified t face font-lock-constant-face) 881 887 (fontified t) 887 889 (fontified t face font-lock-comment-delimiter-face) 889 900 (fontified t face font-lock-comment-face) 900 904 (fontified t) 904 909 (fontified t face font-lock-keyword-face) 909 918 (fontified t) 918 922 (fontified t face font-lock-keyword-face) 922 926 (fontified t) 926 927 (fontified t c-type c-decl-end) 927 932 (fontified t) 932 934 (fontified t face font-lock-keyword-face) 934 935 (fontified t face (rainbow-delimiters-depth-3-face)) 935 946 (fontified t) 946 947 (fontified t face (rainbow-delimiters-depth-4-face)) 947 949 (fontified t) 949 950 (fontified t face (rainbow-delimiters-depth-4-face)) 950 951 (fontified t face (rainbow-delimiters-depth-3-face)) 951 952 (fontified t) 952 958 (fontified t face font-lock-keyword-face) 958 959 (fontified t) 959 964 (fontified t face font-lock-constant-face) 964 970 (fontified t) 970 972 (fontified t face font-lock-comment-delimiter-face) 972 983 (fontified t face font-lock-comment-face) 983 987 (fontified t) 987 992 (fontified t face font-lock-keyword-face) 992 1001 (fontified t) 1001 1005 (fontified t face font-lock-keyword-face) 1005 1011 (fontified t) 1011 1012 (fontified t c-type c-decl-end) 1012 1017 (fontified t) 1017 1019 (fontified t face font-lock-keyword-face) 1019 1020 (fontified t face (rainbow-delimiters-depth-3-face)) 1020 1028 (fontified t) 1028 1029 (fontified t face (rainbow-delimiters-depth-4-face)) 1029 1031 (fontified t) 1031 1032 (fontified t face (rainbow-delimiters-depth-4-face)) 1032 1033 (fontified t face (rainbow-delimiters-depth-3-face)) 1033 1034 (fontified t) 1034 1040 (fontified t face font-lock-keyword-face) 1040 1041 (fontified t) 1041 1046 (fontified t face font-lock-constant-face) 1046 1052 (fontified t) 1052 1054 (fontified t face font-lock-comment-delimiter-face) 1054 1065 (fontified t face font-lock-comment-face) 1065 1069 (fontified t) 1069 1074 (fontified t face font-lock-keyword-face) 1074 1081 (fontified t) 1081 1083 (fontified t face font-lock-comment-delimiter-face) 1083 1094 (fontified t face font-lock-comment-face) 1094 1101 (fontified t) 1101 1102 (fontified t face (rainbow-delimiters-depth-2-face)) 1102 1108 (fontified t) 1108 1114 (fontified t face font-lock-keyword-face) 1114 1115 (fontified t) 1115 1119 (fontified t face font-lock-constant-face) 1119 1127 (fontified t) 1127 1128 (fontified t face (rainbow-delimiters-depth-1-face)) 1128 1132 (fontified t) 1132 1135 (fontified t face font-lock-type-face) 1135 1136 (fontified t c-type c-decl-id-start face font-lock-type-face) 1136 1137 (fontified t) 1137 1155 (fontified t face font-lock-constant-face) 1155 1157 (fontified t) 1157 1177 (fontified t face font-lock-function-name-face) 1177 1178 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1178 1189 (fontified t face font-lock-constant-face) 1189 1191 (fontified t) 1191 1196 (fontified t face font-lock-type-face) 1196 1198 (fontified t) 1198 1201 (fontified t face font-lock-variable-name-face) 1201 1202 (fontified t face (rainbow-delimiters-depth-1-face)) 1202 1203 (fontified t) 1203 1204 (fontified t face (rainbow-delimiters-depth-1-face)) 1204 1207 (fontified t) 1207 1210 (fontified t face font-lock-comment-delimiter-face) 1210 1227 (fontified t face font-lock-comment-face) 1227 1229 (fontified t) 1229 1232 (fontified t face font-lock-comment-delimiter-face) 1232 1239 (fontified t face font-lock-comment-face) 1239 1241 (fontified t) 1241 1247 (fontified t face font-lock-keyword-face) 1247 1248 (fontified t face (rainbow-delimiters-depth-2-face)) 1248 1252 (fontified t) 1252 1253 (fontified t face (rainbow-delimiters-depth-2-face)) 1253 1256 (fontified t) 1256 1257 (fontified t face (rainbow-delimiters-depth-2-face)) 1257 1260 (fontified t) 1260 1264 (fontified t face font-lock-keyword-face) 1264 1273 (fontified t) 1273 1274 (fontified t c-type c-decl-end) 1274 1279 (fontified t) 1279 1283 (fontified t face font-lock-keyword-face) 1283 1292 (fontified t) 1292 1293 (fontified t c-type c-decl-end) 1293 1309 (fontified t) 1309 1320 (fontified t face font-lock-constant-face) 1320 1322 (fontified t) 1322 1327 (fontified t face font-lock-constant-face) 1327 1335 (fontified t) 1335 1340 (fontified t face font-lock-keyword-face) 1340 1344 (fontified t) 1344 1348 (fontified t face font-lock-keyword-face) 1348 1352 (fontified t) 1352 1353 (fontified t c-type c-decl-end) 1353 1368 (fontified t) 1368 1379 (fontified t face font-lock-constant-face) 1379 1381 (fontified t) 1381 1386 (fontified t face font-lock-constant-face) 1386 1393 (fontified t) 1393 1398 (fontified t face font-lock-keyword-face) 1398 1402 (fontified t) 1402 1406 (fontified t face font-lock-keyword-face) 1406 1412 (fontified t) 1412 1413 (fontified t c-type c-decl-end) 1413 1428 (fontified t) 1428 1439 (fontified t face font-lock-constant-face) 1439 1441 (fontified t) 1441 1446 (fontified t face font-lock-constant-face) 1446 1455 (fontified t) 1455 1460 (fontified t face font-lock-keyword-face) 1460 1466 (fontified t) 1466 1470 (fontified t face font-lock-keyword-face) 1470 1474 (fontified t) 1474 1475 (fontified t c-type c-decl-end) 1475 1490 (fontified t) 1490 1500 (fontified t face font-lock-constant-face) 1500 1501 (fontified t face font-lock-constant-face) 1501 1503 (fontified t) 1503 1508 (fontified t face font-lock-constant-face) 1508 1514 (fontified t) 1514 1519 (fontified t face font-lock-keyword-face) 1519 1523 (fontified t) 1556 1557 (fontified t) 1557 1560 (fontified t face font-lock-type-face) 1560 1561 (fontified t c-type c-decl-id-start face font-lock-type-face) 1561 1562 (fontified t) 1562 1580 (fontified t face font-lock-constant-face) 1580 1582 (fontified t) 1582 1593 (fontified t face font-lock-function-name-face) 1593 1594 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1594 1598 (fontified t face font-lock-type-face) 1598 1599 (fontified t) 1599 1600 (fontified t face font-lock-variable-name-face) 1600 1601 (fontified t face (rainbow-delimiters-depth-1-face)) 1601 1602 (fontified t) 1602 1603 (fontified t face (rainbow-delimiters-depth-1-face)) 1603 1606 (fontified t) 1606 1608 (fontified t face font-lock-keyword-face) 1608 1609 (fontified t face (rainbow-delimiters-depth-2-face)) 1609 1612 (fontified t) 1612 1615 (fontified t face font-lock-string-face) 1615 1620 (fontified t) 1620 1623 (fontified t face font-lock-string-face) 1623 1624 (fontified t face (rainbow-delimiters-depth-2-face)) 1624 1625 (fontified t) 1625 1631 (fontified t face font-lock-keyword-face) 1631 1632 (fontified t) 1632 1636 (fontified t face font-lock-constant-face) 1636 1640 (fontified t) 1640 1642 (fontified t face font-lock-keyword-face) 1642 1643 (fontified t face (rainbow-delimiters-depth-2-face)) 1643 1646 (fontified t) 1646 1649 (fontified t face font-lock-string-face) 1649 1654 (fontified t) 1654 1657 (fontified t face font-lock-string-face) 1657 1658 (fontified t face (rainbow-delimiters-depth-2-face)) 1658 1659 (fontified t) 1659 1665 (fontified t face font-lock-keyword-face) 1665 1666 (fontified t) 1666 1670 (fontified t face font-lock-constant-face) 1670 1674 (fontified t) 1674 1676 (fontified t face font-lock-keyword-face) 1676 1677 (fontified t face (rainbow-delimiters-depth-2-face)) 1677 1687 (fontified t) 1687 1688 (fontified t face (rainbow-delimiters-depth-2-face)) 1688 1689 (fontified t) 1689 1695 (fontified t face font-lock-keyword-face) 1695 1696 (fontified t) 1696 1700 (fontified t face font-lock-constant-face) 1700 1704 (fontified t) 1704 1706 (fontified t face font-lock-keyword-face) 1706 1707 (fontified t face (rainbow-delimiters-depth-2-face)) 1707 1708 (fontified t face font-lock-negation-char-face) 1708 1709 (fontified t face (rainbow-delimiters-depth-3-face)) 1709 1711 (fontified t) 1711 1714 (fontified t face font-lock-string-face) 1714 1715 (fontified t face (rainbow-delimiters-depth-3-face)) 1715 1716 (fontified t face (rainbow-delimiters-depth-2-face)) 1716 1717 (fontified t) 1717 1723 (fontified t face font-lock-keyword-face) 1723 1724 (fontified t) 1724 1728 (fontified t face font-lock-constant-face) 1728 1735 (fontified t) 1735 1741 (fontified t face font-lock-keyword-face) 1741 1742 (fontified t) 1742 1747 (fontified t face font-lock-constant-face) 1747 1755 (fontified t) 1755 1756 (fontified t face (rainbow-delimiters-depth-1-face)) 1756 1760 (fontified t) 1760 1763 (fontified t face font-lock-type-face) 1763 1764 (fontified t c-type c-decl-id-start face font-lock-type-face) 1764 1765 (fontified t) 1765 1783 (fontified t face font-lock-constant-face) 1783 1785 (fontified t) 1785 1796 (fontified t face font-lock-function-name-face) 1796 1797 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 1797 1801 (fontified t face font-lock-type-face) 1801 1802 (fontified t) 1802 1803 (fontified t face font-lock-variable-name-face) 1803 1804 (fontified t face (rainbow-delimiters-depth-1-face)) 1804 1805 (fontified t) 1805 1806 (fontified t face (rainbow-delimiters-depth-1-face)) 1806 1809 (fontified t) 1809 1815 (fontified t face font-lock-keyword-face) 1815 1816 (fontified t) 1816 1819 (fontified t face font-lock-constant-face) 1819 1821 (fontified t) 1821 1827 (fontified t face font-lock-type-face) 1827 1828 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 1828 1832 (fontified t face font-lock-type-face) 1832 1833 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 1833 1834 (fontified t) 1834 1844 (fontified t face font-lock-function-name-face) 1844 1845 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-2-face)) 1845 1861 (fontified t) 1861 1862 (fontified t face (rainbow-delimiters-depth-2-face)) 1862 1867 (fontified t) 1867 1870 (fontified t face font-lock-keyword-face) 1870 1871 (fontified t face (rainbow-delimiters-depth-2-face)) 1871 1873 (fontified t face font-lock-type-face) 1873 1874 (fontified t c-type c-decl-id-start face font-lock-type-face) 1874 1875 (fontified t) 1875 1876 (fontified t face font-lock-variable-name-face) 1876 1896 (fontified t) 1896 1897 (fontified t face (rainbow-delimiters-depth-3-face)) 1897 1898 (fontified t face (rainbow-delimiters-depth-3-face)) 1898 1902 (fontified t) 1902 1903 (fontified t face (rainbow-delimiters-depth-2-face)) 1903 1904 (fontified t) 1904 1906 (fontified t face font-lock-keyword-face) 1906 1907 (fontified t face (rainbow-delimiters-depth-2-face)) 1907 1908 (fontified t face font-lock-negation-char-face) 1908 1909 (fontified t face (rainbow-delimiters-depth-3-face)) 1909 1921 (fontified t) 1921 1922 (fontified t face (rainbow-delimiters-depth-4-face)) 1922 1923 (fontified t) 1923 1924 (fontified t face (rainbow-delimiters-depth-4-face)) 1924 1925 (fontified t face (rainbow-delimiters-depth-3-face)) 1925 1926 (fontified t face (rainbow-delimiters-depth-2-face)) 1926 1927 (fontified t) 1927 1933 (fontified t face font-lock-keyword-face) 1933 1934 (fontified t) 1934 1938 (fontified t face font-lock-constant-face) 1938 1945 (fontified t) 1945 1951 (fontified t face font-lock-keyword-face) 1951 1952 (fontified t) 1952 1957 (fontified t face font-lock-constant-face) 1957 1963 (fontified t) 1963 1964 (fontified t face (rainbow-delimiters-depth-1-face)) 1964 1968 (fontified t) 1968 1971 (fontified t face font-lock-type-face) 1971 1972 (fontified t c-type c-decl-id-start face font-lock-type-face) 1972 1973 (fontified t) 1973 1991 (fontified t face font-lock-constant-face) 1991 1993 (fontified t) 1993 1999 (fontified t face font-lock-function-name-face) 1999 2000 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2000 2004 (fontified t face font-lock-type-face) 2004 2005 (fontified t) 2005 2006 (fontified t face font-lock-variable-name-face) 2006 2007 (fontified t face (rainbow-delimiters-depth-1-face)) 2007 2008 (fontified t) 2008 2009 (fontified t face (rainbow-delimiters-depth-1-face)) 2009 2012 (fontified t) 2012 2018 (fontified t face font-lock-keyword-face) 2018 2019 (fontified t) 2019 2022 (fontified t face font-lock-constant-face) 2022 2024 (fontified t) 2024 2030 (fontified t face font-lock-type-face) 2030 2031 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 2031 2035 (fontified t face font-lock-type-face) 2035 2036 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 2036 2037 (fontified t) 2037 2044 (fontified t face font-lock-function-name-face) 2044 2045 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-2-face)) 2045 2061 (fontified t) 2061 2062 (fontified t face (rainbow-delimiters-depth-2-face)) 2062 2065 (fontified t) 2065 2067 (fontified t) 2067 2070 (fontified t face font-lock-keyword-face) 2070 2071 (fontified t face (rainbow-delimiters-depth-2-face)) 2071 2073 (fontified t face font-lock-type-face) 2073 2074 (fontified t c-type c-decl-id-start face font-lock-type-face) 2074 2075 (fontified t) 2075 2076 (fontified t face font-lock-variable-name-face) 2076 2093 (fontified t) 2093 2094 (fontified t face (rainbow-delimiters-depth-3-face)) 2094 2095 (fontified t face (rainbow-delimiters-depth-3-face)) 2095 2099 (fontified t) 2099 2100 (fontified t face (rainbow-delimiters-depth-2-face)) 2100 2101 (fontified t) 2101 2103 (fontified t face font-lock-keyword-face) 2103 2104 (fontified t face (rainbow-delimiters-depth-2-face)) 2104 2105 (fontified t face font-lock-negation-char-face) 2105 2106 (fontified t face (rainbow-delimiters-depth-3-face)) 2106 2112 (fontified t) 2112 2115 (fontified t) 2115 2116 (fontified t face (rainbow-delimiters-depth-4-face)) 2116 2117 (fontified t) 2117 2118 (fontified t face (rainbow-delimiters-depth-4-face)) 2118 2119 (fontified t face (rainbow-delimiters-depth-3-face)) 2119 2120 (fontified t face (rainbow-delimiters-depth-2-face)) 2120 2121 (fontified t) 2121 2127 (fontified t face font-lock-keyword-face) 2127 2128 (fontified t) 2128 2132 (fontified t face font-lock-constant-face) 2132 2136 (fontified t) 2136 2139 (fontified t face font-lock-comment-delimiter-face) 2139 2182 (fontified t face font-lock-comment-face) 2182 2184 (fontified t) 2184 2187 (fontified t face font-lock-comment-delimiter-face) 2187 2197 (fontified t face font-lock-comment-face) 2197 2200 (fontified t) 2200 2206 (fontified t face font-lock-keyword-face) 2206 2207 (fontified t) 2207 2212 (fontified t face font-lock-constant-face) 2212 2220 (fontified t) 2220 2221 (fontified t face (rainbow-delimiters-depth-1-face)) 2221 2225 (fontified t) 2225 2228 (fontified t face font-lock-type-face) 2228 2229 (fontified t c-type c-decl-id-start face font-lock-type-face) 2229 2230 (fontified t) 2230 2248 (fontified t face font-lock-constant-face) 2248 2250 (fontified t) 2250 2258 (fontified t face font-lock-function-name-face) 2258 2259 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 2259 2263 (fontified t face font-lock-type-face) 2263 2264 (fontified t) 2264 2265 (fontified t face font-lock-variable-name-face) 2265 2266 (fontified t face (rainbow-delimiters-depth-1-face)) 2266 2267 (fontified t) 2267 2268 (fontified t face (rainbow-delimiters-depth-1-face)) 2268 2271 (fontified t) 2271 2273 (fontified t face font-lock-keyword-face) 2273 2274 (fontified t face (rainbow-delimiters-depth-2-face)) 2274 2284 (fontified t) 2284 2285 (fontified t face (rainbow-delimiters-depth-2-face)) 2285 2286 (fontified t) 2286 2292 (fontified t face font-lock-keyword-face) 2292 2293 (fontified t) 2293 2297 (fontified t face font-lock-constant-face) 2297 2304 (fontified t) 2304 2310 (fontified t face font-lock-keyword-face) 2310 2311 (fontified t) 2311 2316 (fontified t face font-lock-constant-face) 2316 2322 (fontified t) 2322 2323 (fontified t face (rainbow-delimiters-depth-1-face)) 2323 2325 (fontified t)) . 43) (undo-tree-id1645 . -9) (undo-tree-id1646 . -2302) (undo-tree-id1647 . -2302) (undo-tree-id1648 . -2319) (undo-tree-id1649 . -2319) (undo-tree-id1650 . -2318) (undo-tree-id1651 . -2318) (undo-tree-id1652 . -2299) (undo-tree-id1653 . -2299) (undo-tree-id1654 . -2269) (undo-tree-id1655 . -2269) (undo-tree-id1656 . -2322) (undo-tree-id1657 . -2322) (undo-tree-id1658 . -1865) (undo-tree-id1659 . -1865) (undo-tree-id1660 . -1864) (undo-tree-id1661 . -1864) (undo-tree-id1662 . -1807) (undo-tree-id1663 . -1807) (undo-tree-id1664 . -1805) (undo-tree-id1665 . -1805) (undo-tree-id1666 . -1760) (undo-tree-id1667 . -1760) (undo-tree-id1668 . -1757) (undo-tree-id1669 . -1757) (undo-tree-id1670 . -1755) (undo-tree-id1671 . -1755) (undo-tree-id1672 . -1752) (undo-tree-id1673 . -1752) (undo-tree-id1674 . -1749) (undo-tree-id1675 . -1749) (undo-tree-id1676 . -1733) (undo-tree-id1677 . -1733) (undo-tree-id1678 . -1557) (undo-tree-id1679 . -1557) (undo-tree-id1680 . -1602) (undo-tree-id1681 . -1602) (undo-tree-id1682 . -1604) (undo-tree-id1683 . -1604) (undo-tree-id1684 . -1638) (undo-tree-id1685 . -1638) (undo-tree-id1686 . -1672) (undo-tree-id1687 . -1672) (undo-tree-id1688 . -1702) (undo-tree-id1689 . -1702) (undo-tree-id1690 . -1730) (undo-tree-id1691 . -1730) (undo-tree-id1692 . -1556) (undo-tree-id1693 . -2112) (undo-tree-id1694 . -2112) (undo-tree-id1695 . -1556) (undo-tree-id1696 . -1556) (undo-tree-id1697 . -2267) (undo-tree-id1698 . -2267) (undo-tree-id1699 . -2225) (undo-tree-id1700 . -2225) (undo-tree-id1701 . -2222) (undo-tree-id1702 . -2222) (undo-tree-id1703 . -2220) (undo-tree-id1704 . -2220) (undo-tree-id1705 . -2217) (undo-tree-id1706 . -2217) (undo-tree-id1707 . -2214) (undo-tree-id1708 . -2214) (undo-tree-id1709 . -2198) (undo-tree-id1710 . -2198) (undo-tree-id1711 . -2197) (undo-tree-id1712 . -2197) (undo-tree-id1713 . -2182) (undo-tree-id1714 . -2182) (undo-tree-id1715 . -2134) (undo-tree-id1716 . -2134) (undo-tree-id1717 . -2065) (undo-tree-id1718 . -2065) (undo-tree-id1719 . -2064) (undo-tree-id1720 . -2064) (undo-tree-id1721 . -2010) (undo-tree-id1722 . -2010) (undo-tree-id1723 . -2008) (undo-tree-id1724 . -2008) (undo-tree-id1725 . -1968) (undo-tree-id1726 . -1968) (undo-tree-id1727 . -1965) (undo-tree-id1728 . -1965) (undo-tree-id1729 . -1963) (undo-tree-id1730 . -1963) (undo-tree-id1731 . -1960) (undo-tree-id1732 . -1960) (undo-tree-id1733 . -1959) (undo-tree-id1734 . -1959) (undo-tree-id1735 . -1943) (undo-tree-id1736 . -1943) (undo-tree-id1737 . -1940) (undo-tree-id1738 . -1940) (t 26079 33494 602257 782000)) nil (26079 33851 460206 188000) 0 nil])
nil
([nil nil ((#("// enum{atom_obj,atom_var,var,Inter,Init} select_token_class::stat=Init;
// enum{Atom_obj,Atom_var,Var,Inter,Init} select_token_class::stat=Init;
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 3 16 (fontified t face font-lock-comment-face c-in-sws t) 16 17 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 17 25 (fontified t face font-lock-comment-face c-in-sws t) 25 26 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 26 29 (fontified t face font-lock-comment-face c-in-sws t) 29 30 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 30 35 (fontified t face font-lock-comment-face c-in-sws t) 35 36 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 36 73 (fontified t face font-lock-comment-face c-in-sws t) 73 76 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 76 89 (fontified t face font-lock-comment-face c-in-sws t) 89 90 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 90 98 (fontified t face font-lock-comment-face c-in-sws t) 98 99 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 99 102 (fontified t face font-lock-comment-face c-in-sws t) 102 103 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 103 108 (fontified t face font-lock-comment-face c-in-sws t) 108 109 (fontified t face font-lock-comment-face c-in-sws t c-type c-decl-id-start) 109 146 (fontified t face font-lock-comment-face c-in-sws t)) . 176) (undo-tree-id1632 . -145) (undo-tree-id1633 . -98) (undo-tree-id1634 . -146) (undo-tree-id1635 . -146) (undo-tree-id1636 . -73) (undo-tree-id1637 . -73) (undo-tree-id1638 . -98) (undo-tree-id1639 . -98) (undo-tree-id1640 . -25) (undo-tree-id1641 . -98) (undo-tree-id1642 . -146) (undo-tree-id1643 . -25) (undo-tree-id1644 . -98) 274 (t 26079 33615 838921 465000)) nil (26079 33851 459701 110000) 0 nil])
([nil nil ((apply -3 3228 3255 undo--wrap-and-run-primitive-undo 3228 3255 ((3232 . 3235) 3239)) (t 26079 33851 488915 661000)) nil (26079 33993 890789 587000) 0 nil])
([nil nil ((apply -3 3326 3419 undo--wrap-and-run-primitive-undo 3326 3419 ((3330 . 3333) 3337))) nil (26079 33993 890788 961000) 0 nil])
([nil nil ((apply -3 3633 3676 undo--wrap-and-run-primitive-undo 3633 3676 ((3635 . 3638) 3642))) nil (26079 33993 890788 466000) 0 nil])
([nil nil ((apply -3 3710 3780 undo--wrap-and-run-primitive-undo 3710 3780 (("                                  " . 3710) (3710 . 3747) 3717))) nil (26079 33993 890787 858000) 0 nil])
([nil nil ((apply -3 1542 1557 undo--wrap-and-run-primitive-undo 1542 1557 ((1544 . 1547) 1551))) nil (26079 33993 890787 147000) 0 nil])
([nil nil ((apply -6 1184 1233 undo--wrap-and-run-primitive-undo 1184 1233 ((1208 . 1211) (1186 . 1189) 1184))) nil (26079 33993 890783 364000) 0 nil])
([nil nil ((apply -3 969 995 undo--wrap-and-run-primitive-undo 969 995 ((973 . 976) 980)) (t 26079 33993 908912 158000)) nil (26079 34003 835976 605000) 0 nil])
([nil nil ((apply -6 297 347 undo--wrap-and-run-primitive-undo 297 347 ((329 . 332) (299 . 302) 333)) (t 26079 34003 852245 249000)) nil (26079 34064 207079 357000) 0 nil])
([nil nil ((apply -3 642 669 undo--wrap-and-run-primitive-undo 642 669 ((646 . 649) 653))) nil (26079 34064 207078 500000) 0 nil])
([nil current ((apply -3 1537 1575 undo--wrap-and-run-primitive-undo 1537 1575 ((1539 . 1542) 1560))) nil (26079 34064 207074 322000) 0 nil])
nil

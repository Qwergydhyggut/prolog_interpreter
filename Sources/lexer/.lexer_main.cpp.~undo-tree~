(undo-tree-save-format-version . 1)
"09b5377aca137321bd0dafc41b0b41292af4cd43"
[nil nil nil nil (26064 36357 677269 506000) 0 nil]
([nil nil ((1682 . 1685) (t 26032 4137 868975 832000) 1636) nil (26064 36357 677267 954000) 0 nil])
([nil nil ((1685 . 1690)) nil (26064 36357 677266 537000) 0 nil])
([nil nil ((1690 . 1691)) nil (26064 36357 677266 25000) 0 nil])
([nil nil ((1691 . 1694)) nil (26064 36357 677265 166000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1697 1702 nil nil nil nil #s(yas--field 2 1704 1709 nil nil nil nil #s(yas--field 3 1711 1721 nil nil nil nil nil))) #s(yas--field 2 1704 1709 nil nil nil nil #s(yas--field 3 1711 1721 nil nil nil nil nil)) #s(yas--field 3 1711 1721 nil nil nil nil nil)) nil 0 nil #s(yas--field 3 1711 1721 nil nil nil nil nil) nil nil)) (1691 . 1722) (#("count(${1:IIter}, ${2:IIter}, ${3:const Tp &})" 0 46 (fontified nil)) . 1691) (1691 . 1737) (#("co" 0 2 (fontified nil)) . 1691) (1691 . 1693) (#("count(IIter, IIter, const Tp &)" 0 31 (fontified nil)) . -1691) (1691 . 1722) (#("cou" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1691) (undo-tree-id54 . -3) (undo-tree-id55 . -3) 1694) nil (26064 36357 677263 777000) 0 nil])
([nil nil ((apply yas--snippet-revive 1691 1722 #s(yas--snippet nil (#s(yas--field 1 1697 1702 nil nil nil nil #s(yas--field 2 1704 1709 nil nil nil nil #s(yas--field 3 1711 1721 nil nil nil nil nil))) #s(yas--field 2 1704 1709 nil nil nil nil #s(yas--field 3 1711 1721 nil nil nil nil nil)) #s(yas--field 3 1711 1721 nil nil nil nil nil)) nil 0 nil #s(yas--field 3 1711 1721 nil nil nil nil nil) nil nil))) nil (26064 36357 677261 14000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -1720) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1721) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . 1) (undo-tree-id53 . -1) 1722) nil (26064 36357 677260 120000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1719) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 1720) nil (26064 36357 677255 50000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-type-face)) . -1717) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -1718) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 1719) nil (26064 36357 677252 662000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1716) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 1717) nil (26064 36357 677246 337000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1711) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (fontified t)) . -1712) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("n" 0 1 (fontified t)) . -1713) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("s" 0 1 (fontified t)) . -1714) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -1715) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1716) nil (26064 36357 677241 81000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1710) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 1711) nil (26064 36357 677227 912000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1704) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("I" 0 1 (fontified t)) . -1705) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("t" 0 1 (fontified t)) . -1706) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("e" 0 1 (fontified t)) . -1707) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("r" 0 1 (fontified t)) . -1708) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("," 0 1 (fontified t)) . -1709) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1710) nil (26064 36357 677222 767000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1703) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1704) nil (26064 36357 677205 409000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1696) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("I" 0 1 (fontified t)) . -1697) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("I" 0 1 (fontified t)) . -1698) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t)) . -1699) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t)) . -1700) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("r" 0 1 (fontified t)) . -1701) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("," 0 1 (fontified t)) . -1702) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 1703) nil (26064 36357 677201 278000) 0 nil])
([nil nil ((1696 . 1698)) nil (26064 36357 677154 164000) 0 nil])
([nil nil ((1698 . 1699)) nil (26064 36401 752049 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 716 . 717) (#("
" 0 1 (fontified nil)) . -734) (714 . 735) 713 (t 26064 36357 699740 979000)) nil (26064 36417 173204 841000) 0 nil] [nil nil ((nil rear-nonsticky nil 1180 . 1181) (nil fontified nil 930 . 1181) (nil fontified nil 929 . 930) (nil fontified nil 714 . 929) (714 . 1181) 713 (t 26064 36357 699740 979000)) ((#("!!! /etc/portage/make.profile is not a symlink and will probably prevent most merges.
!!! It should point into a profile within /var/db/repos/gentoo/profiles/
!!! (You can safely ignore this message when syncing. It's harmless.)


!!! Your current profile is invalid. If you have just changed your profile
!!! configuration, you should revert back to the previous configuration.
!!! Allowed actions are limited to --help, --info, --search, --sync, and
!!! --version.
" 0 1 (fontified nil face font-lock-negation-char-face) 1 2 (fontified nil) 2 3 (fontified nil face font-lock-negation-char-face) 3 33 (fontified nil) 33 36 (fontified nil face font-lock-keyword-face) 36 47 (fontified nil) 47 50 (fontified nil face font-lock-keyword-face) 50 86 (fontified nil) 86 87 (fontified nil face font-lock-negation-char-face) 87 88 (fontified nil) 88 89 (fontified nil face font-lock-negation-char-face) 89 159 (fontified nil) 159 160 (fontified nil face font-lock-negation-char-face) 160 161 (fontified nil) 161 162 (fontified nil face font-lock-negation-char-face) 162 163 (fontified nil) 163 164 (fontified nil face (rainbow-delimiters-depth-2-face)) 164 172 (fontified nil) 172 178 (fontified nil face font-lock-type-face) 178 179 (fontified nil) 179 185 (fontified nil face font-lock-variable-name-face) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 215 (fontified nil) 215 216 (fontified nil face font-lock-warning-face) 216 227 (fontified nil) 227 228 (fontified nil face (rainbow-delimiters-depth-2-face)) 228 231 (fontified nil) 231 232 (fontified nil face font-lock-negation-char-face) 232 233 (fontified nil) 233 234 (fontified nil face font-lock-negation-char-face) 234 306 (fontified nil) 306 307 (fontified nil face font-lock-negation-char-face) 307 308 (fontified nil) 308 309 (fontified nil face font-lock-negation-char-face) 309 355 (fontified nil) 355 363 (fontified nil face font-lock-type-face) 363 364 (fontified nil) 364 377 (fontified nil face font-lock-variable-name-face) 377 379 (fontified nil) 379 380 (fontified nil face font-lock-negation-char-face) 380 381 (fontified nil) 381 382 (fontified nil face font-lock-negation-char-face) 382 448 (fontified nil) 448 451 (fontified nil face font-lock-keyword-face) 451 452 (fontified nil) 452 453 (fontified nil face font-lock-negation-char-face) 453 454 (fontified nil) 454 455 (fontified nil face font-lock-negation-char-face) 455 466 (fontified nil) 466 467 (rear-nonsticky nil fontified nil)) . 714) (undo-tree-id81 . -467) (undo-tree-id82 . -467) (undo-tree-id83 . -467) (undo-tree-id84 . -86) (undo-tree-id85 . -86) (undo-tree-id86 . -159) (undo-tree-id87 . -159) (undo-tree-id88 . -229) (undo-tree-id89 . -229) (undo-tree-id90 . -230) (undo-tree-id91 . -230) (undo-tree-id92 . -231) (undo-tree-id93 . -231) (undo-tree-id94 . -306) (undo-tree-id95 . -306) (undo-tree-id96 . -379) (undo-tree-id97 . -379) (undo-tree-id98 . -452) (undo-tree-id99 . -452) (undo-tree-id100 . -467) (undo-tree-id101 . -467) (undo-tree-id102 . -467) (undo-tree-id103 . -467) (undo-tree-id104 . -467) (undo-tree-id105 . -215) (undo-tree-id106 . -228) (undo-tree-id107 . -467) (undo-tree-id108 . -467) (undo-tree-id109 . -467) (undo-tree-id110 . -467) (undo-tree-id111 . -467) (undo-tree-id112 . -467) (undo-tree-id113 . -467) (undo-tree-id114 . -467) (undo-tree-id115 . -467) (undo-tree-id116 . -467) (undo-tree-id117 . -467) (undo-tree-id118 . -467) (undo-tree-id119 . -467) (undo-tree-id120 . -467) (undo-tree-id121 . -467) (undo-tree-id122 . -467) (undo-tree-id123 . -467) (undo-tree-id124 . -467) (undo-tree-id125 . -467) (undo-tree-id126 . -467) (undo-tree-id127 . -467) (undo-tree-id128 . -467) (undo-tree-id129 . -467) (undo-tree-id130 . -467) (undo-tree-id131 . -467) (undo-tree-id132 . -467) (undo-tree-id133 . -467) (undo-tree-id134 . -467) (undo-tree-id135 . -467) (undo-tree-id136 . -467) (undo-tree-id137 . -467) (undo-tree-id138 . -467) (undo-tree-id139 . -467) (undo-tree-id140 . -467) (undo-tree-id141 . -467) (undo-tree-id142 . -467) (undo-tree-id143 . -467) (undo-tree-id144 . -467) (undo-tree-id145 . -467) (undo-tree-id146 . -467) (undo-tree-id147 . -467) (undo-tree-id148 . -467) (undo-tree-id149 . -467) (undo-tree-id150 . -467) (undo-tree-id151 . -467) (undo-tree-id152 . -467) (undo-tree-id153 . -467) (undo-tree-id154 . -467) (undo-tree-id155 . -467) (undo-tree-id156 . -467) (undo-tree-id157 . -467) (undo-tree-id158 . -467) (undo-tree-id159 . -467) (undo-tree-id160 . -467) (undo-tree-id161 . -467) (undo-tree-id162 . -467) (undo-tree-id163 . -467) (undo-tree-id164 . -467) (undo-tree-id165 . -467) (undo-tree-id166 . -467) (undo-tree-id167 . -467) (undo-tree-id168 . -467) (undo-tree-id169 . -467) (undo-tree-id170 . -467) (undo-tree-id171 . -467) (undo-tree-id172 . -467) (undo-tree-id173 . -467) (undo-tree-id174 . -467) (undo-tree-id175 . -467) (undo-tree-id176 . -467) (undo-tree-id177 . -467) (undo-tree-id178 . -467) (undo-tree-id179 . -467) (undo-tree-id180 . -467) (undo-tree-id181 . -467) (undo-tree-id182 . -467) (undo-tree-id183 . -467) (undo-tree-id184 . -467) (undo-tree-id185 . -467) (undo-tree-id186 . -467) (undo-tree-id187 . -467) (undo-tree-id188 . -467) (nil fontified t 803 . 873) (nil fontified t 802 . 803) (nil fontified t 801 . 802) (nil fontified t 800 . 801) (nil fontified t 764 . 800) (nil fontified t 761 . 764) (nil fontified t 750 . 761) (nil fontified t 747 . 750) (nil fontified t 717 . 747) (nil fontified t 716 . 717) (nil fontified t 715 . 716) (nil fontified t 714 . 715) (nil fontified t 1165 . 1166) (nil fontified t 1162 . 1165) (nil fontified t 1096 . 1162) (nil fontified t 1095 . 1096) (nil fontified t 1094 . 1095) (nil fontified t 1093 . 1094) (nil fontified t 1091 . 1093) (nil fontified t 1078 . 1091) (nil fontified t 1077 . 1078) (nil fontified t 1069 . 1077) (nil fontified t 1023 . 1069) (nil fontified t 1022 . 1023) (nil fontified t 1021 . 1022) (nil fontified t 1020 . 1021) (nil fontified t 948 . 1020) (nil fontified t 947 . 948) (nil fontified t 946 . 947) (nil fontified t 945 . 946) (nil fontified t 942 . 945) (nil fontified t 941 . 942) (nil fontified t 930 . 941) (nil rear-nonsticky t 1180 . 1181)) (26064 36401 375050 20000) 0 nil])
([nil nil ((#("terminal" 0 8 (fontified t)) . 723) (undo-tree-id189 . -7) (undo-tree-id190 . -8) (undo-tree-id191 . -8)) nil (26064 36417 173203 392000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1647 . 1648) (nil fontified nil 1397 . 1648) (nil fontified nil 1396 . 1397) (nil fontified nil 1181 . 1396) (1181 . 1648)) ((#("!!! /etc/portage/make.profile is not a symlink and will probably prevent most merges.
!!! It should point into a profile within /var/db/repos/gentoo/profiles/
!!! (You can safely ignore this message when syncing. It's harmless.)


!!! Your current profile is invalid. If you have just changed your profile
!!! configuration, you should revert back to the previous configuration.
!!! Allowed actions are limited to --help, --info, --search, --sync, and
!!! --version.
" 0 1 (fontified nil face font-lock-negation-char-face) 1 2 (fontified nil) 2 3 (fontified nil face font-lock-negation-char-face) 3 33 (fontified nil) 33 36 (fontified nil face font-lock-keyword-face) 36 47 (fontified nil) 47 50 (fontified nil face font-lock-keyword-face) 50 86 (fontified nil) 86 87 (fontified nil face font-lock-negation-char-face) 87 88 (fontified nil) 88 89 (fontified nil face font-lock-negation-char-face) 89 159 (fontified nil) 159 160 (fontified nil face font-lock-negation-char-face) 160 161 (fontified nil) 161 162 (fontified nil face font-lock-negation-char-face) 162 163 (fontified nil) 163 164 (fontified nil face (rainbow-delimiters-depth-2-face)) 164 172 (fontified nil) 172 178 (fontified nil face font-lock-type-face) 178 179 (fontified nil) 179 185 (fontified nil face font-lock-variable-name-face) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 215 (fontified nil) 215 216 (fontified nil face font-lock-warning-face) 216 227 (fontified nil) 227 228 (fontified nil face (rainbow-delimiters-depth-2-face)) 228 231 (fontified nil) 231 232 (fontified nil face font-lock-negation-char-face) 232 233 (fontified nil) 233 234 (fontified nil face font-lock-negation-char-face) 234 306 (fontified nil) 306 307 (fontified nil face font-lock-negation-char-face) 307 308 (fontified nil) 308 309 (fontified nil face font-lock-negation-char-face) 309 355 (fontified nil) 355 363 (fontified nil face font-lock-type-face) 363 364 (fontified nil) 364 377 (fontified nil face font-lock-variable-name-face) 377 379 (fontified nil) 379 380 (fontified nil face font-lock-negation-char-face) 380 381 (fontified nil) 381 382 (fontified nil face font-lock-negation-char-face) 382 448 (fontified nil) 448 451 (fontified nil face font-lock-keyword-face) 451 452 (fontified nil) 452 453 (fontified nil face font-lock-negation-char-face) 453 454 (fontified nil) 454 455 (fontified nil face font-lock-negation-char-face) 455 466 (fontified nil) 466 467 (rear-nonsticky nil fontified nil)) . 1181) (undo-tree-id56 . -467) (undo-tree-id57 . -467) (undo-tree-id58 . -86) (undo-tree-id59 . -86) (undo-tree-id60 . -159) (undo-tree-id61 . -159) (undo-tree-id62 . -229) (undo-tree-id63 . -229) (undo-tree-id64 . -230) (undo-tree-id65 . -230) (undo-tree-id66 . -231) (undo-tree-id67 . -231) (undo-tree-id68 . -306) (undo-tree-id69 . -306) (undo-tree-id70 . -379) (undo-tree-id71 . -379) (undo-tree-id72 . -452) (undo-tree-id73 . -452) (undo-tree-id74 . -467) (undo-tree-id75 . -467) (undo-tree-id76 . -466) (undo-tree-id77 . -467) (undo-tree-id78 . -215) (undo-tree-id79 . -228) (undo-tree-id80 . -467) (nil fontified t 1270 . 1340) (nil fontified t 1269 . 1270) (nil fontified t 1268 . 1269) (nil fontified t 1267 . 1268) (nil fontified t 1231 . 1267) (nil fontified t 1228 . 1231) (nil fontified t 1217 . 1228) (nil fontified t 1214 . 1217) (nil fontified t 1184 . 1214) (nil fontified t 1183 . 1184) (nil fontified t 1182 . 1183) (nil fontified t 1181 . 1182) (nil fontified t 1632 . 1633) (nil fontified t 1629 . 1632) (nil fontified t 1563 . 1629) (nil fontified t 1562 . 1563) (nil fontified t 1561 . 1562) (nil fontified t 1560 . 1561) (nil fontified t 1558 . 1560) (nil fontified t 1545 . 1558) (nil fontified t 1544 . 1545) (nil fontified t 1536 . 1544) (nil fontified t 1490 . 1536) (nil fontified t 1489 . 1490) (nil fontified t 1488 . 1489) (nil fontified t 1487 . 1488) (nil fontified t 1415 . 1487) (nil fontified t 1414 . 1415) (nil fontified t 1413 . 1414) (nil fontified t 1412 . 1413) (nil fontified t 1409 . 1412) (nil fontified t 1408 . 1409) (nil fontified t 1397 . 1408) (nil rear-nonsticky t 1647 . 1648)) (26064 36401 367427 409000) 0 nil])
([nil current ((723 . 728)) nil (26064 36417 173192 861000) 0 nil])
nil
nil
